/*******************************************************************************
 * Copyright (c) 2022 - 2025 NVIDIA Corporation & Affiliates.                  *
 * All rights reserved.                                                        *
 *                                                                             *
 * This source code and the accompanying materials are made available under    *
 * the terms of the Apache License 2.0 which accompanies this distribution.    *
 ******************************************************************************/

// Compile and run with: `nvq++ sample_bell_state.cpp && ./a.out`

#include <cudaq.h>
#include <stdio.h>

// [Begin Bell Kernel C++]
auto bell_kernel = []() __qpu__ {
  cudaq::qarray<2> q;
  h(q[0]);
  cx(q[0], q[1]);
  mz(q);
};
// [End Bell Kernel C++]

int main() {
  // [Begin Sample Bell C++]
  // Sample the state generated by bell_kernel
  auto counts = cudaq::sample(bell_kernel);

  // Print to standard out
  counts.dump();

  // Fine-grained access to the bits and counts
  for (auto &[bits, count] : counts) {
    printf("Observed: %s, Count: %lu\n", bits.data(), count);
  }
  // [End Sample Bell C++]
  return 0;
}

