import cudaq
from cudaq import h, cx, mz

# [Begin Bell Kernel Python]
@cudaq.kernel()
def bell_kernel():
    q = cudaq.qvector(2)
    h(q[0])
    cx(q[0], q[1])
    mz(q)
# [End Bell Kernel Python]

# [Begin Sample Bell Python]
# Sample the state generated by bell_kernel
counts = cudaq.sample(bell_kernel)

# Print to standard out
counts.dump()

# Fine-grained access to the bits and counts
for bits, count in counts.items():
    print(f"Observed: {bits}, Count: {count}")
# [End Sample Bell Python]

if __name__ == "__main__":
    pass # Main logic is already at top level for snippet clarity