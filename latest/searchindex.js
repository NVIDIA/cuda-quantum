Search.setIndex({"docnames": ["api/api", "api/default_ops", "api/languages/cpp_api", "api/languages/python_api", "applications/python/adapt_qaoa", "applications/python/bernstein_vazirani", "applications/python/cost_minimization", "applications/python/deutsch_jozsa", "applications/python/deutschs_algorithm", "applications/python/digitized_counterdiabatic_qaoa", "applications/python/divisive_clustering_coresets", "applications/python/edge-detection", "applications/python/hadamard_test", "applications/python/hamiltonian_simulation", "applications/python/hybrid_qnns", "applications/python/krylov", "applications/python/logical_aim_sqale", "applications/python/qaoa", "applications/python/quantum_fourier_transform", "applications/python/quantum_teleportation", "applications/python/quantum_transformer", "applications/python/quantum_volume", "applications/python/readout_error_mitigation", "applications/python/shors", "applications/python/trotter", "applications/python/unitary_compilation_diffusion_models", "applications/python/vqe", "applications/python/vqe_advanced", "examples/python/executing_kernels", "examples/python/measuring_kernels", "examples/python/noisy_simulations", "examples/python/operators", "examples/python/optimizers_gradients", "examples/python/performance_optimizations", "examples/python/visualization", "index", "releases", "specification/cudaq", "specification/cudaq/algorithmic_primitives", "specification/cudaq/control_flow", "specification/cudaq/dynamic_kernels", "specification/cudaq/examples", "specification/cudaq/kernels", "specification/cudaq/machine_model", "specification/cudaq/namespace", "specification/cudaq/operations", "specification/cudaq/operators", "specification/cudaq/patterns", "specification/cudaq/platform", "specification/cudaq/synthesis", "specification/cudaq/types", "specification/index", "specification/quake-dialect", "using/applications", "using/backends/backends", "using/backends/cloud", "using/backends/cloud/braket", "using/backends/cloud/nvqc", "using/backends/dynamics", "using/backends/hardware", "using/backends/hardware/iontrap", "using/backends/hardware/neutralatom", "using/backends/hardware/photonic", "using/backends/hardware/superconducting", "using/backends/sims/mqpusims", "using/backends/sims/noisy", "using/backends/sims/photonics", "using/backends/sims/svsims", "using/backends/sims/tnsims", "using/backends/simulators", "using/basics/basics", "using/basics/build_kernel", "using/basics/kernel_intro", "using/basics/run_kernel", "using/basics/troubleshooting", "using/examples/building_kernels", "using/examples/examples", "using/examples/expectation_values", "using/examples/hardware_providers", "using/examples/introduction", "using/examples/multi_control", "using/examples/multi_gpu_workflows", "using/examples/quantum_operations", "using/extending/cudaq_ir", "using/extending/extending", "using/extending/mlir_pass", "using/extending/nvqir_simulator", "using/install/data_center_install", "using/install/install", "using/install/local_installation", "using/integration/cmake_app", "using/integration/cuda_gpu", "using/integration/integration", "using/integration/libraries", "using/quick_start", "versions"], "filenames": ["api/api.rst", "api/default_ops.rst", "api/languages/cpp_api.rst", "api/languages/python_api.rst", "applications/python/adapt_qaoa.ipynb", "applications/python/bernstein_vazirani.ipynb", "applications/python/cost_minimization.ipynb", "applications/python/deutsch_jozsa.ipynb", "applications/python/deutschs_algorithm.ipynb", "applications/python/digitized_counterdiabatic_qaoa.ipynb", "applications/python/divisive_clustering_coresets.ipynb", "applications/python/edge-detection.ipynb", "applications/python/hadamard_test.ipynb", "applications/python/hamiltonian_simulation.ipynb", "applications/python/hybrid_qnns.ipynb", "applications/python/krylov.ipynb", "applications/python/logical_aim_sqale.ipynb", "applications/python/qaoa.ipynb", "applications/python/quantum_fourier_transform.ipynb", "applications/python/quantum_teleportation.ipynb", "applications/python/quantum_transformer.ipynb", "applications/python/quantum_volume.ipynb", "applications/python/readout_error_mitigation.ipynb", "applications/python/shors.ipynb", "applications/python/trotter.ipynb", "applications/python/unitary_compilation_diffusion_models.ipynb", "applications/python/vqe.ipynb", "applications/python/vqe_advanced.ipynb", "examples/python/executing_kernels.ipynb", "examples/python/measuring_kernels.ipynb", "examples/python/noisy_simulations.ipynb", "examples/python/operators.ipynb", "examples/python/optimizers_gradients.ipynb", "examples/python/performance_optimizations.ipynb", "examples/python/visualization.ipynb", "index.rst", "releases.rst", "specification/cudaq.rst", "specification/cudaq/algorithmic_primitives.rst", "specification/cudaq/control_flow.rst", "specification/cudaq/dynamic_kernels.rst", "specification/cudaq/examples.rst", "specification/cudaq/kernels.rst", "specification/cudaq/machine_model.rst", "specification/cudaq/namespace.rst", "specification/cudaq/operations.rst", "specification/cudaq/operators.rst", "specification/cudaq/patterns.rst", "specification/cudaq/platform.rst", "specification/cudaq/synthesis.rst", "specification/cudaq/types.rst", "specification/index.rst", "specification/quake-dialect.md", "using/applications.rst", "using/backends/backends.rst", "using/backends/cloud.rst", "using/backends/cloud/braket.rst", "using/backends/cloud/nvqc.rst", "using/backends/dynamics.rst", "using/backends/hardware.rst", "using/backends/hardware/iontrap.rst", "using/backends/hardware/neutralatom.rst", "using/backends/hardware/photonic.rst", "using/backends/hardware/superconducting.rst", "using/backends/sims/mqpusims.rst", "using/backends/sims/noisy.rst", "using/backends/sims/photonics.rst", "using/backends/sims/svsims.rst", "using/backends/sims/tnsims.rst", "using/backends/simulators.rst", "using/basics/basics.rst", "using/basics/build_kernel.rst", "using/basics/kernel_intro.rst", "using/basics/run_kernel.rst", "using/basics/troubleshooting.rst", "using/examples/building_kernels.rst", "using/examples/examples.rst", "using/examples/expectation_values.rst", "using/examples/hardware_providers.rst", "using/examples/introduction.rst", "using/examples/multi_control.rst", "using/examples/multi_gpu_workflows.rst", "using/examples/quantum_operations.rst", "using/extending/cudaq_ir.rst", "using/extending/extending.rst", "using/extending/mlir_pass.rst", "using/extending/nvqir_simulator.rst", "using/install/data_center_install.rst", "using/install/install.rst", "using/install/local_installation.rst", "using/integration/cmake_app.rst", "using/integration/cuda_gpu.rst", "using/integration/integration.rst", "using/integration/libraries.rst", "using/quick_start.rst", "versions.rst"], "titles": ["Code documentation", "Quantum Operations", "CUDA-Q C++ API", "CUDA-Q Python API", "ADAPT-QAOA algorithm", "Bernstein-Vazirani Algorithm", "Cost Minimization", "The Deutsch-Jozsa Algorithm", "Deutsch\u2019s Algorithm", "Molecular docking via DC-QAOA", "Divisive Clustering With Coresets Using CUDA-Q", "Quantum edge detection", "Using the Hadamard Test to Determine Quantum Krylov Subspace Decomposition Matrix Elements", "Spin-Hamiltonian Simulation Using CUDA-Q", "Hybrid Quantum Neural Networks", "Multi-reference Quantum Krylov Algorithm - <span class=\"math notranslate nohighlight\">\\(H_2\\)</span> Molecule", "Anderson Impurity Model ground state solver on Infleqtion\u2019s Sqale", "Max-Cut with QAOA", "Quantum Fourier Transform", "Quantum Teleporation", "Quantum Transformer", "Quantum Volume", "Readout Error Mitigation", "Factoring Integers With Shor\u2019s Algorithm", "Computing Magnetization With The Suzuki-Trotter Approximation", "Compiling Unitaries Using Diffusion Models", "Variational Quantum Eigensolver", "VQE with gradients, active spaces, and gate fusion", "Executing Quantum Circuits", "Measurements", "Noisy Simulation", "Operators", "Optimizers and Gradients", "Optimizing Performance", "Visualization", "CUDA-Q", "CUDA-Q Releases", "Language Specification", "<span class=\"section-number\">12. </span>Quantum Algorithmic Primitives", "<span class=\"section-number\">8. </span>Control Flow", "<span class=\"section-number\">9. </span>Just-in-Time Kernel Creation", "<span class=\"section-number\">13. </span>Example Programs", "<span class=\"section-number\">6. </span>Quantum Kernels", "<span class=\"section-number\">1. </span>Machine Model", "<span class=\"section-number\">2. </span>Namespace and Standard", "<span class=\"section-number\">5. </span>Quantum Intrinsic Operations", "<span class=\"section-number\">4. </span>Quantum Operators", "<span class=\"section-number\">10. </span>Common Quantum Programming Patterns", "<span class=\"section-number\">11. </span>Quantum Platform", "<span class=\"section-number\">7. </span>Sub-circuit Synthesis", "<span class=\"section-number\">3. </span>Quantum Types", "Specifications", "Quake Dialect", "CUDA-Q Applications", "CUDA-Q Backends", "CUDA-Q Cloud Backends", "Amazon Braket", "NVIDIA Quantum Cloud", "Dynamics Simulation", "Quantum Hardware (QPU)", "Ion Trap", "Neutral Atom", "Photonic", "Superconducting", "Multiple QPUs", "Noisy Simulators", "Photonics Simulators", "State Vector Simulators", "Tensor Network Simulators", "CUDA-Q Circuit Simulation Backends", "CUDA-Q Basics", "Building your first CUDA-Q Program", "What is a CUDA-Q kernel?", "Running your first CUDA-Q Program", "Troubleshooting", "Building Kernels", "CUDA-Q by Example", "Computing Expectation Values", "Using Quantum Hardware Providers", "Introduction", "Multi-control Synthesis", "Multi-GPU Workflows", "Quantum Computing 101", "Working with the CUDA-Q IR", "Extending CUDA-Q", "Create your own CUDA-Q Compiler Pass", "Extending CUDA-Q with a new Simulator", "Installation from Source", "Installation Guide", "Local Installation", "CUDA-Q and CMake", "Using CUDA and CUDA-Q in a Project", "Integration with other Software Tools", "Integrating with Third-Party Libraries", "Quick Start", "CUDA-Q Versions"], "terms": {"c": [0, 1, 3, 10, 11, 15, 17, 20, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 89, 90, 91, 94, 95], "python": [0, 1, 2, 10, 13, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 86, 93, 94, 95], "quantum": [0, 3, 4, 7, 9, 13, 17, 22, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 43, 49, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 65, 68, 71, 72, 73, 75, 76, 77, 79, 81, 83, 86, 87, 89, 90, 91, 93, 94, 95], "oper": [0, 3, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 47, 49, 50, 51, 52, 57, 61, 63, 65, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 94, 95], "cuda": [1, 4, 6, 7, 8, 12, 14, 15, 17, 18, 20, 21, 24, 28, 30, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 78, 79, 80, 81, 82, 92], "q": [1, 4, 6, 7, 8, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 78, 79, 80, 81, 82, 92], "provid": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 15, 16, 18, 20, 22, 23, 24, 25, 26, 30, 31, 32, 35, 37, 38, 40, 43, 45, 46, 48, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 93], "default": [1, 2, 3, 20, 24, 27, 28, 29, 34, 38, 42, 45, 50, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 73, 78, 79, 81, 83, 86, 87, 89, 91, 93, 94], "set": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 25, 27, 28, 33, 34, 35, 38, 40, 42, 45, 52, 57, 58, 59, 64, 65, 66, 67, 68, 71, 73, 78, 81, 87, 89, 93, 94], "These": [1, 2, 4, 9, 15, 16, 17, 20, 21, 23, 25, 27, 30, 32, 37, 42, 45, 49, 50, 52, 57, 64, 68, 83, 87, 89], "can": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 48, 49, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 90, 93, 94, 95], "kernel": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 56, 57, 60, 61, 63, 65, 67, 68, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 89, 91, 93, 94, 95], "librari": [1, 2, 9, 13, 14, 16, 23, 26, 34, 35, 36, 37, 41, 42, 44, 49, 50, 58, 61, 65, 66, 67, 68, 77, 83, 85, 86, 89, 91, 92, 95], "sinc": [1, 2, 5, 8, 11, 16, 17, 18, 19, 20, 22, 23, 25, 28, 50, 64, 65, 67, 72, 77, 78, 81, 83, 89, 90, 93], "intrins": [1, 42, 49, 50, 52], "nativ": [1, 37, 43, 45, 46, 90], "support": [1, 2, 3, 13, 22, 28, 34, 35, 36, 37, 38, 42, 43, 45, 47, 50, 58, 59, 61, 63, 66, 68, 72, 73, 78, 79, 82, 85, 93, 94, 95], "specif": [1, 2, 3, 10, 13, 15, 25, 29, 35, 38, 42, 44, 45, 46, 47, 50, 52, 57, 58, 60, 61, 63, 64, 67, 68, 72, 73, 75, 79, 81, 82, 83, 86, 87, 89, 91, 93], "target": [1, 2, 3, 7, 8, 9, 10, 12, 14, 15, 17, 20, 27, 28, 30, 33, 34, 36, 38, 45, 48, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 94, 95], "depend": [1, 3, 7, 8, 10, 15, 17, 19, 23, 24, 25, 29, 33, 35, 38, 43, 52, 57, 64, 65, 67, 68, 93, 94], "backend": [1, 2, 5, 6, 9, 10, 12, 16, 21, 27, 32, 33, 35, 36, 38, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 73, 78, 83, 86, 87, 89, 93, 94, 95], "architectur": [1, 2, 14, 20, 35, 37, 43, 52, 61, 62, 63, 64, 78, 81, 82, 86, 87, 89, 94], "nvq": [1, 36, 38, 41, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 77, 78, 79, 80, 83, 86, 89, 90, 91, 93, 94, 95], "compil": [1, 2, 3, 10, 16, 35, 36, 37, 38, 41, 42, 43, 47, 49, 50, 56, 57, 60, 61, 62, 63, 64, 68, 73, 77, 78, 79, 80, 83, 86, 87, 89, 90, 91, 94, 95], "automat": [1, 3, 16, 27, 43, 61, 63, 64, 65, 67, 68, 78, 81, 87, 89, 93], "decompos": [1, 4, 21, 25], "appropri": [1, 2, 8, 9, 10, 18, 19, 37, 45, 64, 75, 87, 89], "The": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 91, 93, 94, 95], "section": [1, 7, 8, 9, 12, 16, 18, 23, 25, 27, 31, 33, 40, 54, 64, 67, 68, 69, 75, 81, 87, 89, 93, 94], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 34, 36, 38, 42, 54, 56, 57, 58, 60, 61, 65, 66, 67, 68, 75, 78, 81, 82, 87, 89, 93, 94, 95], "implement": [1, 2, 3, 4, 8, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 25, 30, 37, 38, 43, 44, 45, 47, 49, 50, 52, 61, 62, 66, 67, 78, 79, 83, 85, 86, 87, 89, 93], "transform": [1, 8, 14, 15, 25, 27, 35, 37, 41, 83, 85], "state": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 34, 35, 36, 38, 42, 43, 45, 50, 52, 54, 56, 57, 58, 61, 65, 69, 71, 73, 75, 77, 78, 79, 81, 86, 87, 93, 94, 95], "ar": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87, 89, 91, 93, 94, 95], "templat": [1, 2, 26, 38, 40, 41, 42, 45, 49, 50, 79, 83, 85, 86, 91, 93], "argument": [1, 2, 3, 8, 10, 17, 19, 20, 22, 28, 29, 34, 38, 40, 42, 49, 50, 56, 58, 60, 61, 63, 71, 73, 77, 78, 80, 81, 83, 86, 89, 93], "allow": [1, 2, 3, 6, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 24, 25, 27, 28, 32, 36, 38, 40, 42, 43, 58, 65, 66, 67, 68, 71, 72, 73, 80, 81, 82, 83, 85, 89, 90, 95], "invok": [1, 2, 3, 38, 40, 42, 47, 58, 62, 63, 67, 68, 79, 83, 93], "version": [1, 2, 3, 4, 5, 13, 14, 16, 17, 18, 23, 25, 28, 35, 36, 38, 47, 57, 58, 63, 64, 67, 68, 73, 83, 86, 87, 89, 90, 93, 94], "see": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 18, 19, 20, 21, 23, 25, 27, 33, 34, 36, 38, 40, 42, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 78, 79, 81, 82, 83, 85, 87, 89, 90, 91, 93, 94, 95], "addition": [1, 23, 36, 61, 89, 95], "overload": [1, 2, 3, 38, 45, 46, 50, 52], "broadcast": [1, 2, 3, 15, 17, 45, 81], "singl": [1, 2, 3, 4, 5, 7, 10, 13, 15, 16, 18, 19, 21, 24, 26, 27, 33, 34, 38, 41, 42, 43, 45, 50, 54, 57, 58, 62, 64, 65, 66, 68, 69, 73, 75, 77, 78, 79, 81, 82, 83, 93], "across": [1, 2, 3, 8, 12, 25, 27, 36, 45, 57, 58, 64, 67, 68, 69, 78, 81, 87, 89, 95], "vector": [1, 2, 3, 4, 6, 10, 11, 12, 14, 15, 19, 20, 21, 25, 34, 38, 40, 41, 42, 45, 48, 50, 52, 54, 56, 57, 64, 65, 66, 68, 69, 75, 78, 79, 80, 81, 86, 87], "For": [1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 31, 34, 36, 38, 40, 45, 52, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 78, 80, 82, 86, 87, 89, 91, 93, 94, 95], "exampl": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 45, 51, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 77, 78, 79, 81, 82, 85, 86, 87, 89, 90, 91, 93, 94, 95], "cudaq": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 42, 44, 47, 48, 49, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94], "qvector": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 38, 41, 42, 45, 49, 57, 64, 65, 71, 73, 75, 77, 78, 80, 81, 82, 83, 93, 94], "flip": [1, 2, 3, 6, 16, 21, 22, 29, 30, 65, 82], "each": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 32, 34, 36, 38, 40, 43, 48, 52, 54, 57, 58, 62, 64, 65, 68, 69, 73, 78, 81, 82, 83, 87, 89, 93, 94, 95], "thi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 93, 94, 95], "pauli": [1, 2, 3, 4, 7, 9, 10, 12, 15, 17, 19, 24, 28, 38, 46, 58, 73, 82], "matrix": [1, 2, 3, 16, 17, 19, 20, 21, 24, 25, 28, 30, 34, 35, 36, 54, 57, 58, 61, 67, 69, 75, 82, 86, 95], "It": [1, 2, 3, 7, 8, 10, 13, 18, 19, 21, 22, 24, 27, 35, 36, 38, 45, 50, 52, 58, 64, 66, 67, 73, 75, 78, 82, 83, 86, 89, 91, 94, 95], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95], "also": [1, 2, 3, 8, 10, 16, 18, 20, 22, 23, 25, 26, 28, 30, 32, 34, 36, 38, 42, 46, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 78, 81, 82, 83, 85, 86, 87, 89, 91, 94, 95], "known": [1, 2, 23, 25, 27, 42, 58, 79, 83], "NOT": [1, 38, 45, 82], "gate": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 30, 34, 35, 36, 45, 49, 50, 52, 61, 63, 65, 67, 68, 71, 75, 79, 80, 86, 95], "appli": [1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 38, 41, 42, 45, 49, 52, 57, 64, 65, 66, 68, 71, 75, 78, 79, 80, 82, 83, 86], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 41, 42, 45, 46, 47, 48, 50, 52, 57, 58, 63, 64, 65, 66, 67, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 91, 93, 94, 95], "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 93, 94, 95], "rotat": [1, 3, 4, 10, 12, 16, 17, 18, 20, 22, 23, 30, 34, 45, 46, 71, 77, 86], "\u03c0": 1, "about": [1, 2, 3, 8, 10, 11, 22, 23, 24, 25, 26, 34, 36, 38, 52, 54, 56, 57, 58, 64, 66, 67, 68, 72, 73, 78, 87, 89, 91, 92, 93, 94, 95], "axi": [1, 11, 14, 25, 26, 34], "enabl": [1, 2, 3, 5, 10, 16, 18, 28, 37, 38, 40, 42, 43, 45, 47, 48, 49, 50, 56, 58, 61, 62, 64, 68, 72, 73, 77, 78, 81, 83, 86, 87, 89, 93, 94], "one": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 34, 36, 38, 40, 41, 43, 45, 48, 52, 57, 58, 61, 62, 64, 66, 74, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 93, 94, 95], "superposit": [1, 5, 7, 8, 11, 17, 34, 38, 41, 50, 64, 66, 71, 73, 81, 82], "comput": [1, 2, 3, 4, 7, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 40, 41, 42, 48, 50, 52, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 72, 73, 76, 81, 86, 87, 91, 93, 94, 95], "basi": [1, 2, 3, 12, 15, 16, 18, 20, 22, 25, 27, 28, 29, 30, 50, 57, 64, 66, 82], "sqrt": [1, 3, 5, 7, 8, 11, 12, 15, 16, 18, 19, 22, 30, 34, 41, 58, 65, 78, 82, 94], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 57, 58, 60, 63, 64, 65, 66, 67, 68, 73, 75, 77, 78, 80, 81, 82, 83, 87, 89, 91, 93, 94, 95], "an": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 73, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95], "arbitrari": [1, 2, 3, 13, 25, 36, 58, 61, 63, 80, 93, 95], "\u03bb": 1, "exp": [1, 2, 15, 23, 41, 46, 58, 66], "i\u03bb": 1, "math": [1, 8, 13, 23, 57, 66], "pi": [1, 9, 10, 11, 13, 14, 17, 18, 20, 21, 23, 24, 26, 27, 32, 34, 41, 42, 47, 49, 57, 58, 62, 66, 78], "std": [1, 2, 3, 38, 40, 41, 42, 45, 46, 48, 49, 50, 57, 64, 65, 73, 78, 79, 85, 86, 91, 93], "number": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 38, 41, 46, 48, 50, 52, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 71, 73, 77, 78, 79, 80, 81, 82, 83, 86, 89, 94], "\u03b8": 1, "co": [1, 11, 18, 24, 34, 58, 66], "isin": 1, "sin": [1, 11, 18, 34], "its": [1, 2, 3, 6, 7, 8, 9, 10, 11, 15, 17, 18, 19, 21, 22, 30, 36, 37, 38, 48, 50, 52, 53, 57, 61, 64, 68, 73, 75, 78, 79, 82, 83, 86, 87, 89, 93, 94, 95], "4": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 57, 62, 64, 65, 66, 67, 75, 78, 81, 83, 87, 89, 93, 94, 95], "i\u03c0": 1, "two": [1, 2, 3, 7, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 32, 34, 43, 52, 58, 62, 63, 64, 65, 66, 68, 73, 75, 77, 78, 80, 81, 82, 89, 93], "qubit_1": [1, 8, 17, 75], "qubit_2": [1, 19], "univers": [1, 2, 10, 19, 25, 57, 82], "three": [1, 4, 12, 20, 22, 23, 25, 27, 43, 57, 63, 66, 77], "paramet": [1, 2, 3, 4, 6, 9, 10, 13, 14, 15, 16, 17, 20, 21, 23, 25, 26, 28, 38, 42, 45, 50, 56, 57, 58, 60, 61, 62, 63, 65, 68, 71, 75, 77, 78, 79, 81, 86, 87], "euler": [1, 58], "angl": [1, 2, 3, 6, 11, 12, 16, 18, 20, 22, 23, 32, 34, 41, 42, 45, 64, 66, 71, 77, 78], "theta": [1, 4, 9, 10, 11, 12, 14, 17, 18, 26, 27, 30, 32, 34, 38, 40, 41, 57, 64, 66, 75, 77], "phi": [1, 3, 12, 38, 40, 61, 66, 78, 83], "\u03c6": 1, "lambda": [1, 2, 4, 9, 10, 13, 15, 16, 17, 22, 23, 24, 27, 32, 38, 41, 42, 47, 58, 78, 80, 83], "i\u03c6": 1, "np": [1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 41, 42, 47, 49, 58, 62, 64, 66, 67, 68, 75, 78, 81, 87], "m_pi": [1, 41, 49, 78], "m_pi_2": [1, 41, 42, 57], "adj": [1, 45, 75], "method": [1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 31, 32, 38, 40, 45, 50, 56, 58, 61, 64, 65, 68, 69, 73, 75, 78, 79], "ani": [1, 2, 3, 7, 10, 15, 17, 20, 23, 24, 25, 27, 28, 30, 32, 34, 38, 42, 44, 45, 47, 49, 50, 56, 57, 58, 60, 61, 63, 65, 67, 71, 73, 74, 75, 78, 79, 80, 81, 86, 87, 89, 93, 94], "alloc": [1, 2, 3, 6, 7, 17, 25, 38, 40, 41, 42, 43, 50, 64, 67, 71, 73, 79, 80, 86], "now": [1, 5, 8, 10, 11, 16, 17, 18, 19, 20, 23, 25, 26, 27, 36, 52, 61, 65, 73, 78, 79, 80, 81, 89, 94, 95], "again": [1, 5, 7, 27, 28, 38, 52, 89, 91], "initi": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15, 16, 17, 18, 19, 20, 23, 24, 26, 27, 32, 38, 58, 63, 64, 66, 75, 78, 81, 82, 87, 89], "ctrl": [1, 2, 5, 7, 8, 11, 13, 17, 21, 23, 28, 32, 34, 38, 40, 41, 45, 57, 64, 71, 75, 77, 78, 79, 80, 81, 82, 83, 89, 94], "condit": [1, 2, 18, 19, 20, 25, 30, 38, 39, 40, 42, 43, 65, 68, 72, 82, 83], "more": [1, 2, 3, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 22, 23, 25, 27, 31, 34, 36, 40, 43, 45, 46, 52, 54, 55, 56, 57, 58, 61, 63, 64, 65, 67, 68, 72, 73, 75, 78, 81, 82, 87, 89, 91, 93, 94, 95], "wikipedia": [1, 58], "entri": [1, 2, 3, 15, 38, 42, 64, 75, 78, 83, 89, 93], "ctrl_1": 1, "ctrl_2": 1, "00": [1, 7, 10, 11, 16, 19, 20, 28, 30, 32, 65, 66, 73, 81, 82, 93, 94], "11": [1, 3, 7, 10, 11, 14, 16, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 32, 34, 36, 38, 58, 65, 66, 73, 81, 82, 83, 87, 89, 93, 94, 95], "onli": [1, 2, 3, 5, 8, 10, 11, 13, 19, 20, 22, 23, 25, 27, 28, 34, 36, 38, 42, 43, 47, 50, 52, 57, 58, 61, 63, 64, 65, 67, 68, 72, 78, 82, 83, 85, 87, 89, 93, 94, 95], "both": [1, 3, 5, 8, 11, 14, 16, 20, 23, 43, 52, 63, 64, 67, 68, 81, 82, 87, 89, 91], "000": [1, 18, 19, 22, 23, 57, 73, 78], "111": [1, 10, 18, 19, 22, 23], "follow": [1, 2, 3, 5, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 34, 36, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 81, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95], "common": [1, 3, 10, 12, 22, 23, 25, 26, 27, 38, 42, 45, 46, 83, 87], "convent": [1, 9, 14, 17, 28, 66], "all": [1, 2, 3, 4, 7, 10, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 52, 54, 57, 58, 60, 61, 64, 65, 66, 67, 68, 73, 75, 77, 78, 81, 82, 83, 87, 89, 90, 91, 93, 94, 95], "howev": [1, 7, 10, 16, 18, 19, 22, 25, 27, 28, 36, 52, 58, 60, 64, 93, 95], "behavior": [1, 2, 3, 10, 27, 36, 67, 95], "chang": [1, 2, 4, 5, 10, 11, 16, 18, 20, 23, 33, 36, 38, 42, 58, 73, 89, 94, 95], "instead": [1, 10, 30, 44, 47, 61, 64, 73, 87, 89, 93], "when": [1, 2, 3, 10, 15, 16, 17, 22, 23, 25, 36, 38, 43, 50, 52, 57, 64, 65, 67, 68, 73, 77, 78, 79, 83, 86, 87, 89, 93, 94, 95], "negat": [1, 2, 3, 45, 49, 50], "polar": [1, 20, 45, 49, 68], "syntax": [1, 10, 36, 37, 42, 43, 45, 47, 60, 75, 78, 91, 95], "preced": [1, 45, 63, 68], "01": [1, 4, 8, 11, 16, 19, 20, 25, 30, 32, 38, 65, 66, 82], "10": [1, 4, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29, 30, 32, 34, 36, 38, 41, 42, 65, 66, 67, 68, 73, 75, 78, 79, 82, 83, 87, 89, 91, 95], "notat": [1, 19, 66, 82], "context": [1, 2, 14, 43, 64, 67, 81, 86], "valid": [1, 2, 3, 20, 35, 42, 60, 68, 75, 78, 87, 89, 93], "either": [1, 2, 3, 7, 8, 14, 17, 20, 23, 43, 60, 61, 62, 63, 64, 66, 67, 68, 78, 82, 87, 89, 94], "similarli": [1, 8, 27, 64, 74, 82], "condition": [1, 20], "respect": [1, 2, 3, 4, 9, 16, 17, 20, 23, 27, 32, 38, 58, 59, 63, 64, 66, 73, 77, 81, 82, 87, 89, 94], "e": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 22, 23, 24, 25, 26, 31, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 57, 58, 60, 64, 65, 68, 78, 83, 86, 87, 89, 93, 94], "project": [1, 61, 67, 68, 78, 86, 87, 89, 90, 93], "onto": [1, 82], "eigenvector": [1, 2, 12, 15], "non": [1, 2, 3, 7, 9, 12, 13, 15, 20, 22, 23, 36, 38, 42, 43, 50, 64, 65, 67, 73, 77, 79, 95], "linear": [1, 4, 5, 10, 14, 15, 18, 20, 26, 30, 57, 66, 73, 78, 82], "avail": [1, 2, 3, 9, 10, 12, 20, 25, 27, 32, 35, 36, 37, 38, 42, 43, 45, 48, 49, 50, 51, 54, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 72, 73, 75, 76, 77, 78, 81, 83, 87, 89, 94, 95], "first": [1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 38, 50, 57, 60, 61, 63, 64, 67, 70, 75, 77, 78, 79, 80, 81, 83, 89, 94], "api": [1, 16, 28, 31, 34, 35, 36, 38, 40, 44, 45, 48, 50, 57, 58, 60, 61, 62, 63, 64, 65, 68, 73, 75, 78, 79, 86, 87, 89, 91, 93, 95], "regist": [1, 2, 3, 5, 7, 12, 16, 18, 20, 23, 26, 29, 38, 41, 43, 50, 61, 63, 64, 75, 78, 79, 80, 83, 86], "outsid": [1, 10, 36, 89, 93, 95], "Then": [1, 8, 22, 25, 29, 61, 78, 85, 86], "within": [1, 2, 3, 16, 20, 26, 36, 38, 42, 44, 46, 50, 62, 64, 67, 68, 72, 73, 75, 78, 79, 81, 82, 85, 87, 89, 90, 91, 93, 94, 95], "like": [1, 2, 3, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 23, 25, 26, 27, 28, 32, 33, 36, 38, 42, 50, 61, 62, 64, 66, 69, 73, 75, 78, 79, 82, 83, 87, 89, 90, 93, 94, 95], "built": [1, 2, 3, 6, 9, 10, 15, 18, 20, 27, 28, 30, 36, 63, 68, 72, 73, 87, 93, 94, 95], "abov": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 38, 40, 45, 57, 58, 63, 64, 65, 66, 67, 73, 75, 77, 78, 80, 82, 83, 86, 87, 89, 91, 93, 94], "level": [1, 2, 3, 16, 20, 27, 33, 36, 37, 38, 43, 45, 57, 58, 61, 64, 65, 66, 67, 68, 69, 83, 86, 90, 95], "register_oper": [1, 16, 75], "accept": [1, 2, 3, 20, 27, 28, 61, 71, 87, 89, 94], "identifi": [1, 2, 3, 7, 11, 16, 17, 23, 25, 87, 89], "string": [1, 2, 3, 4, 5, 7, 11, 20, 23, 31, 34, 38, 40, 41, 48, 58, 65, 66, 67, 73, 78, 79, 83, 89, 93], "numpi": [1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 41, 58, 66, 75, 78, 81, 87], "arrai": [1, 2, 3, 4, 8, 11, 12, 15, 16, 18, 19, 21, 22, 25, 28, 30, 32, 50, 52, 58, 61, 64, 66, 67, 75, 78, 79, 81, 83], "complex": [1, 2, 3, 4, 8, 9, 11, 13, 15, 19, 24, 30, 46, 52, 58, 64, 66, 73, 75, 78, 81, 82, 93], "A": [1, 2, 3, 4, 8, 9, 10, 12, 15, 17, 19, 20, 21, 22, 23, 24, 26, 32, 33, 34, 38, 41, 42, 45, 52, 56, 58, 60, 66, 69, 73, 75, 78, 80, 81, 82, 85, 86, 87, 89], "1d": [1, 2], "interpret": [1, 9, 72, 78, 87], "row": [1, 2, 3, 20, 34, 75], "major": [1, 87], "import": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 46, 57, 58, 61, 62, 63, 64, 65, 66, 67, 71, 73, 75, 77, 78, 79, 81, 82, 83, 87, 89, 93, 94], "custom_h": 1, "custom_x": [1, 75], "def": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 41, 42, 47, 49, 57, 58, 64, 65, 66, 71, 73, 75, 77, 78, 79, 80, 81, 82, 89, 94], "bell": [1, 16, 19, 38, 93], "sampl": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 16, 17, 20, 21, 22, 23, 25, 29, 30, 36, 40, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 70, 72, 75, 78, 79, 80, 81, 82, 86, 89, 93, 94, 95], "dump": [1, 2, 3, 30, 38, 41, 57, 64, 65, 73, 78, 79, 81, 93, 94], "macro": [1, 86], "cudaq_register_oper": 1, "uniqu": [1, 2, 3, 10, 17, 20, 22, 25, 38, 43, 45, 50, 64, 81, 91], "name": [1, 2, 3, 10, 16, 17, 19, 23, 38, 40, 45, 48, 57, 58, 61, 62, 64, 67, 69, 77, 78, 82, 83, 86, 87, 89, 90, 93, 94], "represent": [1, 2, 3, 4, 18, 19, 20, 25, 28, 34, 38, 42, 52, 58, 65, 66, 68, 83, 85, 86], "includ": [1, 2, 3, 15, 16, 17, 20, 21, 27, 36, 38, 41, 50, 54, 57, 58, 65, 67, 71, 72, 73, 75, 77, 78, 79, 80, 83, 85, 86, 87, 89, 91, 93, 94, 95], "m_sqrt1_2": 1, "__qpu__": [1, 2, 38, 41, 42, 49, 57, 64, 65, 71, 73, 77, 78, 79, 80, 83, 93, 94], "void": [1, 2, 3, 38, 40, 41, 42, 45, 46, 48, 49, 50, 65, 71, 73, 78, 80, 83, 85, 86, 91, 93, 94], "bell_pair": [1, 2, 3], "r": [1, 16, 22, 23, 45, 50, 57, 60, 63, 64, 67, 77, 78, 83, 89], "int": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 38, 41, 42, 49, 50, 57, 58, 64, 65, 66, 71, 73, 75, 77, 78, 79, 80, 81, 83, 86, 87, 91, 93, 94], "main": [1, 5, 10, 23, 25, 36, 38, 41, 52, 57, 65, 73, 77, 78, 79, 80, 83, 87, 89, 91, 93, 94, 95], "auto": [1, 2, 38, 40, 41, 42, 46, 49, 50, 57, 61, 64, 65, 67, 71, 73, 77, 78, 79, 80, 81, 83, 85, 93, 94], "count": [1, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 17, 20, 22, 23, 28, 38, 40, 41, 50, 57, 62, 63, 64, 65, 67, 73, 78, 79, 80, 81, 83, 86], "bit": [1, 2, 3, 5, 7, 8, 11, 16, 19, 21, 22, 23, 28, 30, 38, 41, 43, 50, 52, 64, 65, 66, 67, 78, 79, 80, 82, 86], "printf": [1, 38, 41, 50, 64, 77, 79, 80, 87], "n": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 38, 40, 41, 42, 45, 46, 49, 57, 58, 64, 65, 66, 69, 73, 75, 77, 78, 79, 80, 81, 82, 83, 87, 91, 94], "data": [1, 2, 9, 11, 14, 15, 16, 17, 18, 20, 26, 35, 38, 42, 44, 46, 52, 64, 67, 77, 79, 80, 83, 86, 88, 89, 91, 93], "multi": [1, 4, 18, 19, 28, 34, 35, 36, 37, 40, 43, 45, 49, 54, 57, 63, 66, 69, 73, 75, 76, 77, 82, 86, 87, 93, 94, 95], "msb": 1, "order": [1, 2, 3, 10, 15, 16, 17, 19, 34, 38, 46, 58, 61, 63, 66, 67, 68, 73, 77], "big": [1, 9, 21, 28], "endian": [1, 21, 28, 66], "show": [1, 4, 9, 10, 13, 14, 16, 17, 18, 19, 20, 22, 25, 26, 27, 29, 34, 58, 64, 75, 77, 78, 87, 89], "differ": [1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 18, 19, 22, 23, 27, 28, 32, 34, 52, 54, 56, 57, 61, 62, 63, 64, 72, 73, 78, 81, 87, 89, 91, 94], "test": [1, 10, 14, 15, 20, 21, 22, 23, 27, 35, 40, 64, 67, 69, 81, 87, 89], "cnot": [1, 5, 10, 20, 45, 71, 75, 82, 93], "my_cnot": 1, "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 38, 41, 50, 57, 58, 64, 65, 66, 73, 75, 77, 78, 79, 80, 81, 82, 83, 87, 93, 94], "500": [1, 27, 82, 94], "exact": [1, 10, 12, 16, 21, 25, 68], "random": [1, 2, 3, 4, 5, 7, 9, 10, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 32, 34, 64, 68, 81], "construct": [1, 2, 9, 10, 12, 15, 21, 22, 24, 27, 32, 34, 35, 36, 38, 39, 40, 42, 50, 52, 58, 64, 71, 72, 73, 75, 76, 79, 83, 95], "second": [1, 2, 3, 4, 8, 9, 10, 13, 15, 17, 22, 24, 50, 57, 58, 67, 73, 75, 78, 81], "1j": [1, 4, 15, 16], "xy": [1, 2, 3, 34], "kron": [1, 22], "my_xi": 1, "custom_xy_test": 1, "undo": 1, "prior": [1, 2, 65, 66, 67, 78, 82, 87, 89, 94], "1000": [1, 3, 10, 14, 16, 20, 21, 22, 25, 28, 30, 38, 56, 60, 61, 63, 65, 66, 73, 79, 81, 82, 94], "mycnot": 1, "myxi": 1, "hardwar": [1, 10, 18, 23, 25, 28, 35, 36, 54, 55, 60, 61, 63, 73, 76, 93, 95], "synthes": [1, 3, 25, 45, 49, 83], "current": [1, 2, 3, 4, 10, 13, 34, 36, 38, 48, 61, 63, 64, 68, 86, 89, 93, 95], "orca": [1, 2, 36, 54, 59, 69, 95], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 34, 36, 38, 40, 43, 46, 50, 52, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 75, 77, 78, 79, 81, 82, 83, 86, 87, 89, 90, 93, 95], "doe": [1, 2, 3, 8, 10, 18, 19, 20, 25, 34, 36, 38, 42, 50, 57, 58, 64, 87, 89, 91, 93, 94, 95], "increment": [1, 2], "qumod": [1, 66], "up": [1, 2, 3, 8, 10, 13, 17, 18, 20, 21, 25, 34, 40, 46, 58, 61, 66, 67, 72, 77, 78, 81, 83, 86, 89], "maximum": [1, 3, 9, 10, 25, 66, 68, 81], "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 32, 34, 35, 38, 40, 42, 46, 50, 52, 57, 58, 61, 64, 66, 67, 68, 73, 76, 78, 81, 82, 83, 87, 93, 94], "repres": [1, 2, 3, 8, 9, 10, 11, 13, 17, 18, 19, 20, 25, 30, 34, 38, 52, 58, 62, 66, 67, 68, 78, 82, 83], "If": [1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 18, 19, 20, 21, 22, 23, 24, 28, 29, 34, 38, 52, 57, 58, 63, 65, 66, 67, 68, 73, 78, 81, 82, 87, 89, 93, 94], "where": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 33, 34, 37, 43, 45, 46, 50, 52, 56, 58, 60, 61, 62, 63, 65, 66, 67, 73, 75, 78, 81, 82, 86, 87, 89, 91, 94], "alreadi": [1, 2, 3, 16, 20, 23, 34, 66, 87, 89, 94], "ha": [1, 2, 3, 5, 8, 10, 16, 17, 19, 20, 21, 22, 23, 25, 28, 29, 30, 32, 38, 45, 52, 54, 57, 63, 65, 66, 67, 72, 73, 78, 81, 82, 87, 89, 93], "effect": [1, 16, 25, 52, 66, 73, 82, 94], "rangl": [1, 7, 13, 18, 22, 23, 25, 38, 94], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 57, 58, 62, 64, 66, 67, 73, 75, 78, 80, 81, 83, 86, 87, 89, 90, 94, 95], "cdot": [1, 5, 10, 13, 15, 23], "d": [1, 2, 3, 10, 15, 19, 41, 42, 43, 50, 60, 66, 78, 87, 89], "reduc": [1, 2, 12, 16, 22, 23, 67], "minimum": [1, 17, 26, 57, 65, 66], "vacuum": [1, 78], "phase": [1, 2, 3, 5, 7, 13, 15, 18, 25, 45, 61, 66, 78], "shifter": [1, 66, 78], "add": [1, 2, 3, 4, 10, 13, 15, 17, 26, 30, 34, 36, 47, 58, 65, 66, 68, 78, 79, 83, 85, 86, 87, 89, 95], "a_1": [1, 22, 23, 66], "creation": [1, 2, 10, 37, 51, 58, 66, 86], "dagger": [1, 4, 12, 15, 25, 30, 47, 58, 66, 82], "shift": [1, 14, 20, 57, 66, 89], "p": [1, 2, 4, 9, 10, 12, 22, 30, 66, 87, 89], "left": [1, 2, 4, 5, 8, 12, 13, 15, 16, 17, 18, 19, 20, 28, 66, 78, 86, 89], "right": [1, 2, 4, 12, 13, 16, 17, 18, 20, 66], "17": [1, 10, 11, 13, 16, 19, 20, 21, 22, 25, 34, 75, 83, 91], "beam": [1, 62, 66, 78], "splitter": [1, 62, 66, 78], "act": [1, 2, 3, 6, 8, 10, 13, 17, 31, 52, 58, 66, 82], "togeth": [1, 22, 35, 38, 66, 67, 83, 94], "parameter": [1, 2, 3, 9, 10, 12, 16, 17, 24, 26, 27, 38, 40, 42, 45, 57, 58, 66, 72, 75, 77, 79, 81], "relat": [1, 2, 10, 17, 23, 25, 66, 83], "reflect": [1, 41, 67, 68], "a_2": [1, 23, 66], "b": [1, 10, 11, 27, 32, 38, 66, 75, 78], "_": [1, 8, 14, 16, 22, 23, 25, 34, 58, 66], "rang": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 41, 42, 49, 50, 57, 58, 64, 66, 71, 75, 81, 89, 94, 95], "34": [1, 10, 22], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 32, 34, 38, 40, 41, 42, 45, 50, 52, 57, 58, 64, 65, 66, 68, 73, 77, 78, 79, 81, 83, 85, 86, 87, 91, 93], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 38, 39, 40, 41, 43, 52, 57, 58, 63, 64, 65, 66, 68, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 89, 93, 94], "input": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 20, 25, 27, 31, 32, 38, 40, 41, 42, 49, 50, 64, 73, 75, 77, 78, 81], "class": [2, 3, 10, 14, 20, 25, 36, 38, 40, 42, 46, 48, 50, 64, 68, 85, 86, 95], "spin_op": [2, 9, 31, 38, 41, 45, 57, 64, 73, 77], "gener": [2, 3, 4, 5, 7, 8, 9, 10, 12, 15, 16, 17, 18, 22, 23, 26, 28, 31, 34, 38, 40, 41, 42, 43, 45, 46, 49, 51, 54, 57, 60, 61, 63, 66, 69, 72, 77, 78, 79, 80, 82, 83, 85, 89, 93], "sum": [2, 3, 11, 13, 14, 15, 16, 17, 21, 22, 25, 31, 46, 50, 66, 78, 82], "tensor": [2, 3, 14, 20, 22, 31, 36, 46, 54, 57, 61, 64, 69, 86, 95], "product": [2, 3, 5, 13, 20, 22, 31, 35, 36, 46, 54, 57, 61, 69, 81, 94, 95], "expos": [2, 3, 10, 16, 38, 40, 46, 48, 52, 64, 86], "typic": [2, 25, 38, 50, 57, 71, 72, 77, 83, 90, 91], "algebra": [2, 46, 77, 82], "programm": [2, 3, 38, 39, 40, 42, 43, 45, 47, 48, 50, 60, 61, 62, 63, 64, 79], "defin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 57, 58, 61, 64, 65, 66, 67, 68, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 91, 93, 95], "primit": [2, 17, 37, 40, 43, 46, 50, 51, 64, 72, 93], "them": [2, 3, 4, 9, 10, 11, 12, 16, 19, 20, 22, 25, 34, 36, 52, 58, 71, 82, 83, 87, 89, 91, 93, 94, 95], "compos": [2, 3, 14, 17, 25, 42, 43, 62, 78, 83], "larger": [2, 3, 8, 10, 12, 17, 20, 25, 57, 61, 68, 81], "thereof": [2, 43, 46], "public": [2, 10, 38, 40, 46, 48, 50, 64, 85, 86, 89], "type": [2, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 22, 24, 31, 37, 38, 40, 42, 43, 45, 46, 51, 58, 60, 61, 63, 64, 65, 71, 75, 77, 79, 82, 83, 86, 89, 93], "spin_op_term": 2, "bool": [2, 3, 13, 16, 20, 38, 42, 45, 46, 48, 64, 86, 93], "we": [2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 30, 34, 36, 38, 41, 45, 47, 52, 58, 61, 63, 64, 65, 66, 68, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95], "term": [2, 3, 4, 5, 9, 13, 15, 16, 17, 19, 23, 24, 27, 28, 38, 45, 58, 60, 64, 73, 77, 89], "binari": [2, 3, 5, 10, 11, 14, 17, 18, 23, 28, 36, 63, 87, 91, 94, 95], "symplect": 2, "form": [2, 3, 10, 25, 27, 28, 34, 36, 38, 45, 50, 52, 58, 68, 83, 95], "size": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 38, 40, 41, 42, 43, 50, 57, 64, 65, 67, 68, 78, 79, 81, 89, 93], "nqubit": [2, 40, 41, 86], "element": [2, 3, 18, 22, 23, 25, 32, 35, 38, 50, 64, 81, 82], "x": [2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 40, 41, 42, 45, 46, 47, 49, 57, 58, 60, 63, 64, 65, 66, 67, 68, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 87, 89, 91, 94], "next": [2, 4, 5, 9, 10, 12, 15, 16, 21, 23, 24, 25, 27, 32, 34, 52, 78, 79, 83, 87], "z": [2, 3, 4, 6, 9, 10, 13, 14, 15, 16, 17, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 34, 38, 41, 45, 46, 57, 58, 64, 65, 73, 77, 79, 81, 87], "y": [2, 3, 4, 5, 8, 9, 10, 13, 14, 15, 16, 18, 22, 23, 24, 28, 29, 31, 32, 34, 38, 41, 45, 46, 57, 58, 64, 65, 73, 77, 78, 79, 87, 89, 91, 94], "site": [2, 3, 9, 16, 61, 78, 89, 94], "csr_spmatrix": 2, "tupl": [2, 3, 10, 16, 32, 38, 42, 78], "doubl": [2, 3, 26, 27, 38, 40, 41, 42, 45, 46, 49, 57, 64, 65, 66, 67, 69, 73, 77, 78, 86, 87, 89], "size_t": [2, 38, 40, 42, 46, 48, 50, 64, 78, 79, 86, 91, 93], "typedef": 2, "zero": [2, 3, 5, 6, 7, 11, 12, 14, 15, 22, 23, 25, 43, 58, 64, 66, 73, 82], "spars": 2, "function": [2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 60, 61, 63, 64, 66, 68, 71, 72, 73, 77, 79, 81, 83, 86, 91, 93, 95], "pair": [2, 3, 9, 15, 17, 19, 20, 21, 42, 48, 52, 78, 89], "const": [2, 38, 40, 41, 42, 45, 46, 48, 50, 57, 65, 78, 85, 86, 91, 93], "termdata": 2, "constructor": [2, 3], "take": [2, 3, 5, 8, 10, 11, 15, 16, 17, 18, 20, 21, 22, 24, 27, 32, 33, 36, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 56, 60, 61, 62, 63, 68, 72, 73, 75, 77, 78, 79, 80, 83, 87, 89, 94, 95], "coeffici": [2, 3, 4, 9, 15, 24, 31, 58, 66, 82], "constant": [2, 7, 8, 13, 20, 24, 50, 52, 83], "id": [2, 3, 38, 48, 50, 60, 61, 64, 68, 78, 81, 87, 89], "coeff": 2, "qubit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 40, 41, 42, 43, 46, 48, 49, 52, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 89, 94], "unordered_map": [2, 38, 78], "_term": 2, "full": [2, 3, 16, 20, 23, 33, 36, 57, 64, 65, 66, 68, 82, 83, 85, 87, 89, 90, 95], "composit": [2, 58], "spin": [2, 3, 4, 6, 9, 10, 12, 14, 15, 16, 17, 20, 24, 27, 28, 30, 32, 35, 38, 41, 46, 52, 57, 58, 64, 65, 73, 77, 78, 81, 83], "op": [2, 3, 4, 15, 16, 24, 52, 77, 83], "map": [2, 3, 5, 8, 9, 10, 16, 22, 25, 27, 30, 38, 50, 58, 78, 83, 89], "individu": [2, 3, 13, 43, 50, 64, 75], "bsf": 2, "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 34, 36, 38, 39, 41, 42, 43, 46, 50, 52, 57, 58, 60, 61, 62, 63, 64, 65, 68, 72, 73, 75, 77, 78, 83, 86, 89, 90, 91, 94, 95], "creat": [2, 3, 5, 7, 9, 10, 11, 13, 16, 17, 18, 19, 22, 23, 25, 26, 30, 34, 35, 38, 40, 46, 49, 57, 58, 61, 62, 64, 66, 72, 73, 78, 79, 81, 83, 84, 86, 87, 89, 90, 91, 93, 94], "ident": [2, 7, 15, 16, 17, 22, 23, 25, 52, 58, 66, 77], "numqubit": [2, 41], "given": [2, 3, 4, 8, 9, 10, 11, 12, 13, 17, 20, 22, 23, 24, 25, 27, 28, 38, 50, 58, 63, 64, 65, 66, 67, 68, 73, 77, 86], "o": [2, 10, 11, 12, 13, 16, 18, 27, 41, 57, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 83, 87, 89, 91, 93, 94], "copi": [2, 19, 20, 25, 34, 50, 52, 87, 89], "data_rep": 2, "serial": [2, 3, 15], "encod": [2, 3, 4, 5, 10, 17, 20, 23, 25, 38, 46, 64, 79, 82, 86], "via": [2, 3, 5, 14, 16, 19, 25, 28, 30, 35, 37, 38, 40, 43, 45, 47, 49, 50, 52, 58, 60, 61, 63, 64, 66, 67, 68, 77, 78, 79, 80, 82, 83, 85, 86, 87], "real": [2, 4, 9, 12, 13, 15, 16, 18, 21, 24, 25, 34, 61, 72, 78], "imaginari": [2, 15], "part": [2, 3, 15, 21, 23, 27, 38, 50, 83, 85, 87, 89], "append": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 32, 34, 42, 60, 64, 67, 75, 78, 81], "larg": [2, 4, 5, 11, 15, 20, 22, 27, 33, 36, 45, 64, 66, 68, 69, 72, 81, 82, 95], "end": [2, 3, 8, 12, 16, 18, 19, 21, 22, 24, 25, 28, 30, 34, 38, 50, 60, 61, 64, 65, 66, 67, 73, 75, 78, 82, 87, 89], "total": [2, 3, 9, 10, 13, 14, 15, 16, 18, 20, 25, 27, 57, 64, 67, 73, 78, 89], "destructor": 2, "iter": [2, 3, 10, 11, 15, 23, 25, 27, 28, 31, 32, 38, 50], "begin": [2, 3, 8, 10, 12, 15, 16, 18, 19, 22, 23, 25, 26, 28, 30, 34, 38, 50, 66, 71, 78, 79, 82], "start": [2, 3, 6, 7, 11, 16, 18, 19, 20, 23, 25, 28, 35, 36, 45, 50, 56, 61, 63, 64, 65, 73, 75, 78, 83, 85, 91, 95], "equal": [2, 12, 20, 25, 28, 34, 52, 64, 67, 73, 81, 82], "v": [2, 3, 4, 9, 12, 13, 15, 16, 17, 20, 23, 38, 41, 42, 47, 52, 57, 81, 83, 87], "noexcept": [2, 45], "subtract": 2, "multipli": [2, 15, 16, 20, 23], "true": [2, 3, 4, 5, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 32, 38, 42, 56, 58, 60, 61, 63, 65, 68, 87, 89, 94], "here": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 20, 22, 23, 25, 26, 27, 30, 31, 35, 36, 38, 40, 41, 42, 45, 47, 56, 57, 58, 61, 64, 65, 67, 68, 75, 77, 78, 79, 80, 83, 85, 87, 89, 93, 94, 95], "consid": [2, 5, 8, 10, 13, 16, 21, 22, 23, 24, 25, 41, 43, 52, 57, 64, 83, 89], "num_qubit": [2, 3, 13, 16, 20, 24, 46, 57], "num_term": [2, 46], "get_coeffici": [2, 4, 9, 13, 15, 24, 46], "get": [2, 3, 4, 11, 12, 15, 16, 18, 20, 21, 22, 23, 25, 27, 30, 32, 34, 36, 38, 40, 41, 50, 56, 57, 60, 61, 63, 64, 65, 73, 77, 78, 81, 86, 87, 91, 94, 95], "throw": [2, 34], "except": [2, 3, 10, 15, 16, 25, 34, 93], "get_raw_data": 2, "is_ident": [2, 46], "standard": [2, 3, 4, 12, 25, 27, 32, 37, 38, 39, 40, 42, 45, 51, 64, 71, 72, 81, 83, 85, 87, 89, 91, 93], "out": [2, 3, 8, 9, 10, 14, 15, 17, 18, 19, 23, 25, 27, 30, 32, 36, 38, 43, 50, 52, 64, 67, 68, 73, 74, 75, 77, 78, 86, 89, 90, 93, 95], "to_str": [2, 4, 9, 13, 15, 24, 73], "printcoeffici": 2, "getdatarepresent": 2, "getdatatupl": 2, "fulli": [2, 3, 10, 14, 16, 20, 25, 36, 37, 56, 64, 79, 83, 87, 89, 93, 95], "distribute_term": 2, "numchunk": 2, "distribut": [2, 12, 21, 22, 25, 27, 28, 29, 30, 36, 43, 57, 58, 67, 68, 69, 73, 77, 79, 81, 87, 93, 94, 95], "chunk": [2, 43], "for_each_term": [2, 4, 9, 13, 15, 24, 46], "give": [2, 17, 18, 22, 28, 36, 38, 53, 64, 68, 87, 89, 95], "functor": 2, "reduct": 2, "captur": [2, 17, 23, 27, 34, 36, 42, 58, 75, 95], "variabl": [2, 10, 15, 17, 19, 23, 27, 33, 36, 42, 43, 56, 57, 58, 60, 61, 62, 63, 64, 68, 74, 78, 81, 87, 89, 94, 95], "for_each_pauli": [2, 46], "thrown": [2, 93], "than": [2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 34, 45, 52, 57, 61, 65, 67, 68, 73, 75, 81, 82, 87, 89, 93], "user": [2, 3, 4, 5, 9, 10, 16, 22, 25, 33, 36, 38, 40, 41, 43, 44, 47, 50, 55, 56, 57, 58, 60, 61, 63, 64, 67, 68, 78, 83, 86, 87, 89, 95], "should": [2, 3, 13, 16, 18, 20, 23, 24, 27, 37, 38, 43, 45, 46, 48, 50, 60, 62, 64, 65, 67, 68, 73, 86, 87, 89, 93, 94], "pass": [2, 3, 4, 7, 9, 10, 14, 15, 16, 20, 21, 24, 27, 34, 35, 36, 38, 42, 43, 46, 50, 56, 60, 61, 62, 63, 64, 68, 75, 78, 80, 83, 84, 89, 93, 95], "index": [2, 3, 5, 10, 11, 14, 15, 20, 21, 46, 48, 50, 52, 58, 64, 67, 81, 86, 89], "complex_matrix": 2, "to_matrix": [2, 12, 15, 58], "dens": 2, "to_sparse_matrix": 2, "col": 2, "static": [2, 3, 38, 45, 50, 58, 83, 87, 93], "nterm": 2, "unsign": 2, "seed": [2, 3, 4, 9, 10, 16, 17, 20, 22, 25, 26, 27, 34, 68, 81], "random_devic": 2, "specifi": [2, 3, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 31, 32, 34, 38, 41, 42, 43, 45, 46, 47, 48, 50, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 73, 75, 78, 79, 81, 83, 86, 87, 89], "overrid": [2, 3, 38, 65, 66, 67, 68, 85, 87], "repeat": [2, 20, 21, 22, 23, 27, 38], "from_word": 2, "pauliword": 2, "word": [2, 3, 4, 9, 15, 23, 24], "g": [2, 3, 10, 13, 17, 23, 24, 25, 31, 37, 38, 39, 42, 43, 44, 45, 46, 52, 57, 58, 60, 64, 65, 68, 78, 83, 86, 87, 89, 90, 93, 94], "xyx": 2, "3rd": 2, "typenam": [2, 38, 40, 41, 42, 45, 49, 50, 91, 93], "qualifiedspinop": 2, "struct": [2, 38, 40, 41, 42, 45, 49, 57, 64, 65, 77, 78, 79, 80, 83, 85, 93], "constexpr": [2, 40, 50, 57], "dyn": [2, 50], "qudit": [2, 39, 43, 45, 66, 69], "system": [2, 3, 10, 13, 15, 16, 19, 24, 26, 27, 28, 33, 36, 38, 43, 48, 50, 52, 58, 64, 66, 67, 68, 72, 73, 77, 78, 81, 82, 85, 87, 90, 91, 93, 94, 95], "inlin": [2, 38, 83], "new": [2, 3, 4, 9, 10, 11, 15, 18, 25, 35, 36, 38, 40, 52, 72, 83, 84, 87, 89, 93, 94, 95], "enable_if_t": 2, "qreg": [2, 3, 15, 17, 57], "contain": [2, 3, 4, 10, 12, 16, 17, 20, 22, 25, 35, 36, 38, 43, 45, 48, 52, 54, 57, 65, 68, 72, 73, 77, 78, 83, 86, 87, 93, 94, 95], "dynam": [2, 16, 35, 36, 40, 42, 43, 50, 54, 61, 65, 71, 72, 83, 93, 95], "time": [2, 3, 7, 10, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 27, 28, 30, 34, 35, 36, 37, 38, 41, 43, 50, 51, 57, 62, 64, 65, 66, 67, 68, 73, 78, 79, 81, 82, 83, 87, 89, 94, 95], "By": [2, 10, 12, 20, 27, 33, 38, 45, 56, 57, 58, 60, 61, 63, 64, 65, 67, 73, 78, 81, 91], "value_typ": 2, "indic": [2, 3, 9, 20, 25, 29, 42, 45, 46, 50, 58, 86], "underli": [2, 3, 10, 27, 38, 48, 50, 61, 63, 64, 86], "interfac": [2, 3, 50, 67, 78, 86, 87, 89, 91], "idx": [2, 3, 4, 11, 14, 16, 20, 23, 25, 50, 58, 64, 81], "qspan": 2, "front": [2, 41, 49, 50, 80], "back": [2, 25, 41, 50, 52, 64, 78, 79, 89], "last": [2, 7, 22, 23, 25, 41, 50, 64, 75, 77], "slice": [2, 3, 50, 81], "clear": [2, 3, 19, 38, 50, 86], "destroi": [2, 50], "postcondit": [2, 50], "own": [2, 3, 10, 11, 20, 22, 30, 43, 48, 50, 66, 68, 83, 86, 87, 89, 93], "semant": [2, 3, 37, 42, 43, 44, 47, 49, 50, 52, 83], "held": 2, "explicit": [2, 12, 38, 49, 58, 78, 93], "determin": [2, 5, 7, 8, 9, 10, 11, 13, 21, 24, 27, 35, 67, 73], "check": [2, 7, 10, 20, 23, 25, 36, 57, 63, 78, 82, 87, 89, 94, 95], "norm": [2, 4, 22], "pre": [2, 3, 16, 25, 36, 38, 61, 63, 65, 68, 78, 80, 87, 93, 95], "exist": [2, 3, 9, 19, 20, 25, 34, 36, 37, 38, 43, 44, 73, 85, 87, 89, 93, 94, 95], "could": [2, 10, 12, 15, 23, 27, 34, 36, 57, 71, 82, 87, 95], "from_data": [2, 3, 11, 58], "retriev": [2, 3, 16, 28, 38, 58, 64, 78, 81], "get_stat": [2, 3, 4, 12, 13, 18, 19, 21, 24, 25, 28, 34, 64, 66, 75], "delet": [2, 50, 63, 89, 93], "cannot": [2, 3, 18, 34, 41, 42, 50, 52, 67, 82, 89], "move": [2, 14, 50, 85, 87, 89, 94], "assign": [2, 10, 17, 48, 64, 68, 87], "qview": [2, 5, 12, 13, 15, 18, 23, 41, 42, 49], "observe_result": [2, 3, 15, 20, 38, 77], "encapsul": [2, 14, 38, 50, 64, 93], "observ": [2, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 17, 20, 22, 24, 26, 27, 30, 32, 41, 58, 60, 61, 63, 64, 65, 66, 68, 70, 72, 77, 79, 80, 81, 82, 86, 94], "call": [2, 3, 4, 5, 6, 8, 10, 14, 15, 16, 17, 18, 20, 23, 25, 26, 27, 28, 30, 32, 34, 40, 41, 42, 45, 49, 58, 64, 65, 66, 67, 68, 72, 73, 75, 78, 79, 80, 81, 82, 83, 86, 87, 89, 91], "measur": [2, 3, 4, 5, 7, 8, 10, 12, 14, 15, 16, 18, 19, 20, 22, 27, 28, 30, 35, 38, 39, 41, 42, 43, 45, 52, 58, 62, 64, 65, 68, 71, 72, 73, 76, 78, 79, 81, 83, 86, 94], "execut": [2, 10, 13, 16, 18, 20, 25, 34, 35, 36, 37, 38, 40, 42, 43, 48, 49, 56, 60, 61, 62, 63, 64, 65, 67, 68, 72, 73, 74, 76, 77, 78, 79, 83, 86, 89, 90, 91, 93, 94, 95], "ansatz": [2, 4, 6, 10, 16, 17, 20, 26, 27, 38, 41, 57, 64, 77], "circuit": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 32, 35, 36, 37, 38, 42, 43, 46, 47, 51, 52, 54, 56, 57, 62, 63, 64, 65, 66, 67, 68, 72, 73, 75, 77, 78, 83, 85, 89, 95], "global": [2, 3, 10, 17, 25, 38, 42, 57, 73, 78, 87], "expect": [2, 3, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 20, 22, 24, 25, 26, 27, 28, 30, 32, 35, 38, 57, 58, 64, 67, 68, 73, 76, 81, 87, 89, 93, 94], "h": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 38, 40, 41, 45, 46, 47, 49, 50, 52, 57, 58, 60, 63, 64, 65, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 93, 94], "precomput": 2, "psi": [2, 4, 6, 8, 12, 15, 19, 20, 28, 34, 38, 41, 66, 73, 82], "sample_result": [2, 3, 23, 28, 38, 78, 93], "wa": [2, 3, 8, 10, 15, 20, 25, 38, 64, 79, 83, 87, 89, 90, 94], "shot": [2, 3, 9, 10, 11, 12, 21, 22, 23, 28, 38, 41, 56, 60, 61, 63, 65, 66, 73, 78, 79, 82, 86], "base": [2, 3, 4, 9, 10, 14, 16, 18, 20, 22, 23, 25, 27, 31, 36, 37, 38, 40, 44, 45, 50, 57, 58, 61, 64, 65, 66, 67, 68, 73, 83, 86, 87, 89, 91, 95], "raw_data": [2, 10, 38], "raw": [2, 3, 7, 10], "convers": [2, 38], "simpli": [2, 34, 82, 89, 94], "ignor": [2, 10, 23], "fine": [2, 38, 79, 80, 82], "grain": [2, 38, 79, 80], "explicitli": [2, 10, 12, 52, 63, 83, 91, 93], "request": [2, 3, 38, 57, 62, 64, 67, 68, 78, 89], "oppos": [2, 93], "observe_data": 2, "spinoptyp": [2, 38], "sub": [2, 3, 37, 38, 41, 42, 50, 51, 58, 89], "id_coeffici": [2, 38], "observe_opt": [2, 38], "option": [2, 3, 4, 8, 10, 12, 15, 16, 20, 21, 22, 26, 27, 28, 32, 33, 36, 38, 40, 45, 48, 55, 57, 58, 61, 63, 64, 69, 73, 77, 78, 80, 81, 86, 87, 89, 95], "async_observ": 2, "param": [2, 16, 17, 21, 41, 42, 45, 57, 81], "run": [2, 3, 5, 7, 8, 9, 10, 14, 15, 20, 21, 22, 27, 28, 35, 36, 37, 38, 41, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 77, 78, 79, 80, 81, 83, 86, 87, 89, 90, 93, 94, 95], "applic": [2, 5, 8, 10, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 31, 35, 38, 45, 49, 54, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 75, 76, 81, 89, 90, 93, 94], "num_trajectori": [2, 3, 65], "trajectori": [2, 3, 36, 54, 69, 95], "presenc": 2, "simul": [2, 6, 9, 12, 15, 21, 22, 23, 27, 28, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 60, 61, 70, 72, 73, 76, 78, 79, 81, 83, 84, 87, 94, 95], "noisi": [2, 21, 22, 25, 35, 36, 54, 69, 76, 78, 95], "quantumkernel": [2, 38, 49], "arg": [2, 3, 10, 14, 18, 22, 38, 40, 45, 49, 58, 64, 73, 83, 89], "is_invocable_r_v": 2, "member": [2, 3, 17, 42], "conveni": [2, 18, 31, 46, 52, 87, 89], "what": [2, 3, 9, 10, 11, 12, 17, 19, 22, 23, 27, 34, 35, 36, 54, 70, 86, 93, 95], "": [2, 3, 5, 7, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 30, 32, 34, 35, 36, 38, 45, 48, 52, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 77, 78, 79, 80, 83, 85, 87, 89, 90, 91, 94, 95], "spinopcontain": 2, "termlist": 2, "everi": [2, 3, 13, 17, 21, 22, 24, 36, 57, 64, 72, 73, 78, 79, 87, 94, 95], "concept": [2, 37, 38, 42, 44], "executioncontext": 2, "abstract": [2, 3, 31, 37, 38, 40, 45, 46, 48, 50, 64, 72], "how": [2, 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 36, 38, 40, 45, 56, 57, 58, 64, 65, 67, 68, 72, 73, 75, 76, 78, 79, 80, 81, 83, 86, 87, 89, 90, 93, 94, 95], "shots_": 2, "basic": [2, 6, 35, 57, 66, 67, 75, 78, 89, 94], "invoc": [2, 3, 40, 42, 48, 50, 64, 65, 66, 67, 68, 86], "expectationvalu": 2, "nullopt": 2, "optimization_result": [2, 38], "optresult": 2, "optim": [2, 4, 6, 9, 10, 13, 14, 15, 16, 17, 20, 22, 23, 27, 35, 36, 37, 47, 50, 52, 57, 58, 61, 65, 67, 68, 76, 83, 85, 87, 89, 95], "hasconditionalsonmeasureresult": 2, "fals": [2, 3, 4, 9, 10, 13, 15, 16, 19, 20, 21, 23, 24, 25, 68, 87, 89], "being": [2, 3, 5, 6, 19, 30, 37, 38, 52, 68, 78, 93], "statement": [2, 8, 29, 38, 39, 72], "noise_model": [2, 3, 16, 21, 22, 30, 65], "noisemodel": [2, 3, 16, 21, 22, 30, 65], "nullptr": 2, "canhandleobserv": 2, "flag": [2, 3, 13, 16, 36, 42, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 83, 85, 89, 93, 95], "handl": [2, 3, 8, 10, 24, 57, 58, 60, 61, 64, 68, 78, 86, 89, 93], "task": [2, 5, 10, 16, 25, 28, 34, 38, 46, 64, 67, 73, 81, 83, 86], "under": [2, 3, 16, 22, 25, 36, 58, 63, 85, 86, 87, 89, 93, 95], "asyncexec": 2, "occur": [2, 3, 8, 10, 11, 15, 22, 29, 38, 43, 65, 78, 82, 89], "asynchron": [2, 3, 12, 15, 16, 28, 38, 48, 64, 69, 73, 78, 81], "detail": [2, 3, 9, 12, 16, 17, 21, 36, 37, 43, 57, 58, 60, 61, 63, 65, 66, 67, 68, 69, 78, 81, 86, 87, 89, 94, 95], "futur": [2, 3, 36, 38, 63, 64, 67, 68, 78, 81, 87, 89, 94, 95], "futureresult": 2, "store": [2, 3, 7, 11, 13, 15, 16, 19, 24, 43, 50, 64, 66, 73, 78, 81, 82, 83], "async_result": [2, 78], "asyncresult": [2, 81], "async_sample_result": [2, 38, 64], "so": [2, 4, 5, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 32, 34, 36, 38, 58, 61, 62, 64, 66, 67, 79, 81, 82, 83, 85, 86, 87, 89, 93, 94, 95], "boundari": [2, 14], "unique_ptr": 2, "simulationst": 2, "pointer": [2, 3, 93], "amplitudemap": 2, "amplitud": [2, 3, 5, 11, 18, 21, 25, 58, 61, 64, 65, 66, 75, 78, 82], "overlapcomputest": 2, "overlap": [2, 3, 15, 64], "overlapresult": 2, "trace": [2, 3, 19, 25, 30, 57, 65], "kerneltrac": 2, "tracer": 2, "persist": [2, 38, 43, 57, 89], "resourc": [2, 23, 27, 32, 48, 55, 57, 61, 64, 67, 68, 73, 87, 89], "kernelnam": [2, 3], "batchiter": 2, "batch": [2, 20, 32, 43], "observe_n": 2, "sample_n": 2, "totaliter": 2, "registernam": [2, 38], "mid": [2, 3, 65, 68], "mode": [2, 3, 10, 28, 36, 38, 41, 43, 58, 62, 65, 66, 78, 83, 87, 95], "keep": [2, 5, 20, 22, 38, 68], "track": [2, 38, 65, 66, 82], "reorderidx": 2, "inform": [2, 3, 5, 8, 10, 11, 15, 16, 19, 20, 23, 25, 27, 31, 36, 38, 43, 45, 48, 50, 55, 57, 58, 63, 64, 66, 67, 68, 73, 78, 82, 83, 87, 89, 91, 92, 94, 95], "reorder": 2, "after": [2, 3, 7, 8, 10, 16, 19, 20, 34, 38, 56, 73, 75, 78, 83, 87, 89], "empti": [2, 3, 11, 15, 40, 46, 67, 78, 89], "mean": [2, 3, 5, 7, 16, 18, 19, 20, 21, 25, 27, 45, 52, 67, 78, 81, 89, 94], "char": [2, 41, 64, 73, 87, 93, 94], "invocationresultbuff": 2, "buffer": [2, 64, 93], "note": [2, 3, 10, 12, 17, 19, 20, 22, 23, 24, 25, 28, 34, 36, 41, 43, 52, 57, 61, 63, 64, 66, 73, 75, 78, 81, 82, 83, 87, 89, 93, 94, 95], "need": [2, 3, 5, 7, 10, 11, 13, 16, 17, 18, 20, 22, 23, 27, 28, 30, 34, 52, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 73, 77, 78, 81, 86, 87, 89, 90, 93, 94], "abl": [2, 10, 16, 20, 28, 38, 57, 63, 64, 73, 89, 93, 94], "numbertrajectori": 2, "calcul": [2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 19, 20, 23, 25, 28, 32, 57, 58, 64, 73, 78, 81], "explicitmeasur": 2, "whether": [2, 3, 7, 8, 20, 23, 25, 36, 65, 87, 89, 95], "concaten": [2, 3, 38], "job": [2, 16, 17, 38, 56, 57, 61, 64, 78, 81, 89], "qpu": [2, 3, 12, 15, 16, 20, 27, 28, 32, 35, 36, 37, 38, 43, 48, 54, 55, 56, 60, 61, 63, 69, 72, 73, 77, 78, 86, 93, 94, 95], "extra": [2, 14, 15, 45, 52, 63], "configur": [2, 9, 10, 16, 26, 48, 56, 57, 60, 61, 62, 63, 64, 67, 68, 78, 83, 86, 87, 89, 90, 93, 94], "later": [2, 8, 10, 15, 16, 19, 21, 29, 38, 42, 64, 78, 81, 87, 89], "server": [2, 62, 63, 64, 78, 81, 89], "file": [2, 10, 16, 20, 38, 45, 57, 60, 63, 64, 73, 74, 78, 81, 83, 85, 86, 87, 89, 90, 91, 93, 94], "read": [2, 3, 16, 17, 23, 75, 78], "wrap": [2, 38, 40, 52, 58], "t": [2, 3, 8, 11, 12, 13, 18, 24, 25, 34, 36, 38, 41, 42, 45, 46, 57, 58, 65, 66, 67, 75, 78, 79, 82, 87, 89, 95], "case": [2, 3, 7, 8, 9, 10, 15, 17, 18, 19, 20, 21, 22, 27, 29, 30, 32, 38, 52, 58, 65, 66, 71, 75, 77, 81, 87, 91, 93], "must": [2, 3, 8, 16, 21, 22, 23, 27, 28, 37, 38, 42, 44, 47, 50, 52, 56, 58, 61, 63, 65, 67, 68, 78, 82, 85, 86, 87, 89, 93, 94], "some": [2, 9, 10, 11, 14, 16, 18, 19, 20, 21, 23, 24, 27, 29, 33, 36, 38, 52, 57, 58, 64, 66, 67, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95], "point": [2, 3, 4, 10, 18, 34, 38, 42, 45, 64, 67, 81, 83, 86, 87, 89], "same": [2, 3, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 34, 38, 52, 63, 64, 73, 78, 80, 81, 83, 86, 87, 89, 93], "runtim": [2, 10, 37, 38, 40, 43, 57, 63, 64, 67, 68, 77, 83, 86, 89, 91], "_job": 2, "qpunamein": 2, "config": [2, 68, 86, 87, 89, 94], "info": [2, 20, 25, 57, 68, 74, 83], "requir": [2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 23, 25, 27, 32, 34, 38, 42, 44, 45, 47, 49, 50, 52, 57, 58, 60, 62, 63, 64, 65, 66, 67, 68, 78, 81, 82, 87, 90, 94], "date": [2, 61], "even": [2, 8, 10, 13, 17, 21, 23, 28, 36, 67, 81, 87, 89, 93, 95], "face": [2, 25, 44], "itself": [2, 49, 52, 64, 87, 89], "collect": [2, 3, 4, 9, 15, 16, 19, 73], "pertin": [2, 38, 44, 49, 50], "remot": [2, 3, 38, 43, 57, 64, 68, 69, 74], "rest": [2, 3, 5, 7, 11, 16, 19, 21, 37, 60, 63, 64, 68, 78, 81, 87, 89, 93], "wait": [2, 3, 10, 16, 28, 57, 64, 73, 78, 81], "until": [2, 3, 10, 16, 21, 25, 28, 73, 78], "readi": [2, 23, 26, 78, 89], "executionresult": 2, "correspond": [2, 3, 6, 9, 10, 12, 13, 15, 16, 17, 20, 24, 25, 27, 31, 32, 38, 61, 62, 67, 78, 79, 87, 89, 91], "well": [2, 3, 5, 12, 15, 16, 20, 22, 23, 24, 31, 36, 38, 41, 43, 58, 61, 67, 86, 89, 90, 93, 95], "integ": [2, 3, 15, 17, 20, 21, 28, 35, 42, 48, 64, 65, 66, 67, 73, 75], "1st": [2, 19, 30], "bitstr": [2, 3, 4, 5, 10, 17, 21, 38], "m": [2, 9, 10, 12, 15, 22, 34, 41, 46, 64, 65, 67, 68, 78, 83, 87, 89, 93, 94], "tripl": [2, 83], "long": [2, 20, 28, 38, 41, 73, 87, 89, 93, 94], "length": [2, 5, 11, 22, 78], "deseri": [2, 3], "discuss": [2, 10, 19, 32, 67, 85], "brief": [2, 86], "countsdictionari": [2, 38], "assum": [2, 3, 8, 9, 10, 16, 17, 19, 21, 22, 23, 43, 45, 50, 58, 64, 67, 73, 78, 86, 87, 89, 91], "expval": [2, 38], "other": [2, 3, 7, 9, 10, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 30, 34, 35, 37, 40, 42, 45, 50, 52, 54, 57, 58, 61, 62, 65, 67, 68, 69, 71, 72, 73, 78, 87, 89, 93, 94], "appendresult": 2, "globalregisternam": [2, 38], "classic": [2, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 26, 27, 37, 39, 42, 43, 45, 46, 50, 52, 64, 66, 72, 73, 78, 82, 83, 86, 87, 90, 93], "sequentialdata": 2, "sequenti": [2, 3, 38, 57, 65, 73], "collat": [2, 3], "holist": 2, "nullari": 2, "precomputedexp": 2, "__global__": [2, 3, 29, 38, 57, 78, 91], "has_expect": 2, "string_view": [2, 38, 86], "anoth": [2, 5, 10, 19, 21, 23, 41, 42, 52, 67, 75, 78, 80, 87], "found": [2, 9, 10, 12, 15, 16, 20, 23, 28, 34, 36, 38, 41, 45, 56, 58, 60, 63, 68, 73, 75, 86, 87, 89, 91, 92, 94, 95], "register_nam": [2, 3, 38], "tandem": [2, 81], "to_map": [2, 38], "regnam": 2, "merg": [2, 3, 83], "necessari": [2, 15, 20, 23, 63, 64, 67, 78, 83, 87, 89, 93], "document": [2, 3, 27, 34, 35, 36, 37, 45, 56, 57, 60, 61, 63, 67, 68, 78, 85, 86, 87, 89, 93, 95], "exp_val_z": 2, "deprec": [2, 3, 27, 64, 67], "probabl": [2, 3, 4, 21, 22, 23, 30, 38, 65, 66, 73, 82, 93], "most_prob": [2, 3, 4, 5, 9, 23, 41, 73, 82], "most": [2, 3, 4, 9, 10, 16, 17, 19, 23, 27, 28, 36, 38, 52, 57, 73, 75, 78, 81, 83, 87, 89, 90, 93, 95], "ostream": [2, 93], "output": [2, 3, 7, 8, 11, 14, 19, 20, 23, 25, 34, 42, 58, 62, 63, 70, 73, 83, 89, 93, 94], "stream": [2, 10, 43], "extract": [2, 3, 8, 10, 12, 15, 19, 23, 31, 38, 40, 41, 50, 52, 73, 83, 87, 89], "unord": 2, "get_margin": [2, 38], "marginalindic": [2, 38], "margin": [2, 22], "those": [2, 20, 23, 36, 38, 42, 52, 58, 64, 65, 67, 68, 83, 95], "subset": [2, 3, 10, 14, 25, 38, 42, 50, 52, 81], "rvalu": 2, "refer": [2, 4, 16, 17, 19, 23, 27, 35, 38, 42, 43, 50, 52, 56, 57, 60, 61, 63, 64, 68, 78, 87, 89], "newbitstr": 2, "oldbitstr": 2, "process": [2, 3, 10, 12, 18, 21, 25, 27, 28, 36, 37, 38, 43, 48, 57, 58, 61, 62, 63, 64, 66, 67, 68, 72, 78, 81, 82, 83, 87, 93, 95], "const_iter": 2, "cbegin": 2, "cend": 2, "get_total_shot": [2, 3], "has_even_par": 2, "pariti": [2, 58], "sample_opt": [2, 38], "async_sampl": 2, "explicit_measur": [2, 3, 38, 65], "suppli": [2, 3, 28, 63, 78], "express": [2, 3, 16, 19, 25, 32, 36, 38, 39, 40, 41, 43, 46, 58, 64, 72, 79, 80, 83, 93, 95], "final": [2, 3, 4, 6, 10, 11, 15, 16, 19, 24, 27, 29, 32, 58, 64, 77, 79, 81, 83, 86, 87], "variad": [2, 38], "concret": [2, 3, 17, 38, 73, 77], "evalu": [2, 3, 7, 8, 10, 15, 20, 27, 32, 38, 57, 64, 68, 77, 81], "dictionari": [2, 3, 7, 16, 22, 38, 73, 79], "extens": [2, 34, 37, 38, 44, 50, 86, 89, 91, 94], "describ": [2, 3, 5, 7, 12, 13, 15, 16, 19, 22, 23, 30, 48, 50, 54, 58, 63, 68, 80, 82, 86, 87, 89, 93], "effici": [2, 10, 13, 16, 23, 25, 27, 33, 65, 68], "manner": [2, 38, 64, 86], "client": [2, 38, 57, 87], "remain": [2, 3, 13, 49, 78, 87], "gpu": [2, 3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 18, 20, 21, 24, 25, 27, 28, 32, 35, 36, 37, 43, 54, 55, 64, 65, 69, 70, 72, 76, 86, 87, 91, 93, 94, 95], "devic": [2, 3, 10, 14, 16, 20, 21, 22, 25, 27, 28, 30, 32, 38, 41, 42, 45, 49, 56, 57, 61, 62, 63, 64, 65, 67, 73, 78, 83, 86, 89], "cpu": [2, 5, 10, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 30, 34, 35, 54, 57, 64, 65, 68, 69, 72, 73, 83, 87, 89, 93, 94], "memori": [2, 10, 14, 24, 25, 39, 42, 43, 50, 52, 57, 64, 65, 67, 68, 72, 83, 89], "primari": [2, 3, 5, 9, 38, 50, 86], "goal": [2, 5, 8, 10, 17, 23, 24, 27], "minim": [2, 4, 9, 10, 16, 17, 22, 25, 26, 27, 32, 34, 35, 87, 89, 94], "transfer": [2, 64, 67], "subclass": [2, 38, 86], "cusvstat": 2, "scalartyp": [2, 93], "remotesimulationst": 2, "nvqir": [2, 35, 83, 84, 86], "mpssimulationst": 2, "tensornetsimulationst": 2, "made": [2, 17, 23, 24, 73, 89], "extent": [2, 3, 11, 68], "enum": [2, 3, 58], "precis": [2, 3, 18, 26, 27, 57, 66, 67, 69, 75, 82], "enumer": [2, 3, 5, 16, 22, 25, 41], "fp32": [2, 3, 27, 57, 64, 67], "fp64": [2, 3, 4, 15, 16, 26, 33, 57, 64, 67], "simulation_precis": 2, "possibl": [2, 3, 7, 8, 9, 10, 16, 19, 21, 22, 25, 34, 37, 52, 66, 82, 89, 91, 93], "float": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 31, 32, 38, 41, 42, 45, 49, 57, 64, 67, 75, 77, 81, 86], "tensorstatedata": 2, "dimens": [2, 3, 6, 9, 10, 15, 17, 19, 20, 25, 32, 38, 58, 68], "state_data": 2, "variant": [2, 16, 45], "custatevec": [2, 57, 64, 67, 86], "attempt": [2, 20, 23, 89, 93], "care": [2, 20, 38, 93], "taken": [2, 10], "ensur": [2, 3, 15, 16, 20, 81, 83, 85, 87, 89, 93], "comparison": [2, 8], "compat": [2, 3, 44, 67, 68, 87], "registeredtyp": 2, "declar": [2, 16, 38, 42, 43, 45, 83, 86, 91, 93], "themselv": [2, 60, 71], "plugin": [2, 36, 68, 85, 87, 89, 95], "myinterfac": 2, "minimalist": 2, "dimension": [2, 11, 13, 15, 16, 19, 20, 25, 34, 50, 58, 75, 78], "minimal_eigenvalu": [2, 3], "eigenvalu": [2, 3, 12, 15, 17, 68], "thei": [2, 3, 6, 10, 15, 16, 17, 19, 20, 21, 23, 36, 38, 42, 50, 52, 66, 72, 81, 82, 87, 89, 95], "set_zero": 2, "reset": [2, 3, 29, 38, 41, 43, 68, 86], "Not": [2, 10, 42, 57, 58, 89], "exponenti": [2, 5, 11, 12, 13, 15, 18, 22, 24, 46, 81], "20": [2, 10, 11, 13, 15, 16, 20, 21, 22, 23, 25, 34, 44, 50, 65, 66, 75, 83, 91, 94], "taylor": 2, "seri": [2, 18, 62, 78], "approxim": [2, 4, 9, 10, 13, 15, 16, 17, 20, 21, 27, 35, 68, 73], "power": [2, 16, 21, 25, 34, 36, 54, 57, 58, 67, 95], "adjoint": [2, 18, 23, 40, 41, 45, 49, 52, 75, 83], "conjug": [2, 15, 21, 58], "transpos": [2, 11, 15], "particular": [2, 5, 17, 21, 34, 36, 58, 63, 89, 93, 95], "j": [2, 3, 4, 9, 10, 11, 12, 13, 15, 17, 18, 20, 22, 23, 24, 25, 28, 41, 42, 46, 66, 81, 87], "squar": [2, 21, 22, 50, 69, 82], "friend": [2, 19], "multipl": [2, 3, 7, 10, 12, 15, 22, 23, 27, 28, 32, 34, 36, 45, 54, 58, 62, 63, 66, 67, 68, 69, 72, 73, 78, 80, 82, 89, 95], "cross": [2, 16, 61], "matric": [2, 3, 13, 15, 65, 68], "side": [2, 27, 34, 52, 89], "scalar": [2, 3, 38], "addit": [2, 3, 8, 9, 10, 16, 18, 20, 23, 31, 38, 57, 68, 69, 71, 72, 81, 87, 93, 94], "kroneck": 2, "seen": [2, 8, 16, 23, 25], "manag": [2, 56, 57, 64, 87, 89], "instruct": [2, 16, 20, 23, 25, 36, 43, 45, 47, 52, 56, 57, 61, 63, 67, 68, 78, 79, 81, 83, 87, 89, 93, 94, 95], "control": [2, 3, 11, 12, 15, 17, 18, 20, 23, 35, 36, 37, 40, 41, 42, 43, 45, 47, 49, 50, 51, 52, 56, 58, 60, 61, 63, 64, 65, 68, 71, 72, 75, 76, 78, 79, 81, 82, 83, 86, 89, 95], "flow": [2, 14, 37, 38, 42, 51, 65, 72, 83], "path": [2, 3, 20, 34, 60, 63, 68, 83, 86, 87, 89], "thu": [2, 16, 19, 20, 57, 58, 64, 67, 82, 83], "might": [2, 8, 10, 15, 21, 25, 40, 45, 52, 57, 64, 80, 81], "produc": [2, 3, 5, 9, 10, 12, 15, 17, 20, 21, 23, 28, 32, 38, 41, 46, 47, 52, 71, 73, 79, 83, 86, 93], "elementtyp": 2, "is_integral_v": 2, "is_signed_v": 2, "exclus": [2, 8, 20], "stop": [2, 4, 16, 73, 89], "step": [2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 21, 23, 24, 25, 27, 32, 41, 58, 78, 81, 83, 87, 91, 94], "reach": [2, 21, 25], "is_invocable_v": 2, "draw": [2, 3, 5, 6, 7, 8, 10, 11, 18, 20, 22, 23, 25, 28, 30, 34, 67, 73], "utf": [2, 3], "8": [2, 3, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 36, 38, 41, 42, 43, 57, 58, 62, 63, 64, 65, 66, 67, 68, 78, 81, 83, 87, 89, 94, 95], "usag": [2, 3, 64], "iostream": [2, 57, 65, 71, 73, 78, 93], "mz": [2, 3, 5, 7, 8, 11, 12, 16, 19, 22, 23, 28, 29, 38, 40, 41, 52, 57, 63, 64, 65, 66, 71, 73, 75, 78, 79, 80, 81, 82, 83, 93, 94], "cout": [2, 57, 65, 73, 78, 93], "q0": [2, 3, 5, 6, 7, 8, 10, 11, 18, 20, 21, 23, 25, 28, 30, 34, 52], "q1": [2, 3, 5, 7, 8, 10, 11, 18, 20, 21, 23, 25, 28, 30, 34, 52], "ry": [2, 3, 6, 9, 10, 11, 12, 14, 19, 20, 32, 38, 41, 42, 45, 47, 57, 64, 75, 77], "59": [2, 3, 17, 20, 38, 41, 64, 77], "callabl": [2, 3, 37, 38, 40, 41, 42, 71, 77, 79], "trivial": [2, 10, 20, 21, 23, 38, 64, 77, 90], "signatur": [2, 3, 38, 40, 42, 80, 83], "without": [2, 3, 15, 25, 27, 38, 42, 49, 56, 60, 61, 63, 67, 68, 78, 87, 89, 93, 94], "regard": [2, 61], "depth": [2, 10, 53, 69], "etc": [2, 3, 42, 43, 58, 64, 67, 72, 78, 86, 87, 89, 94], "kraus_op": 2, "krau": [2, 3, 30, 65], "initializer_list": 2, "initlist": 2, "flatten": [2, 11, 25, 93], "nrow": [2, 14, 34], "ncol": [2, 34], "column": [2, 3, 34], "is_same_v": 2, "kraus_channel": [2, 16], "channel": [2, 3, 16, 19, 22, 30, 89], "action": [2, 38, 41, 42, 89], "amplitude_damping_channel": 2, "bit_flip_channel": [2, 65], "depolarization2": [2, 3], "depolarization_channel": [2, 30], "pauli1": [2, 3], "pauli2": [2, 3], "phase_damp": 2, "phase_flip_channel": 2, "y_error": 2, "inputlist": 2, "intern": [2, 3, 64], "inop": 2, "lvalu": 2, "make": [2, 3, 8, 9, 16, 18, 19, 20, 27, 34, 38, 64, 68, 83, 86, 87, 89, 91, 94], "get_op": 2, "push_back": [2, 42, 78], "is_unitary_mixtur": 2, "unitari": [2, 15, 18, 20, 26, 27, 35, 41, 45, 52, 75, 80, 82], "mixtur": [2, 3], "generateunitaryparamet": 2, "have": [2, 5, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 33, 34, 36, 38, 52, 57, 58, 64, 65, 66, 67, 68, 73, 78, 81, 82, 85, 87, 89, 90, 91, 93, 94, 95], "save": [2, 3, 11, 12, 13, 14, 19, 20, 21, 24, 29, 32, 57, 58, 64, 73, 83, 89, 91], "do": [2, 3, 7, 10, 13, 16, 18, 19, 20, 22, 23, 25, 36, 45, 47, 50, 52, 57, 64, 67, 68, 71, 72, 75, 79, 81, 82, 83, 87, 89, 90, 91, 94, 95], "modifi": [2, 4, 20, 41, 42, 45, 49, 52, 89], "want": [2, 10, 12, 16, 17, 19, 22, 23, 25, 34, 52, 57, 58, 64, 83, 86, 87, 89, 91, 94], "recomput": 2, "noise_model_typ": 2, "noise_typ": 2, "unknown": [2, 19, 83, 89], "unitary_op": 2, "scale": [2, 5, 20, 22, 23, 25, 45, 58, 65, 67, 68, 69, 81, 82], "hold": [2, 3, 15], "alwai": [2, 20, 38, 67, 89], "regardless": [2, 7, 8, 11, 15, 19, 36, 93, 95], "autom": [2, 86], "damp": [2, 3, 65], "error": [2, 3, 10, 12, 16, 21, 30, 34, 35, 36, 45, 52, 57, 58, 63, 65, 67, 68, 72, 78, 87, 89, 93, 95], "amplitude_damp": [2, 30], "x_error": 2, "z_error": 2, "depolar": [2, 3, 16, 30, 65], "depolarization1": [2, 3], "ix": [2, 3], "ii": [2, 3, 15, 17], "iz": [2, 3], "xi": [2, 3, 81], "xx": [2, 3, 13], "xz": [2, 3], "yi": [2, 3], "yx": [2, 3, 11], "yy": [2, 3, 13], "yz": [2, 3, 4], "zi": [2, 3], "zx": [2, 3], "zy": [2, 3], "zz": [2, 3, 13, 16], "15": [2, 10, 11, 13, 14, 16, 20, 21, 22, 25, 27, 34, 65, 75, 81, 83, 87, 89], "impli": [2, 3, 67], "therefor": [2, 3, 9, 15, 17, 18, 19, 23, 25, 27, 50, 83, 85], "maxim": [2, 17, 19, 57, 68, 71, 78], "mix": [2, 30, 58, 78], "9375": 2, "independ": [2, 22, 27, 38, 43, 58, 64, 67, 87], "happen": [2, 19, 23, 52, 89], "densiti": [2, 3, 16, 19, 21, 22, 30, 34, 54, 57, 69], "predicatefuncti": 2, "callback": [2, 3, 26, 27], "operand": [2, 3, 45, 64], "add_channel": [2, 3, 21, 22, 30], "quantumop": 2, "pred": [2, 83], "add_all_qubit_channel": [2, 3, 16, 65], "numcontrol": 2, "get_channel": [2, 3], "targetqubit": 2, "controlqubit": 2, "relev": [2, 6, 10, 14, 22, 48], "kernel_build": [2, 40], "kernel_builder_bas": 2, "kernelbuildertyp": 2, "mlir": [2, 3, 16, 35, 64, 83, 84, 85, 87], "getargu": [2, 40, 85], "quakevalu": [2, 3, 40], "isargstdvec": 2, "otherwis": [2, 3, 8, 13, 19, 21, 23, 73], "getnumparam": [2, 40], "qalloc": [2, 3, 16, 40, 57, 63, 64], "qvec": [2, 52, 63], "veq": [2, 3, 52, 83], "blockargu": 2, "object": [2, 3, 9, 10, 13, 16, 17, 20, 22, 24, 28, 32, 34, 38, 52, 64, 73, 83, 89], "simplic": [2, 16, 21], "goe": [2, 43], "scope": [2, 42, 43, 50, 83, 85], "befor": [2, 12, 16, 17, 20, 24, 34, 60, 61, 63, 74, 78, 87, 89], "mai": [2, 3, 8, 10, 15, 16, 17, 20, 22, 36, 38, 40, 42, 43, 45, 49, 50, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 72, 73, 74, 78, 80, 87, 89, 91, 93, 94, 95], "garbag": 2, "constantv": 2, "val": [2, 16, 22], "swap": [2, 9, 23, 25, 34, 41, 78], "mod": [2, 5, 23, 45], "perform": [2, 3, 5, 8, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 35, 36, 38, 41, 56, 58, 61, 63, 64, 65, 67, 68, 73, 75, 76, 78, 80, 81, 82, 85, 86, 87, 89, 93, 94, 95], "fredkin": 2, "between": [2, 3, 5, 8, 9, 10, 12, 13, 17, 19, 20, 21, 22, 23, 25, 26, 28, 34, 42, 52, 57, 58, 66, 71, 72, 73, 78, 81, 89, 91], "meant": [2, 37], "thin": [2, 3], "wrapper": [2, 3, 64], "around": [2, 3, 5, 8, 22, 24, 38, 94], "instanc": [2, 3, 8, 10, 19, 25, 38, 40, 45, 50, 57, 64, 72, 81, 89], "quak": [2, 3, 17, 35, 51, 83, 85], "dialect": [2, 3, 83, 85], "arithmet": [2, 42, 43], "getvalu": 2, "actual": [2, 22, 25, 38, 73, 86], "implicitlocopbuild": 2, "arith": [2, 52, 83], "constantfloatop": 2, "canvalidatenumel": 2, "stdvectyp": 2, "loop": [2, 5, 9, 10, 15, 17, 21, 24, 32, 39, 50, 71, 78, 81, 83], "know": [2, 5, 11, 19, 23, 34, 36, 52, 95], "bound": [2, 3, 9, 19, 22], "startidx": [2, 3], "subscript": [2, 3, 57, 60], "stdvec": [2, 52, 83], "constants": 2, "isstdvec": 2, "getrequiredel": 2, "veqtyp": 2, "divid": [2, 17, 23, 81], "invers": [2, 13, 18, 25, 41, 58], "write": [2, 3, 16, 74, 78, 82, 85, 89, 91], "u": [2, 4, 5, 6, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 23, 25, 26, 28, 34, 41, 42, 46, 47, 58, 61, 66, 71, 72, 73, 78, 80, 82, 83], "wai": [2, 3, 8, 15, 23, 27, 28, 32, 38, 49, 52, 56, 58, 61, 66, 73, 75, 81, 87], "code": [2, 3, 5, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 23, 26, 27, 31, 32, 34, 36, 37, 38, 40, 41, 42, 43, 46, 47, 49, 50, 52, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 73, 77, 78, 79, 81, 82, 83, 85, 86, 87, 90, 91, 93, 94, 95], "mlircontext": 2, "ctx": [2, 14, 85], "f": [2, 5, 7, 8, 10, 13, 16, 19, 20, 22, 23, 24, 25, 32, 41, 42, 58, 65, 87, 94], "high": [2, 16, 22, 56, 69, 81, 83, 93], "serv": [2, 3, 10, 42, 50, 57, 85, 87], "work": [2, 8, 9, 10, 12, 13, 15, 18, 20, 22, 23, 25, 27, 29, 35, 38, 57, 61, 64, 81, 84, 87, 89, 90, 93, 94], "subtyp": 2, "possibli": [2, 42], "deleg": [2, 57, 86, 89], "third": [2, 35, 92], "parti": [2, 19, 35, 92], "immut": 2, "mutabl": [2, 38], "gradient": [2, 4, 6, 11, 14, 20, 35, 57, 76], "df": [2, 22], "dx_i": 2, "queri": [2, 3, 5, 7, 8, 20, 38, 48, 64, 77, 81], "strategi": [2, 38, 43, 49, 86], "thing": [2, 80], "max": [2, 8, 10, 16, 25, 35, 57, 65, 67], "cobyla": [2, 3, 6, 10, 26, 27, 32, 38], "opt": [2, 42, 83, 85, 87, 89], "assert": [2, 5, 16, 23, 25, 27, 41, 42], "requiresgradi": [2, 38], "algo": 2, "opt_val": [2, 57], "opt_param": [2, 16, 38, 57], "dx": [2, 38], "virtual": [2, 36, 38, 57, 64, 73, 77, 81, 86, 87, 95], "achiev": [2, 16, 17, 18, 23, 38, 57, 63, 80, 81], "dim": [2, 3, 25, 57, 68], "optimizable_funct": [2, 38], "opt_funct": [2, 38, 57], "variat": [2, 4, 6, 10, 14, 15, 17, 27, 28, 32, 35, 38], "custom": [2, 3, 13, 16, 27, 30, 36, 38, 42, 58, 61, 64, 67, 75, 79, 85, 87, 89, 92, 93, 95], "ptrtoown": 2, "jdx": 2, "tensoridx": 2, "get_tensor": 2, "just": [2, 8, 10, 16, 17, 23, 28, 37, 51, 64, 66, 67, 73, 74, 79, 82, 83, 89], "rank": [2, 3, 64, 79], "get_num_tensor": 2, "get_num_qubit": [2, 48], "get_precis": [2, 3], "is_on_gpu": [2, 3], "to_host": 2, "hostptr": 2, "numel": 2, "pure": [2, 30, 41, 42, 49], "basisst": 2, "host": [2, 39, 41, 42, 43, 46, 50, 57, 64, 67, 77, 93, 94], "leverag": [2, 3, 10, 15, 20, 25, 38, 40, 42, 45, 49, 50, 64, 65, 79, 81, 83, 86, 90], "separ": [2, 10, 20, 25, 67, 87, 89], "mapper": 2, "inherit": [2, 39, 43, 64], "updat": [2, 10, 27, 36, 38, 60, 63, 78, 87, 94, 95], "protect": [2, 50, 86], "getexpectedvalu": 2, "central_differ": [2, 38], "forward_differ": 2, "parameter_shift": 2, "prescrib": 2, "kernelt": 2, "argsmapp": [2, 38], "setarg": 2, "nvqc": [2, 54, 55, 57], "setkernel": 2, "been": [2, 3, 19, 23, 25, 34, 57, 63, 65, 72, 73, 78, 87, 89], "funcatx": [2, 3], "func": [2, 38, 52, 83, 85], "clone": [2, 14, 19, 50, 85, 87], "deriv": [2, 8, 10, 12, 23, 38, 66, 82], "exp_h": [2, 38], "forward": [2, 14, 27, 32], "registri": [2, 89], "unit": [2, 3, 16, 28, 34, 37, 42, 43, 45, 48, 50, 61, 63, 72, 82], "certain": [2, 3, 8, 9, 16, 25, 29, 33, 50, 57, 64, 68, 86, 89], "logic": [2, 7, 8, 48, 50, 64], "connect": [2, 10, 14, 17, 36, 43, 48, 50, 52, 78, 87, 95], "queue": [2, 16, 38, 57, 78], "enqueu": 2, "quantum_platform": [2, 3, 48, 64, 77, 83], "baseremoterestqpu": 2, "baseremotesimulatorqpu": 2, "orcaremoterestqpu": 2, "_qpuid": 2, "setid": 2, "thread": [2, 3, 43, 64, 66, 67, 77, 78, 81, 86], "getexecutionthreadid": 2, "getnumqubit": 2, "getconnect": 2, "issimul": 2, "supportsconditionalfeedback": 2, "feedback": [2, 43, 72, 89], "supportsexplicitmeasur": 2, "remotecap": 2, "getremotecap": 2, "capabl": [2, 23, 24, 25, 57, 58, 65, 67, 68, 81, 87, 89], "setshot": 2, "_nshot": 2, "noth": [2, 7, 19], "wish": [2, 10, 20, 57, 64, 77, 89], "isemul": 2, "local": [2, 3, 13, 16, 20, 35, 56, 57, 60, 61, 63, 64, 73, 78, 83, 87, 88, 90], "emul": [2, 3, 16, 28, 56, 60, 61, 63, 68, 78], "quantumtask": 2, "setexecutioncontext": 2, "resetexecutioncontext": 2, "kernelthunkresulttyp": 2, "launchkernel": 2, "kernelthunktyp": 2, "kernelfunc": 2, "uint64_t": 2, "rawarg": 2, "launch": [2, 38, 64, 67, 81, 89, 94], "pack": [2, 93], "launchserializedcodeexecut": 2, "serializedcodeexecutioncontext": 2, "serializecodeexecutionobject": 2, "onrandomseedset": 2, "notifi": 2, "let": [2, 5, 8, 11, 12, 16, 17, 18, 19, 22, 23, 25, 26, 30, 34, 45, 52, 58, 65, 71, 72, 73, 77, 79, 80, 82, 83, 89, 90, 91, 94], "fermioniqbaseqpu": 2, "pasqalbaseqpu": 2, "querabaseqpu": 2, "basenvcfsimulatorqpu": 2, "submit": [2, 3, 16, 36, 56, 57, 59, 68, 78, 89, 95], "nvcf": 2, "servic": [2, 56, 57, 63, 64, 78, 89], "interact": [2, 3, 9, 13, 16, 48, 58, 78, 89], "enough": [2, 5, 10], "moreov": [2, 19, 38, 43, 61, 64, 72, 86], "synchron": [2, 16, 42, 64, 78], "pasqal": [2, 3, 36, 54, 59, 95], "machin": [2, 3, 10, 16, 17, 25, 37, 51, 56, 60, 61, 63, 64, 78, 89], "realiz": [2, 24, 25, 82], "intend": [2, 37, 38, 40, 87, 91], "popul": [2, 3, 15], "platformqpu": 2, "qubitconnect": [2, 48], "fetch": [2, 10], "supports_task_distribut": 2, "parallel": [2, 12, 15, 37, 43, 54, 58, 68, 69, 73, 89, 94], "qpu_id": [2, 3, 12, 15, 27, 28, 32, 38, 48, 57, 64, 73, 81], "get_shot": 2, "getter": 2, "onc": [2, 10, 15, 18, 22, 25, 28, 40, 57, 58, 63, 66, 68, 72, 73, 78, 87, 89, 91, 94], "set_shot": 2, "clear_shot": 2, "remov": [2, 10, 25, 36, 52, 57, 64, 67, 89, 94, 95], "numshot": 2, "setter": 2, "set_exec_ctx": 2, "get_exec_ctx": 2, "reset_exec_ctx": 2, "num_qpu": [2, 3, 12, 27, 32, 48, 57, 64, 77, 81], "is_simul": [2, 48], "supports_conditional_feedback": 2, "supports_explicit_measur": 2, "get_current_qpu": [2, 48], "set_current_qpu": [2, 48], "device_id": [2, 48], "is_remot": [2, 3, 48], "qpuid": [2, 48, 64], "is_emul": [2, 3, 48], "set_nois": [2, 3], "get_nois": [2, 22], "none": [2, 3, 13, 14, 16, 19, 20, 23, 25, 41, 42, 58, 61, 65, 67, 78], "get_remote_cap": 2, "reset_nois": 2, "turn": [2, 11, 14, 18, 20, 57, 74, 86], "off": [2, 3, 10, 14, 15, 18, 23, 57, 64, 68, 81, 87], "enqueueasynctask": 2, "kernelexecutiontask": 2, "launchvq": 2, "kernelarg": 2, "n_param": 2, "vqe": [2, 3, 10, 17, 26, 32, 33, 35, 57, 75], "settargetbackend": 2, "resetlogstream": 2, "log": [2, 3, 36, 57, 65, 78, 87, 89, 95], "getlogstream": 2, "setlogstream": 2, "logstream": 2, "list_platform": 2, "structur": [2, 3, 9, 10, 14, 17, 20, 25, 27, 38, 40, 44, 46, 48, 50, 64, 67, 69, 83, 85, 86, 91], "boolean": [2, 7, 23, 40], "field": [2, 16, 17, 58, 61, 64], "initvalu": 2, "stateoverlap": 2, "serializedcodeexec": 2, "command": [2, 9, 10, 12, 15, 27, 28, 32, 33, 57, 58, 63, 64, 65, 66, 67, 68, 73, 77, 78, 81, 86, 87, 89, 90, 91, 93, 94], "entir": [2, 5, 16, 21, 29, 34, 52, 79, 81, 86], "forth": [2, 64], "commun": [2, 19, 38, 61, 63, 64, 67, 78, 87], "isremotesimul": 2, "ir": [2, 35, 40, 74, 84, 85, 86], "synthesi": [2, 25, 35, 37, 40, 46, 50, 51, 76, 83], "ultim": [2, 83, 86], "ad": [2, 4, 22, 27, 36, 38, 57, 63, 75, 79, 81, 83, 87, 89, 91, 94, 95], "promis": [2, 5, 8, 15], "qubitedg": [2, 48], "thunk": 2, "num_available_gpu": [2, 3, 16, 73, 81], "set_random_se": [2, 3, 9, 14, 17, 19, 22, 23, 68], "caller": [2, 42], "unset_nois": [2, 3], "dealloc": [2, 43, 50, 86], "mpi": [2, 36, 58, 64, 67, 68, 79, 81, 94, 95], "against": [2, 3, 16, 36, 62, 63, 78, 87, 89, 91, 95], "argc": [2, 41, 73, 87, 94], "argv": [2, 41, 73, 87, 94], "program": [2, 12, 27, 28, 35, 37, 40, 42, 45, 50, 51, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 70, 72, 78, 79, 81, 83, 87, 89, 91, 94], "is_initi": [2, 3, 79], "num_rank": [2, 3], "all_gath": [2, 3], "gather": [2, 3, 19, 28, 41, 66, 73, 82], "fit": [2, 67, 87], "come": [2, 19, 43, 57, 78, 81, 93], "all_reduc": 2, "binaryfunct": 2, "localvalu": 2, "rootrank": [2, 3], "input_st": [2, 3, 18, 25, 62, 78], "loop_length": [2, 3, 62, 78], "bs_angl": [2, 3, 62, 78], "n_sampl": [2, 3, 78], "10000": [2, 3, 17, 23, 60, 63, 73, 78, 81], "ps_angl": [2, 3, 78], "sample_async": [2, 3, 12, 16, 28, 38, 64, 73, 78, 81], "make_kernel": [3, 16, 40, 57, 63, 64], "els": [3, 4, 7, 10, 11, 13, 14, 15, 16, 21, 23, 25, 34, 40, 64, 73, 78, 81, 87, 91, 94], "int_valu": 3, "float_valu": 3, "pykernel": 3, "argtypelist": 3, "programmat": 3, "str": [3, 4, 5, 9, 10, 11, 15, 16, 20, 21, 22, 23, 24, 61, 63, 64, 73, 78, 81, 82, 93], "argument_count": 3, "alia": [3, 50], "pykerneldecor": 3, "verbos": [3, 70, 83, 87, 90], "modul": [3, 14, 58, 73, 83, 87, 89], "funcsrc": 3, "locat": [3, 63, 64, 87, 89, 93], "overrideglobalscopedvar": 3, "decor": [3, 10, 42, 71], "lower": [3, 16, 27, 58, 83, 86], "ast": 3, "jit": [3, 10], "executionengin": 3, "__call__": 3, "__str__": 3, "extract_c_function_point": 3, "from_json": 3, "jstr": 3, "overridedict": 3, "convert": [3, 10, 11, 12, 15, 21, 23, 27, 31, 38, 58, 65, 77, 83], "json": [3, 60, 63, 64, 78, 89], "merge_kernel": 3, "othermod": 3, "moduleop": 3, "synthesize_callable_argu": 3, "funcnam": 3, "block": [3, 9, 17, 20, 23, 47, 75], "awai": [3, 16, 19, 52], "funcop": [3, 85], "to_json": 3, "self": [3, 10, 14, 17, 87, 89], "reconstruct": 3, "elsewher": [3, 25], "type_to_str": 3, "clean": [3, 25], "kwarg": [3, 10], "languag": [3, 25, 35, 36, 39, 42, 43, 44, 45, 50, 51, 64, 72, 79, 82, 83, 86, 90, 95], "attribut": [3, 42, 79, 83], "coprocessor": [3, 38, 42], "shots_count": [3, 4, 7, 8, 9, 10, 11, 12, 16, 21, 22, 23, 28, 30, 56, 60, 61, 63, 65, 66, 73, 78, 79, 81], "over": [3, 5, 7, 15, 16, 19, 21, 27, 28, 30, 32, 38, 50, 63, 68, 73, 78, 86, 89], "ndarrai": [3, 14, 19, 30, 34, 58], "leav": [3, 19, 30, 62, 66, 78, 89], "doesn": 3, "firstfloat": 3, "secondfloat": 3, "kei": [3, 9, 12, 16, 17, 18, 20, 22, 23, 24, 25, 27, 33, 47, 57, 58, 60, 61, 63, 86, 89, 94], "nois": [3, 10, 16, 21, 25, 30, 36, 38, 48, 60, 61, 63, 68, 78, 95], "model": [3, 10, 21, 24, 27, 30, 35, 36, 37, 38, 40, 42, 45, 50, 51, 52, 58, 61, 62, 64, 65, 78, 83, 86, 89, 94, 95], "sampleresult": [3, 10, 73, 79, 86], "_mlir_lib": [3, 16], "_quakedialect": [3, 16], "cudaq_runtim": [3, 16], "asyncsampleresult": [3, 16, 78], "platform": [3, 16, 27, 28, 36, 37, 45, 51, 54, 57, 58, 61, 62, 63, 64, 68, 73, 77, 78, 81, 83, 86, 87, 89, 95], "Will": [3, 47, 73], "whose": [3, 7, 14, 17, 23, 26, 38, 43, 57, 58, 64, 77, 82], "identif": 3, "spin_oper": [3, 17, 73], "spinoper": [3, 4, 9, 10, 13, 14, 15, 16, 17, 24, 27, 73, 81], "nest": [3, 15, 64], "hermitian": [3, 15], "observeresult": [3, 73], "observe_async": [3, 15, 27, 28, 32, 38, 57, 81], "asyncobserveresult": 3, "arg0": [3, 83], "prepar": [3, 4, 5, 7, 10, 12, 14, 15, 16, 18, 20, 22, 24, 26, 28, 32, 75, 77, 79, 81], "select": [3, 4, 9, 10, 14, 15, 16, 21, 23, 24, 25, 26, 27, 33, 58, 61, 67, 73, 77, 81, 89, 93], "get_state_async": [3, 64], "asyncstateresult": 3, "parameter_count": [3, 9, 10, 17, 26, 27, 81], "argument_mapp": [3, 17], "gradient_strategi": [3, 32], "arg1": 3, "format": [3, 11, 14, 23, 25, 34, 38, 41, 50, 87], "ascii": [3, 34], "latex": [3, 34], "cx": [3, 10, 16, 19, 22, 25, 40, 57, 63, 81, 94], "translat": [3, 19, 23, 25, 28, 38, 66, 82, 83], "qir": [3, 83, 86], "adapt": [3, 17, 25, 35, 36, 95], "openqasm2": 3, "openqasm": 3, "moduleid": [3, 83], "llvmdialectmodul": [3, 83], "source_filenam": [3, 83], "opaqu": [3, 50, 83], "__nvqpp__mlirgen__function_variable_qreg": 3, "_z13variable_qregv": 3, "local_unnamed_addr": [3, 83], "tail": [3, 83], "__quantum__rt__qubit_allocate_arrai": [3, 83], "i64": [3, 83], "__quantum__qis__mz": [3, 83], "9": [3, 4, 9, 10, 12, 13, 14, 15, 16, 20, 21, 22, 24, 25, 27, 28, 32, 36, 38, 42, 43, 65, 67, 78, 83, 87, 89, 95], "7": [3, 4, 6, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 32, 36, 38, 42, 43, 45, 50, 64, 78, 83, 87, 89, 95], "__quantum__rt__qubit_release_arrai": [3, 83], "ret": [3, 83], "evolv": [3, 13, 19, 20, 43, 58, 61, 78, 82], "hamiltonian": [3, 6, 9, 10, 12, 14, 15, 16, 17, 20, 24, 26, 27, 28, 30, 32, 35, 41, 57, 58, 61, 64, 68, 73, 77, 78], "operatorsum": 3, "productoper": 3, "elementaryoper": [3, 58], "scalaroper": [3, 58, 78], "schedul": [3, 17, 25, 58, 61, 73, 78], "initial_st": [3, 4, 13, 58], "union": [3, 20, 22], "initialst": [3, 58], "sequenc": [3, 8, 16, 17, 20, 23, 25, 52, 58, 72], "helper": [3, 16, 20, 78], "collapse_oper": [3, 58], "store_intermediate_result": [3, 58], "integr": [3, 16, 20, 27, 35, 37, 43, 50, 61, 63, 64, 89, 90], "baseintegr": 3, "evolveresult": 3, "evolut": [3, 19, 24, 34, 36, 41, 43, 52, 58, 78, 86, 95], "degre": [3, 9, 27, 33, 58], "freedom": [3, 9, 58], "keyword": [3, 16], "access": [3, 5, 8, 12, 15, 16, 18, 24, 27, 28, 32, 36, 38, 43, 55, 56, 57, 60, 61, 62, 63, 68, 79, 80, 82, 86, 95], "properti": [3, 8, 10, 13, 16, 20, 23, 52], "influenc": [3, 16, 33, 43], "dure": [3, 6, 20, 24, 25, 30, 38, 62, 63, 65, 66, 67, 68, 87, 89, 93], "evolve_async": [3, 61, 78], "asyncevolveresult": 3, "has_target": 3, "get_target": [3, 12, 27, 57, 64, 77, 81, 94], "rais": [3, 13, 15, 16, 58, 89], "set_target": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 32, 34, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 77, 78, 81, 86], "reset_target": [3, 16], "initialize_cudaq": 3, "environ": [3, 10, 16, 20, 27, 30, 33, 36, 56, 57, 58, 60, 61, 62, 63, 64, 68, 74, 78, 85, 87, 89, 94, 95], "detect": [3, 16, 35, 58, 65, 73, 81, 87, 89, 93], "simulationprecis": 3, "underyl": 3, "noindex": 3, "infrastructur": [3, 36, 64, 85, 87, 95], "descript": [3, 25, 57, 58, 65, 67, 68, 86, 87, 89], "featur": [3, 10, 18, 33, 36, 42, 58, 68, 87, 89, 93, 94, 95], "activ": [3, 9, 14, 20, 35, 58, 61, 64, 65, 67, 68, 87, 89, 94], "consist": [3, 4, 10, 21, 23, 25, 27, 32, 58, 73, 75], "physic": [3, 16, 17, 19, 25, 27, 36, 37, 43, 50, 52, 60, 61, 63, 64, 67, 78, 82, 95], "0101": [3, 13, 16, 21], "1010": [3, 13, 16, 21], "consol": [3, 57, 74, 87], "cupi": [3, 11, 58, 89], "gettensor": 3, "compris": [3, 58], "tensori": 3, "mlirvalu": 3, "As": [3, 16, 17, 20, 25, 37, 43, 44, 50, 58, 63, 64, 66, 67, 68, 71, 81, 82, 85], "__add__": 3, "runtimeerror": [3, 10], "new_valu": 3, "5": [3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 34, 36, 38, 40, 41, 42, 43, 45, 46, 49, 50, 57, 58, 64, 65, 66, 67, 68, 75, 77, 78, 81, 83, 87, 89, 91, 94, 95], "__radd__": 3, "__sub__": 3, "__rsub__": 3, "__neg__": 3, "__mul__": 3, "__rmul__": 3, "__getitem__": 3, "you": [3, 5, 8, 9, 10, 12, 15, 16, 18, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 38, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 73, 75, 78, 79, 81, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95], "complexmatrix": 3, "lowest": [3, 25, 27], "num_column": 3, "num_row": 3, "to_numpi": 3, "get_valu": 3, "complexflo": [3, 58], "od": [3, 4, 23], "master": [3, 36, 95], "equat": [3, 5, 16, 17, 18, 23, 25, 36, 58, 95], "solver": [3, 15, 35, 36, 58, 61, 95], "expectation_valu": [3, 6, 58, 77], "intermedi": [3, 19, 58, 83], "were": [3, 5, 10, 16, 23, 27, 34, 38, 58, 89], "final_expectation_valu": 3, "trigger": [3, 20], "final_st": 3, "intermediate_st": 3, "elementari": 3, "operator_id": 3, "further": [3, 8, 9, 45, 52, 71, 73, 78, 83, 86, 94], "simplifi": [3, 13, 68], "classmethod": 3, "op_id": 3, "expected_dimens": 3, "dtype": [3, 12, 15, 16, 22, 25, 30, 58, 75], "definit": [3, 16, 18, 25, 38, 40, 42, 58, 75, 86], "instanti": [3, 34, 38, 43, 49, 50, 57, 58, 64, 93], "To": [3, 10, 11, 13, 16, 17, 18, 20, 22, 23, 25, 30, 38, 42, 45, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 77, 78, 79, 83, 85, 86, 87, 89, 90, 91, 93, 94], "canon": 3, "sort": [3, 9, 15, 23, 90], "neg": [3, 16, 22, 34, 45, 67], "short": [3, 12, 16, 52], "atomic_oper": 3, "rydberghamiltonian": [3, 61, 78], "atom_sit": [3, 61, 78], "delta_glob": [3, 61, 78], "atom_fil": [3, 61], "delta_loc": 3, "analog": [3, 61, 82], "neutral": [3, 16, 54, 59], "atom": [3, 16, 26, 54, 58, 59, 78, 82], "quera": [3, 36, 54, 59, 95], "aquila": [3, 78], "fresnel": [3, 61, 78], "ref": [3, 4, 25, 52, 83], "http": [3, 4, 5, 10, 13, 14, 17, 18, 20, 23, 25, 27, 28, 58, 60, 62, 63, 64, 75, 78, 87, 89], "doc": [3, 10, 28, 36, 64, 78, 81, 95], "aw": [3, 56, 61, 78, 87], "amazon": [3, 36, 54, 55, 61, 95], "com": [3, 4, 5, 10, 13, 14, 16, 17, 18, 25, 28, 60, 63, 68, 78, 87, 89], "braket": [3, 4, 15, 20, 36, 54, 55, 61, 95], "latest": [3, 4, 5, 13, 17, 18, 27, 35, 36, 64, 78, 87, 89, 95], "developerguid": [3, 78], "html": [3, 13, 78], "ah": [3, 78], "schema": 3, "__init__": [3, 10, 14], "consum": [3, 52, 93], "coordin": [3, 34], "tweezer": 3, "trap": [3, 54, 59, 82], "drive": [3, 9, 43, 58], "omega": [3, 24, 58, 61, 78], "detun": [3, 78], "mark": [3, 10, 93], "occupi": [3, 27, 64], "fill": [3, 42, 61, 78, 86], "factor": [3, 18, 22, 35], "magnitud": [3, 14, 25], "h_k": 3, "dimensionless": 3, "parameter_info": 3, "cudm_stat": 3, "cudensitymatst": 3, "try_init_st": 3, "shape": [3, 11, 14, 19, 25, 27, 32, 69, 81], "try": [3, 10, 12, 16, 18, 21, 23, 25, 27, 34, 89], "accord": [3, 10, 65], "to_cupy_arrai": 3, "termin": [3, 4, 32, 78, 89], "At": [3, 24, 87, 89], "directli": [3, 37, 38, 43, 50, 52, 61, 68, 83, 89, 93, 94], "through": [3, 5, 8, 10, 14, 15, 19, 20, 23, 24, 27, 30, 31, 38, 55, 56, 60, 61, 63, 71, 74, 75, 78, 79, 81, 86, 87, 89, 94], "c_if": [3, 40], "__iter__": 3, "__len__": 3, "equival": [3, 7, 13, 17, 20, 58, 64, 67, 73, 75], "metadata": [3, 26, 83], "experi": [3, 10, 20, 22, 33, 62, 78, 87, 89], "adher": [3, 14, 19, 42, 44, 50, 82, 86], "implicit": [3, 38, 50, 52, 58], "expectation_z": 3, "get_marginal_count": [3, 22], "marginal_indic": 3, "get_register_count": 3, "get_sequential_data": 3, "item": [3, 11, 14, 16, 22, 23, 93], "frequent": 3, "proport": 3, "kick": [3, 64, 81], "pattern": [3, 10, 25, 37, 38, 42, 51, 83, 85], "sub_term": 3, "favor": 3, "get_spin": 3, "accessor": [3, 64], "optimizationresult": 3, "gradientdesc": 3, "initial_paramet": [3, 6, 9, 10, 17], "lower_bound": 3, "max_iter": [3, 10], "requires_gradi": 3, "upper_bound": 3, "upper": [3, 16], "neldermead": [3, 9, 17], "lbfg": [3, 38, 57], "centraldiffer": [3, 32], "parameter_vector": [3, 10, 17, 27, 32, 57], "loss": [3, 20], "forwarddiffer": 3, "parametershift": 3, "krauschannel": [3, 16, 30], "num_control": 3, "bitflipchannel": [3, 16, 21, 22, 30, 65], "decoher": [3, 30, 58], "Its": [3, 50, 68, 82, 83], "vice": 3, "versa": 3, "180": 3, "therebi": [3, 38, 64, 83], "k_0": [3, 30], "k_1": [3, 30], "phaseflipchannel": [3, 30], "untouch": 3, "depolarizationchannel": [3, 16, 30], "k_2": 3, "k_3": 3, "2x2": [3, 11, 67], "decai": [3, 20, 30], "And": [3, 16, 17, 52], "behav": 3, "free": [3, 6, 10, 17, 25, 38, 40, 41, 42, 43, 45, 47, 49, 57, 60, 61, 63, 71, 79, 83, 86, 89], "75": [3, 10, 18, 29], "uniform": [3, 9, 10, 17, 21, 22, 38, 41, 73, 81], "amplitudedampingchannel": [3, 30], "dissip": 3, "energi": [3, 4, 10, 12, 13, 16, 26, 27, 32, 38, 57, 77], "due": [3, 10, 16, 26, 30, 34, 38, 61, 65, 68, 73, 93], "ground": [3, 9, 10, 12, 26, 27, 35, 57, 58, 61, 66, 78, 82], "phasedamp": 3, "similar": [3, 10, 28, 38, 64, 73, 87], "amplitudedamp": 3, "xerror": 3, "yerror": 3, "zerror": 3, "krausoper": 3, "ki": [3, 15], "dag": [3, 20, 34, 47], "col_count": 3, "row_count": 3, "scatter": [3, 10], "arg2": 3, "bin": [3, 21, 25, 62, 64, 78, 87, 89], "interferomet": [3, 62, 78], "tbi": [3, 62, 78], "boson": [3, 36, 58, 62, 78, 95], "In": [4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 29, 30, 32, 34, 36, 38, 42, 52, 58, 61, 63, 64, 65, 66, 67, 68, 71, 73, 75, 77, 78, 79, 81, 85, 86, 87, 93, 95], "tutori": [4, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 24, 25, 27, 36, 89, 95], "explain": [4, 23, 25, 64, 66, 82], "introduc": [4, 11, 12, 17, 21, 23, 38], "paper": [4, 7, 9, 10, 12, 15, 16, 21, 23], "layer": [4, 9, 10, 14, 16, 17, 20, 21, 42, 61], "cost": [4, 9, 10, 14, 15, 17, 26, 27, 32, 35, 38, 57, 78], "mixer": [4, 17], "h_m": 4, "ket": [4, 5, 6, 8, 11, 12, 15, 18, 19, 20, 28, 34, 66, 73, 82], "psi_p": 4, "beta": [4, 15, 19, 82, 83], "gamma": 4, "prod_": [4, 24, 46], "k": [4, 9, 12, 13, 15, 16, 18, 20, 23, 42], "beta_k": 4, "gamma_k": 4, "psi_": [4, 8, 15, 19], "mathrm": [4, 11], "otim": [4, 7, 22], "chosen": [4, 20, 27, 65, 87], "solut": [4, 9, 17, 23], "fix": [4, 25, 26, 36, 68, 95], "replac": [4, 17, 20, 23, 57, 60, 63, 83, 85, 87, 89], "a_k": 4, "summar": [4, 18, 89], "_j": 4, "suitabl": [4, 68, 87, 89, 93], "compon": [4, 11, 13, 15, 17, 23, 25, 58, 87, 89, 93, 94], "predefin": [4, 24, 40, 75], "gamma_0": 4, "combin": [4, 5, 11, 12, 13, 15, 20, 22, 23, 27, 31, 33, 35, 58, 66, 69, 72, 73, 82, 92, 93], "below": [4, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 38, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 69, 73, 75, 78, 81, 83, 87, 89, 93, 94, 95], "threshold": [4, 10, 15, 16, 23, 67], "estim": [4, 12, 15, 16, 22, 23, 24, 26, 27, 32, 65, 73], "desir": [4, 10, 23, 25, 48, 58, 64, 73, 86, 87, 89, 91], "met": 4, "associ": [4, 10, 16, 17, 21, 28, 43, 64, 65, 66, 81, 82], "largest": [4, 20, 68], "a_": 4, "beta_m": 4, "gamma_m": 4, "schemat": [4, 78], "scipi": [4, 15, 16, 22, 26, 27, 32, 58], "nvidia": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 28, 32, 33, 36, 37, 43, 54, 55, 58, 64, 65, 67, 68, 69, 73, 75, 77, 81, 86, 87, 89, 91, 94, 95], "sensit": 4, "22": [4, 11, 13, 14, 16, 20, 22, 23, 25, 34, 66, 73, 75, 83, 87, 89], "true_energi": [4, 16], "12": [4, 10, 11, 14, 16, 19, 20, 21, 22, 25, 27, 32, 36, 38, 57, 58, 66, 83, 87, 89, 94, 95], "node": [4, 9, 10, 15, 17, 20, 35, 37, 54, 64, 69, 81, 87], "6": [4, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 36, 38, 41, 42, 43, 45, 46, 50, 57, 62, 64, 66, 67, 77, 78, 83, 87, 89, 95], "edg": [4, 9, 10, 17, 35], "weight": [4, 9, 10, 20, 25], "len": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 41, 50, 58, 64, 73, 78, 81, 94], "examl": 4, "qubits_num": [4, 11, 15], "prefer": [4, 5, 87, 89], "e_prev": 4, "1e": [4, 15, 16, 27, 32, 68, 78], "smaller": [4, 9, 10, 12, 15, 68, 81], "e_stop": 4, "de": [4, 25], "current_erg": 4, "prev_erg": 4, "init_gamma": 4, "frac": [4, 5, 7, 8, 9, 11, 12, 15, 17, 18, 22, 23, 24, 34, 58], "sum_": [4, 5, 7, 9, 11, 13, 15, 17, 18, 24, 30, 46, 82], "omega_": 4, "z_i": [4, 9], "z_j": [4, 9, 24], "23": [4, 11, 13, 16, 19, 20, 22, 23, 25, 34, 75, 78], "spin_ham": [4, 9, 27], "ham": [4, 9, 12, 13, 15, 24], "qubitu": [4, 17], "qubitv": [4, 17], "term_coeffici": [4, 9], "term_word": [4, 9], "hmiltonian": 4, "ham_coef": 4, "ham_word": 4, "entangl": [4, 5, 19, 30, 34, 43, 57, 69, 71, 78], "24": [4, 13, 16, 20, 22, 33, 34, 58, 75, 86, 87, 89, 90, 94], "mixer_pool": 4, "25": [4, 10, 13, 14, 16, 18, 20, 22, 23, 24, 29, 41, 57, 64, 67, 73, 75, 81, 89], "105": 4, "26": [4, 16, 20, 22, 23, 57, 75], "ai": [4, 23], "com_op": 4, "grad_op": 4, "27": [4, 10, 16, 20, 22, 23, 73], "psi_ref": 4, "grad": [4, 57], "pauli_word": [4, 9, 13, 15, 24, 31, 64], "exp_pauli": [4, 9, 13, 15, 24, 31], "kernel_qaoa": [4, 17], "num_lay": [4, 9], "28": [4, 10, 14, 16, 20, 22, 36, 64, 69, 87, 89, 94, 95], "istep": 4, "while": [4, 20, 21, 23, 25, 27, 28, 36, 42, 72, 73, 75, 78, 81, 83, 87, 89, 93, 95], "find": [4, 5, 8, 9, 10, 15, 17, 22, 25, 26, 27, 35, 57, 60, 64, 78, 82, 83, 87, 89], "gradient_vec": 4, "linalg": [4, 12, 15, 22, 58], "result_vq": [4, 27, 32], "fun": [4, 22, 27, 32], "break": [4, 19, 23, 36, 95], "temp_pool": 4, "tot_pool": 4, "max_grad": 4, "ab": [4, 11, 13, 23, 25], "good": [4, 9, 15, 27, 61, 67], "reproduc": [4, 16, 20, 25], "42": [4, 10, 14, 16, 20, 22, 23, 26, 27, 78], "random_mix": 4, "choic": [4, 7, 20, 22, 23, 27, 54], "beta_count": 4, "init_beta": 4, "tolist": [4, 11, 14, 20, 21], "bfg": [4, 27, 32, 38], "jac": [4, 27, 32], "tol": [4, 16, 27, 32], "optmiz": 4, "erg": 4, "466322556913865": 4, "39": [4, 6, 9, 16, 19, 20, 21, 22, 23, 27, 87, 89], "499999999999957": 4, "162404152906434": 4, "iizii": 4, "999999999976162": 4, "49999999997620526": 4, "4145319953645363": 4, "ziii": 4, "499999999993414": 4, "500000000017252": 4, "01414371076153925": 4, "iixix": 4, "999999999996571": 4, "5000000000031566": 4, "585137881516482e": 4, "06": [4, 20], "29": [4, 16, 20, 22, 23, 64], "5000": [4, 63], "10100": [4, 17, 23], "01011": [4, 17, 23], "2438": 4, "2562": 4, "__version__": [4, 5, 7, 13, 14, 17, 18, 25, 28], "cu12": [4, 89, 94], "github": [4, 5, 10, 13, 14, 17, 18, 25, 27, 28, 36, 63, 68, 75, 78, 87, 89, 94, 95], "5e9dc6aebbcf9c301808574d04dd4bc0e1d6dbdf": 4, "bv": 5, "demonstr": [5, 6, 7, 8, 9, 12, 13, 15, 16, 18, 20, 21, 23, 24, 25, 26, 29, 31, 32, 37, 38, 40, 58, 64, 65, 73, 80, 81, 83], "speedup": [5, 11, 24, 27, 57, 69, 81], "suppos": [5, 8, 90], "oracl": [5, 7, 41], "longrightarrow": [5, 8], "dot": [5, 12, 15, 17, 22, 66], "secret": [5, 41, 89], "space": [5, 12, 15, 34, 35, 43, 50, 58, 64, 78], "x_1s_1": 5, "x_2s_2": 5, "x_ns_n": 5, "our": [5, 6, 8, 10, 11, 16, 17, 19, 20, 23, 25, 30, 34, 36, 52, 56, 58, 60, 61, 62, 63, 65, 71, 73, 78, 79, 80, 83, 87, 89, 90, 91, 94, 95], "101": [5, 10, 18, 19, 20, 22, 23, 41], "henc": [5, 18, 19, 28, 52, 58, 61, 64, 65, 66, 68, 73, 82, 87, 89, 93], "dont": [5, 28], "x_3s_3": 5, "strateg": 5, "st": 5, "001": [5, 14, 18, 19, 22, 23, 78, 89], "nd": 5, "010": [5, 18, 19, 22, 23, 78], "rd": 5, "100": [5, 10, 13, 14, 19, 20, 21, 22, 23, 24, 30, 41, 56, 58, 61, 78], "rememb": [5, 8, 10, 28], "perspect": 5, "inner": [5, 19, 20, 50, 64], "mechan": [5, 8, 19, 20, 38, 40, 46, 50, 52, 58, 64, 74, 82, 85], "hidden": [5, 7, 43], "why": [5, 18], "did": [5, 23, 87, 89], "011": [5, 19, 22, 23, 41], "s_3": 5, "isol": [5, 73], "s_2": 5, "difficult": [5, 9, 38], "speak": 5, "would": [5, 7, 10, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 33, 36, 52, 58, 66, 82, 87, 89, 91, 93, 95], "advantag": [5, 7, 8, 11, 20, 24, 25, 27, 33, 61, 89], "problem": [5, 7, 8, 10, 11, 12, 13, 15, 17, 18, 26, 27, 52, 58, 61, 65, 72, 81], "answer": [5, 7, 18], "black": [5, 8, 10, 11, 16], "box": [5, 8, 30, 93], "setup": [5, 9, 36, 58, 68, 78, 89, 95], "auxiliari": [5, 7], "kickback": 5, "hadamard": [5, 7, 15, 18, 19, 20, 23, 29, 35, 40, 45, 50, 52, 64, 79, 82, 85], "sum_x": 5, "u_f": [5, 8], "oplu": 5, "neq": [5, 8, 9, 23], "becom": [5, 10, 22, 27, 68, 77, 81, 89, 90], "chanc": [5, 21, 23, 93], "cell": [5, 9, 15, 16, 19, 20, 21, 27, 31, 34], "your": [5, 9, 10, 27, 28, 34, 35, 38, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 77, 78, 81, 86, 87, 89, 93], "small": [5, 10, 12, 22, 23, 27, 65, 68, 69, 81, 93], "increas": [5, 9, 12, 15, 24, 33, 36, 58, 65, 66, 68, 73, 81, 89, 94, 95], "30": [5, 10, 14, 16, 19, 22, 25, 61, 64, 81], "qpp": [5, 10, 14, 16, 17, 18, 19, 25, 28, 57, 67, 69, 73, 81, 83, 86, 89, 94], "qubit_count": [5, 7, 8, 14, 17, 18, 23, 26, 27, 28, 30, 64, 65, 71, 73, 81, 94], "secret_str": 5, "whatev": 5, "insid": [5, 10, 16, 20, 64, 89], "auxiliary_qubit": [5, 7], "verifi": [5, 8, 18, 20, 23, 58, 82], "procedur": [5, 6, 9, 10, 15, 21, 25, 26, 27, 32, 68], "guess": [5, 15, 23], "correct": [5, 18, 19, 22, 25, 41, 72, 78, 87, 89], "bernstein_vazirani": [5, 89], "auxillari": [5, 10, 15, 21], "place": [5, 7, 17, 19, 27, 28, 33, 64, 66, 71, 73, 81], "success": [5, 32, 78, 85], "join": [5, 16, 22, 23, 61], "q2": [5, 7, 10, 11, 18, 20, 23, 25, 34], "q3": [5, 10, 11, 20, 23, 34], "q4": [5, 10, 11, 20, 23], "q5": [5, 11, 20, 23], "11010": [5, 17, 23], "176f1e7df8a58c2dc3d6b1b47bf7f63b4b8d3b63": 5, "hybrid": [6, 16, 20, 27, 35, 54, 56, 90, 94], "algorithm": [6, 9, 10, 11, 12, 16, 17, 18, 24, 26, 27, 32, 35, 37, 40, 42, 51, 52, 57, 64, 68, 73, 75, 77, 78, 80, 81, 89], "involv": [6, 9, 23, 68, 81, 83, 93], "bloch": [6, 34], "packag": [6, 7, 8, 10, 14, 15, 16, 22, 58, 61, 78, 87, 89, 93, 94], "workflow": [6, 9, 14, 20, 35, 38, 58, 61, 76, 83, 87, 90], "upon": [6, 19, 28, 52, 66, 73, 78, 82, 89], "rx": [6, 9, 10, 12, 13, 14, 16, 17, 19, 22, 34, 45, 49, 75, 81], "intial": 6, "build": [6, 10, 12, 15, 16, 17, 20, 21, 22, 26, 27, 32, 34, 35, 36, 40, 45, 46, 58, 61, 70, 72, 73, 76, 77, 82, 85, 86, 89, 90, 91, 93, 95], "statevector": [6, 18, 19, 28, 36, 66, 82, 94, 95], "bra": [6, 12, 20, 28, 73], "cost_valu": [6, 9], "initial_cost_valu": 6, "suit": [6, 25, 89], "alogrithm": 6, "plot": [6, 9, 10, 13, 14, 16, 22, 24, 25, 26, 27, 58], "decreas": [6, 58, 66], "matplotlib": [6, 9, 10, 11, 13, 14, 16, 22, 23, 26, 27, 34, 58], "pyplot": [6, 9, 10, 11, 13, 14, 16, 22, 23, 26, 27, 34, 58], "plt": [6, 9, 10, 11, 13, 14, 16, 22, 23, 25, 26, 27, 34, 58], "x_valu": [6, 9], "y_valu": [6, 9], "xlabel": [6, 9, 10, 13, 14, 25, 26, 27, 58], "epoch": [6, 9, 14, 20, 26, 27], "ylabel": [6, 9, 10, 13, 14, 25, 26, 27, 58], "text": [6, 8, 18, 20, 22, 25, 28, 34], "link": [7, 54, 55, 57, 83, 87, 89, 90, 91, 93], "origin": [7, 10, 11, 15, 19, 30, 52, 83], "earlier": [7, 16, 17, 25, 68, 73], "address": [7, 38, 61, 64, 87], "natur": [7, 9, 10, 19, 34, 61, 65, 68, 82], "guarante": [7, 89], "balanc": [7, 8, 66], "exactli": [7, 17, 25], "half": [7, 8, 78], "worst": 7, "scenario": [7, 25, 36, 80, 89, 95], "least": [7, 10, 17, 23, 24, 25, 28, 64, 66, 87], "distinguish": [7, 11, 17, 52], "superior": 7, "solv": [7, 8, 9, 13, 15, 17, 18, 58, 72, 81], "notebook": [7, 16, 19, 25, 34, 36, 56, 61, 64, 65, 95], "cleve": 7, "et": [7, 17, 25], "al": [7, 17, 25], "1997": 7, "ldot": [7, 13], "rightarrow": 7, "outlin": [7, 8, 16, 23, 93], "31": [7, 16, 22, 57], "32": [7, 10, 14, 20, 22, 63, 67, 69, 83, 89], "function_typ": 7, "fx": [7, 8], "oracletyp": 7, "fx_valu": 7, "randomli": [7, 20, 21, 23], "pick": [7, 25, 86, 87], "oraclevalu": 7, "shuffl": [7, 14], "posit": [7, 11, 17, 20, 22, 23, 25, 27, 30, 45, 58, 65, 67], "manual": [7, 13, 28, 63, 64, 81, 87, 89], "33": [7, 20, 32, 64, 69, 89], "input_qubit": 7, "elif": [7, 8, 13, 16], "yield": [7, 8, 19, 20, 28, 66, 68, 82, 94], "debug": [7, 70, 81, 83, 87, 89], "outcom": [7, 17, 19, 21, 23], "frequenc": [7, 18, 20, 78], "expected_constant_result": 7, "appear": [7, 19, 20, 25, 38, 89], "is_const": 7, "result_kei": 7, "concis": 8, "desutch": 8, "ouput": 8, "carri": [8, 23], "treat": [8, 64], "snippet": [8, 57, 58, 64, 77, 83, 89], "don": [8, 18, 36, 38, 57, 95], "notic": [8, 10, 17, 19, 23, 25, 27, 52, 83, 90], "That": [8, 16, 28, 38, 66, 94], "twice": [8, 27], "claim": [8, 21], "evalul": 8, "symbol": [8, 87, 89, 93], "OR": [8, 78], "rule": [8, 20, 23, 27, 58], "modulo": [8, 23], "oplus5": 8, "8_": 8, "oplus4": 8, "9_": 8, "quick": [8, 19, 35, 63, 91], "align": [8, 18, 19, 83, 93], "remark": [8, 25], "becaus": [8, 22, 23, 25, 52, 67, 78, 87, 89, 94], "overlin": 8, "bar": [8, 17, 18, 22, 34], "top": [8, 10, 16, 22, 23, 64, 66, 75, 86, 90], "denot": [8, 18, 21, 42, 44], "prove": [8, 82], "shall": [8, 19, 82], "tfrac": [8, 19, 82], "summari": 8, "unchang": [8, 30, 83], "simultan": [8, 20, 57, 65], "exploit": [8, 68], "abil": [8, 21, 24, 25, 43, 66, 83], "aim": [8, 10, 17, 23], "diagram": [8, 9, 17, 18, 19, 23, 62, 78], "psi_0": [8, 19], "tag": [8, 18, 23, 87, 89], "psi_1": [8, 20], "h_1h_0": 8, "psi_2": [8, 20], "drop": [8, 16], "figur": [8, 9, 10, 12, 14, 18, 19, 20, 21, 23, 24, 25, 27, 33, 54, 69, 83], "pm": 8, "practic": [8, 10, 12, 15, 21, 22, 25, 27, 61, 67], "shown": [8, 12, 15, 16, 19, 20, 63, 64, 65, 67], "qubit_0": [8, 17, 19, 75], "neither": 8, "nor": 8, "b_0": 8, "b_1": 8, "hint": 8, "approach": [8, 9, 10, 18, 22, 23, 38, 42, 65, 81, 83], "drug": 9, "often": [9, 23, 27, 38, 52, 75, 87, 89], "bind": [9, 37, 40, 42, 45, 87], "protein": [9, 25], "inhibit": 9, "therapeut": 9, "purpos": [9, 15, 20, 23, 43, 52, 54, 58, 69, 89], "candid": 9, "extrem": [9, 38], "studi": [9, 19, 25, 65], "help": [9, 15, 16, 21, 22, 28, 29, 34, 54, 65, 74, 75, 78, 81, 89], "guid": [9, 36, 56, 63, 87, 89, 91, 94, 95], "search": [9, 23, 25, 87, 89], "predict": [9, 16, 82], "strongli": [9, 16, 87], "ligand": 9, "usual": [9, 10, 87, 89, 93], "One": [9, 18, 20, 23, 25, 27, 28, 38, 52, 56, 61, 64, 67, 74, 77, 81], "challeng": [9, 10, 23], "aris": [9, 25, 30], "mani": [9, 10, 18, 19, 20, 21, 23, 25, 27, 28, 31, 32, 36, 45, 48, 54, 58, 64, 65, 68, 73, 75, 81, 94, 95], "geometr": 9, "present": [9, 10, 17, 20, 22, 25, 28, 32, 73, 87, 90], "orient": 9, "assess": [9, 16], "formul": [9, 52], "mathemat": [9, 19, 58, 66, 82], "digit": [9, 14, 66], "counteradiabat": 9, "understand": [9, 10, 11, 13, 15, 16, 19, 22, 37, 54, 65, 89], "pleas": [9, 10, 15, 27, 34, 36, 57, 61, 64, 67, 68, 78, 85, 87, 89, 94, 95], "maxcut": 9, "There": [9, 10, 11, 19, 28, 31, 38, 40, 57, 62, 63, 64, 66, 75, 81, 89], "experiment": [9, 16, 36, 67, 89, 95], "pharmacor": 9, "chemic": [9, 16, 20, 26], "group": [9, 10, 50, 54, 67, 69], "govern": [9, 24], "label": [9, 10, 11, 14, 16, 22, 25, 83, 87, 94], "distanc": [9, 10, 19, 22, 26], "graph": [9, 10, 17], "lag": 9, "feesibli": 9, "coexist": 9, "cliqu": 9, "mutual": 9, "best": [9, 10, 18, 20, 25, 27, 54, 87, 89], "analysi": [9, 10, 20, 52, 83], "comment": [9, 17], "discret": [9, 25, 50], "qubit_num": [9, 11, 12, 27], "non_edg": 9, "6686": [9, 20], "1453": 9, "penalti": [9, 10], "expens": [9, 27, 68], "6886": 9, "1091": 9, "0770": 9, "w_i": 9, "sigma": [9, 15, 24, 58], "notin": 9, "concern": [9, 82, 87], "vertic": [9, 11, 17], "penal": 9, "ham_cliqu": 9, "wt": 9, "zip": [9, 15, 87], "strip": [9, 15, 24, 87], "coef": [9, 15], "0j": [9, 12, 17, 73, 75], "iiziiz": 9, "ziizii": 9, "1657": 9, "iziiii": 9, "iziizi": 9, "42735": 9, "iiizii": 9, "2791499999999996": 9, "iiiiii": 9, "iiziii": 9, "iiiiiz": 9, "ziiiii": 9, "iiiizi": 9, "inclus": [9, 27], "better": [9, 10, 16, 17, 22, 25, 36, 57, 67, 68, 87, 95], "hopefulli": 9, "offset": 9, "fewer": [9, 10, 23, 24, 27, 67], "dc_qaoa": 9, "nelder": 9, "mead": 9, "line": [9, 10, 12, 17, 23, 27, 33, 34, 60, 62, 63, 64, 65, 66, 67, 68, 78, 83, 86, 87, 89], "13": [9, 10, 11, 13, 14, 16, 17, 20, 21, 22, 23, 25, 26, 27, 32, 34, 81, 83, 89], "66": [9, 10, 20], "21810696323572243": [9, 17], "20613464375211488": [9, 17], "2546877639814583": [9, 17], "3657985647468064": [9, 17], "37118004688049144": 9, "03656087558321203": 9, "08564174998504231": 9, "21639801853794682": 9, "11122286088634259": 9, "1743727097033635": 9, "36518146001762486": 9, "15829741539542244": 9, "3467434780387345": 9, "28043500852894776": 9, "09986021299050934": 9, "14125225086023052": 9, "19141728018199775": 9, "11970943368650361": 9, "3853063093646483": 9, "1112643868789806": 9, "3527177454825464": 9, "22156160012057186": 9, "1418496891385843": 9, "32811766468303116": 9, "367642000671186": 9, "34158180583996006": 9, "10196745745501312": 9, "29359239180502594": 9, "3858537615546677": 9, "19366130907065582": 9, "24570488114056754": 9, "3332307385378807": 9, "12287973244618389": 9, "007274514934614895": 9, "015799547372526146": 9, "3578070967202224": 9, "39268963055535144": 9, "19872246354138554": 9, "16668715544467982": 9, "13777293592446055": 9, "17514665212709513": 9, "15350249947988204": 9, "32872977428061945": 9, "20068831419712105": 9, "032919322131134854": 9, "19399909325771983": 9, "09477141125241506": 9, "08210460401106645": 9, "21392577760158515": 9, "3393568044538389": 9, "14615087942938465": 9, "03790339186006314": 9, "2843250892879255": 9, "3151384847055956": 9, "19983741137121905": 9, "27348611567665115": 9, "33457528180906904": 9, "14145414847455462": 9, "20604220093940323": 9, "05410235084309195": 9, "04447870918600966": 9, "3355714098595045": 9, "266806440171265": 9, "07436189654442632": 9, "2789176729721685": 9, "2427508182662484": 9, "optimal_expect": [9, 17], "optimal_paramet": [9, 10, 17, 57], "0057493966746804": 9, "0508763934174787": 9, "013930789730781493": 9, "5793211220774144": 9, "878009560684498": 9, "5277129177248182": 9, "4404810513078178": 9, "5755552245467919": 9, "14125558672355468": 9, "3724262117066903": 9, "1318978057007808": 9, "1228708513911436": 9, "932342804955409": 9, "8478237950658537": 9, "46345886313018125": 9, "5809397306340341": 9, "2408342488137229": 9, "11216088888484882": 9, "009704173265255175": 9, "4757346661223584": 9, "7281211610985926": 9, "06051951319169091": 9, "7794512146826196": 9, "09249435261907034": 9, "09998378319110682": 9, "255349350720572": 9, "2607038244228248": 9, "2060124032311757": 9, "13991934581192997": 9, "9874814082082164": 9, "1591291464755939": 9, "30815482837046393": 9, "9701804681517978": 9, "002609462845755913": 9, "43533533568363353": 9, "642630110681613": 9, "6137063363954748": 9, "7204687246344496": 9, "08390768435524378": 9, "5480630700433249": 9, "38905723227347905": 9, "6837811162838194": 9, "17239016898719284": 9, "1649341118754853": 9, "46771209183422724": 9, "008565327035838663": 9, "982230359328883": 9, "4232972687799105": 9, "22765896988428905": 9, "04207923928239914": 9, "36758378917672285": 9, "01825447063622079": 9, "059755059728027485": 9, "6849697218162497": 9, "2711684382411018": 9, "2904257415666667": 9, "16359529445017368": 9, "09168623367396612": 9, "5786087806926155": 9, "3476755367718726": 9, "1209273564533628": 9, "605136043801364": 9, "19128215816141694": 9, "16756583092588012": 9, "0715488214105267": 9, "5269641128095075": 9, "3029128369198704": 9, "reveal": 9, "bitst": 9, "ideal": [9, 16, 20, 21, 30, 57, 61, 78], "partit": [9, 10, 17, 57, 64, 89], "200000": 9, "mvwcp": 9, "110001": 9, "16": [9, 10, 11, 13, 16, 20, 21, 22, 23, 25, 27, 28, 32, 34, 57, 65, 75, 78, 83], "011100": 9, "111000": 9, "199979": 9, "011000": 9, "converg": [9, 12, 23, 27], "explor": [10, 16, 21, 23, 27, 82, 89], "recent": [10, 23, 25], "research": [10, 16, 57], "arxiv": [10, 13, 23], "org": [10, 13, 14, 20, 23, 58, 87, 89], "pdf": [10, 23, 34], "2402": 10, "01529": 10, "team": 10, "edinburgh": 10, "jointli": [10, 25], "develop": [10, 14, 15, 25, 35, 42, 43, 57, 63, 76, 82, 85, 86, 87, 90, 94], "author": 10, "barrier": 10, "mit": 10, "licens": [10, 87, 89], "boniface316": 10, "bigdata_vqa": 10, "unsupervis": 10, "learn": [10, 11, 14, 17, 20, 23, 25, 34, 36, 54, 56, 57, 65, 72, 73, 93, 94, 95], "techniqu": [10, 23, 27, 32, 33, 68, 73], "characterist": 10, "enhanc": [10, 16, 19], "reliabl": [10, 93], "todai": 10, "sever": [10, 79], "limit": [10, 19, 58, 64, 67, 68, 73, 93], "far": [10, 16, 19], "too": [10, 34, 81, 82], "extend": [10, 18, 20, 21, 35, 36, 37, 81, 92, 95], "harrow": 10, "walk": [10, 20, 27, 81, 86, 87, 89], "emphas": 10, "util": [10, 14, 20, 25, 30, 38, 50, 57, 64, 65, 67, 83, 86], "bipartit": 10, "branch": [10, 36, 40, 65, 87, 89, 95], "directori": [10, 16, 20, 85, 87, 89, 93], "tree": 10, "uncom": [10, 15, 17, 78, 87, 89], "skip": [10, 34, 87], "mkdir": [10, 86, 87, 90], "divisive_clustering_src": 10, "wget": [10, 87, 89], "githubusercont": 10, "sphinx": 10, "divisive_clust": 10, "py": [10, 33, 58, 64, 65, 66, 67, 68, 73, 74, 78, 81, 89, 94], "main_divisive_clust": 10, "instal": [10, 14, 15, 16, 22, 23, 25, 26, 34, 35, 36, 58, 60, 63, 67, 68, 83, 85, 86, 90, 91, 93, 95], "pip": [10, 14, 15, 16, 20, 22, 23, 25, 26, 27, 34, 58, 64, 67, 87, 89, 94], "mpi4pi": [10, 67, 68, 94], "networkx": 10, "panda": [10, 20, 22], "scikit": [10, 14, 20], "tqdm": [10, 20, 25], "nx": 10, "pd": [10, 20, 22], "warn": [10, 20, 27, 60, 63], "divisiveclust": 10, "dendrogram": 10, "voironi_tessal": 10, "filterwarn": 10, "toggl": 10, "circuit_depth": 10, "max_shot": 10, "x_1": 10, "x_2": [10, 16], "x_n": 10, "much": [10, 12, 16, 20, 27, 81, 86], "w": [10, 16, 47, 67, 78], "reason": [10, 21, 52], "conclus": 10, "variou": [10, 11, 16, 28, 36, 56, 64, 69, 71, 79, 83, 86, 95], "1703": 10, "06476": 10, "essenti": [10, 11, 13], "boil": 10, "down": [10, 19, 64, 78], "toler": [10, 16], "constraint": [10, 22, 25, 42, 43, 44, 67, 73, 78, 82], "priori": 10, "load": [10, 14, 20, 38, 43, 57, 63, 78, 83, 85], "frame": 10, "imag": [10, 14, 15, 17, 19, 23, 25, 34, 36, 58, 78, 87, 94, 95], "star": 10, "create_dataset": 10, "number_of_sampling_for_centroid": 10, "coreset_s": 10, "number_of_coresets_to_evalu": 10, "coreset_method": 10, "bfl2": 10, "coreset_vector": 10, "coreset_weight": 10, "get_best_coreset": 10, "coreset_df": 10, "datafram": [10, 22], "chr": 10, "65": [10, 17, 20, 22, 23, 30], "028364": 10, "669787": 10, "234": [10, 22, 66], "230716": 10, "167441": 10, "354792": 10, "319288": 10, "022889": 10, "921443": 10, "125": [10, 20, 32, 38, 41, 46, 57, 64, 77], "158339": 10, "706134": 10, "636852": 10, "650774": 10, "998497": 10, "455847": 10, "116": 10, "758239": 10, "507918": 10, "630311": 10, "120": [10, 20, 23, 89], "727176": 10, "102508": 10, "297727": 10, "53": [10, 20, 22], "294127": 10, "722463": 10, "400433": 10, "77": [10, 20, 22], "415840": 10, "425868": 10, "341136": 10, "847985": 10, "985373": 10, "063209": 10, "240": 10, "116237": 10, "7eba00": 10, "color": [10, 11, 16, 17], "marker": [10, 13], "titl": [10, 11, 13, 20, 25, 26, 27, 60, 89, 94], "legend": [10, 14, 16, 58], "cast": 10, "routin": [10, 17, 38], "e_": 10, "ij": [10, 25], "w_iw_jd_": 10, "d_": [10, 15], "euclidean": 10, "coreset_to_graph": 10, "vqa": 10, "src": [10, 56, 60, 61, 62, 63, 68, 87], "motiv": [10, 51, 87], "cut": [10, 35, 87, 89], "get_k2_hamiltonian": 10, "k2": [10, 16], "r_z": 10, "r_y": 10, "cascad": 10, "benefit": [10, 16, 21, 36, 73, 81, 94, 95], "get_vqe_circuit": 10, "number_of_qubit": 10, "theta_posit": 10, "rz": [10, 13, 16, 17, 19, 34, 41, 45], "visual": [10, 16, 17, 20, 35, 52, 76], "rand": [10, 20], "8904": 10, "7335": 10, "4343": 10, "2236": 10, "7937": 10, "9981": 10, "3945": 10, "696": 10, "3352": 10, "6658": 10, "05277": 10, "791": 10, "003569": 10, "4119": 10, "3205": 10, "3504": 10, "3913": 10, "7392": 10, "3171": 10, "0008056": 10, "proper": 10, "get_optim": 10, "initial_param": [10, 32], "divisiveclusteringvqa": 10, "run_divisive_clust": 10, "get_counts_from_simul": 10, "obtain": [10, 15, 16, 20, 21, 22, 26, 27, 34, 36, 57, 61, 63, 78, 87, 95], "acceler": [10, 14, 15, 16, 27, 35, 36, 57, 67, 68, 73, 81, 86, 87, 89, 94, 95], "super": [10, 14, 27], "coreset_vectors_df_for_iter": 10, "coreset_vectors_for_iteration_np": 10, "coreset_weights_for_iteration_np": 10, "_get_iteration_coreset_vectors_and_weight": 10, "metric": [10, 16, 21], "coreset_to_graph_metr": 10, "_get_best_bitstr": 10, "create_hamiltonian": 10, "optimizer_funct": 10, "create_circuit": 10, "objective_funct": [10, 27, 32], "get_result": [10, 27, 32, 58], "mostli": 10, "previous": [10, 32, 36, 62, 89, 95], "threshold_for_max_cut": 10, "percent": [10, 21], "advanc": [10, 23, 27, 33], "normal": [10, 11, 14, 19, 26, 27, 32, 82], "get_divisive_sequ": 10, "analyz": [10, 16, 25, 85], "postprocess": 10, "sourc": [10, 12, 16, 17, 22, 30, 36, 52, 58, 61, 78, 83, 86, 89, 90, 91, 94, 95], "normalize_vector": 10, "sort_by_descend": 10, "dist": [10, 22, 93], "hierarchial_clustering_sequ": 10, "129": [10, 23], "lt": [10, 20, 28, 32], "12075": 10, "19it": 10, "35025": 10, "50it": 10, "18": [10, 11, 13, 16, 20, 21, 22, 25, 34, 75, 83], "44254": 10, "09it": 10, "15827": 10, "56it": 10, "13617": 10, "87it": 10, "nice": 10, "earli": [10, 57, 89], "split": [10, 16, 81], "dendo": 10, "plot_dendrogram": 10, "plot_titl": 10, "complic": [10, 46], "occasion": 10, "especi": 10, "puzzl": 10, "glanc": [10, 19], "seem": [10, 82, 89, 94], "strai": 10, "belong": [10, 20], "wrong": 10, "explan": [10, 67], "stochast": [10, 20, 38, 65], "few": [10, 17, 23, 25, 27, 67, 75, 81], "pai": [10, 18], "exclud": [10, 57, 73, 87], "proxim": 10, "less": [10, 23, 61, 65, 87], "impact": [10, 27, 30, 65], "look": [10, 19, 20, 33, 34, 36, 52, 56, 58, 60, 61, 62, 63, 64, 72, 73, 77, 78, 79, 80, 83, 87, 89, 95], "unusu": 10, "go": [10, 25, 34, 50, 64, 79, 81, 87, 89], "14": [10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 25, 27, 34, 57, 69, 75, 78, 83], "plot_hierarchial_split": 10, "hierarch": 10, "flat": [10, 64], "perpendicular": 10, "intersect": 10, "height": 10, "get_clusters_using_k": 10, "threshold_height": 10, "get_clusters_using_height": 10, "red": [10, 22, 28], "blue": [10, 28], "green": [10, 17], "purpl": 10, "orang": 10, "yellow": 10, "color_threshold": 10, "plot_clust": 10, "show_annot": 10, "get_voronoi_tessal": 10, "region": [10, 56], "centroid": 10, "tesslation_by_clust": 10, "complet": [10, 11, 12, 15, 16, 19, 20, 24, 30, 38, 56, 58, 60, 61, 62, 63, 65, 87, 89, 93, 94], "plot_voironi": 10, "overlai": 10, "vt": 10, "voironi": 10, "tessal": 10, "design": [10, 17, 27, 33, 35, 37, 58, 64, 75, 81, 94], "flexibl": [10, 55, 71, 87], "tool": [10, 16, 22, 28, 31, 32, 34, 36, 52, 54, 67, 83, 85, 87, 91, 93, 95], "done": [10, 13, 15, 16, 20, 23, 27, 34, 50, 74, 87, 89], "get_qaoa_circuit": 10, "3527": 10, "19": [10, 11, 13, 16, 20, 21, 22, 23, 25, 34, 57, 75, 78, 83], "484": [10, 20], "12163": 10, "89it": 10, "52703": 10, "30it": 10, "48": [10, 20], "31987": 10, "07it": 10, "36393": 10, "37957": 10, "42473": 10, "96it": 10, "quickli": [10, 12, 38, 81, 89], "encount": [10, 57, 67, 68, 78, 87, 89, 94], "port": [10, 64, 89], "hpc": [10, 36, 89, 95], "becam": 10, "massiv": [10, 24], "compar": [10, 16, 27, 31, 72, 73, 89, 94], "100000": [10, 11, 12, 81], "slightli": [10, 27], "python3": [10, 58, 64, 65, 66, 67, 68, 73, 74, 81, 87, 89, 94], "751": 10, "3460": 10, "26it": 10, "42771": 10, "74it": 10, "4064": 10, "6862": 10, "37it": 10, "56871": 10, "92it": 10, "44979": 10, "13it": 10, "128": [10, 14, 25, 83], "19366": 10, "94it": 10, "53773": 10, "54648": 10, "91it": 10, "51941": 10, "85it": 10, "56111": 10, "461": [10, 20], "866833317": 10, "spent": 10, "452308367999706": 10, "oner": 10, "feel": 10, "interrupt": 10, "patienc": 10, "worn": 10, "still": [10, 19, 21, 24, 28, 42, 52, 66, 73, 78, 82, 89, 93], "easili": [10, 12, 16, 17, 24, 73, 87, 89, 93], "7352": 10, "03": [10, 57], "2063": 10, "82it": 10, "16492": 10, "4739": 10, "44it": [10, 20], "256": [10, 14, 20, 61], "15185": 10, "58it": 10, "64": [10, 11, 14, 64, 68, 69, 83, 87, 89], "23728": 10, "05it": 10, "15437": 10, "97it": 10, "50840": 10, "33562": 10, "54120": 10, "54560": 10, "55924": 10, "42717": 10, "29it": 10, "55007": 10, "27it": 10, "53601": 10, "33it": [10, 20], "47127": 10, "01it": 10, "67": [10, 20], "61674502899999": 10, "21": [10, 11, 13, 16, 20, 21, 22, 25, 34, 66, 75, 83], "439895901": 10, "push": [10, 93], "a100": 10, "yourself": [10, 87], "nlopt": [10, 83], "failur": [10, 93], "pool": [10, 57], "finish": [10, 16, 28, 73, 83], "fail": [10, 21, 67, 85, 89, 93], "immedi": [10, 64, 65, 86], "issu": [10, 38, 68, 87, 93, 94], "mgpu": [10, 15, 18, 27, 33, 36, 57, 64, 67, 69, 95], "gpu_count": 10, "smi": [10, 87, 89], "l": [10, 23, 27, 32, 38, 83, 91, 93], "wc": 10, "mpirun": [10, 64, 68], "perimet": 11, "cp": [11, 58, 89], "style": 11, "bmh": 11, "plot_imag": 11, "img": 11, "xtick": [11, 16], "ytick": [11, 16], "imshow": [11, 14], "cmap": [11, 22], "viridi": 11, "pixel": 11, "intens": [11, 20, 28, 73], "along": [11, 13, 15, 20, 26, 31, 38, 57, 63, 65, 67, 73, 75, 81, 93], "white": 11, "c_i": [11, 15], "i_": 11, "2_": 11, "written": [11, 14, 22, 34, 38, 66, 82, 87, 91], "c_0": 11, "c_1": 11, "c_2": 11, "c_3": 11, "amplitude_encod": 11, "img_data": 11, "rm": [11, 22, 87, 89], "image_norm": 11, "image_norm_flat": 11, "astyp": [11, 21], "complex64": 11, "ancod": 11, "horizont": 11, "image_norm_h": 11, "state_image_h": 11, "image_norm_v": 11, "state_image_v": 11, "grai": [11, 17], "theta_i": 11, "theta_0": 11, "theta_1": 11, "theta_2": 11, "2n": 11, "faltten_imag": 11, "arcsin": 11, "pos_pixel": 11, "log2": [11, 19, 23], "k_valu": 11, "new_stat": 11, "jk": 11, "temp": [11, 15, 83], "index_q": 11, "num_x": 11, "arr": 11, "5707963267948966": 11, "y_rot": 11, "q_po": 11, "aux": 11, "tot_x": 11, "1000000": [11, 73, 78], "total_qubit": 11, "amp": [11, 34], "decim": [11, 18], "retrieve_imag": 11, "06b": 11, "s_1": 11, "decimal_1": 11, "s_0": 11, "decimal_0": 11, "pixel_valu": 11, "arcco": 11, "reshap": [11, 14, 19], "lead": [11, 17, 19, 30, 36, 95], "grow": [11, 57, 86], "pose": 11, "With": [11, 16, 20, 35, 36, 64, 65, 73, 83, 89, 90, 95], "induc": 11, "furthermor": [11, 17, 36, 95], "scan": 11, "emploi": [11, 25, 30], "qc_img": 11, "vec": [11, 15, 75], "ancilla": [11, 12, 15, 20, 38, 40], "q6": [11, 20, 23], "result_h": 11, "result_v": 11, "amp_h": 11, "amp_v": 11, "edge_scan_h": 11, "edge_scan_v": 11, "edge_scan_sim": 11, "subroutin": [12, 27, 72, 75], "molecular": [12, 16, 20, 26, 27, 35], "semidefinit": 12, "briefli": 12, "insight": 12, "re": [12, 16, 20, 22, 23, 38, 52, 58, 79, 81, 87, 89], "x_1x_2": 12, "fact": [12, 18, 23, 52, 93], "u_": [12, 20, 25], "qquad": 12, "repeatedli": [12, 21, 23, 73], "pmatrix": [12, 30], "functool": [12, 22], "num": 12, "psi_stat": 12, "phi_stat": 12, "sv": [12, 21, 91], "707107": 12, "ham_matrix": 12, "exp_val": [12, 13, 14, 26, 27, 32, 58, 64, 77], "conj": [12, 15, 19, 25], "7071067690849304": 12, "fourth": [12, 58], "u_psi": 12, "u_phi": 12, "ham_cir": 12, "toward": [12, 16], "mean_val": 12, "qc": [12, 63], "85281": 12, "14719": 12, "70562": 12, "0015844563982640861": 12, "hilbert": [12, 50, 58], "orthogon": [12, 15], "easi": [12, 17, 23, 58, 91], "mqpu": [12, 15, 27, 28, 32, 64, 69, 73, 77], "sake": 12, "qpu_count": [12, 20, 27, 32, 64, 81], "four": [12, 16, 21, 32, 54, 64, 77, 81, 82], "i_result": 12, "49865": 12, "50135": 12, "0027": 12, "0022360598270171573": 12, "49796": 12, "50204": 12, "00408": 12, "002236049366181346": 12, "49695": 12, "50305": 12, "0061": 12, "002236026375068058": 12, "49972": 12, "50028": 12, "00056": 12, "002236067626884303": 12, "my_mat": 12, "eigh": 12, "00782313": 12, "00456313": 12, "76575845": 12, "64312829": 12, "focu": [13, 23, 25, 33], "chain": [13, 24, 26, 52], "suzuki": [13, 35], "magnet": [13, 35], "materi": [13, 16, 78, 82], "transit": [13, 25], "nearest": [13, 20], "neighbor": [13, 20], "j_x": [13, 24], "s_i": 13, "s_": [13, 15], "j_y": 13, "j_z": 13, "alpha": [13, 15, 17, 19, 58, 82], "direct": [13, 34, 83, 93], "coupl": [13, 26, 27, 43, 58, 68, 78, 89], "focus": 13, "competit": 13, "extern": [13, 36, 67, 83, 85, 87, 93, 95], "sum_i": 13, "strength": [13, 16, 58], "iht": [13, 24], "commut": 13, "approx": [13, 24, 82], "ih_1": 13, "delta": [13, 61, 78], "ih_2": 13, "ih_n": 13, "h_i": 13, "sy": [13, 34, 73, 94], "odd": 13, "get_initial_st": 13, "n_spin": [13, 24], "_use_xxyyzz_g": 13, "standrd": 13, "dt": [13, 15, 24], "jx": [13, 24], "jy": [13, 24], "jz": [13, 24], "ax": [13, 16, 19, 22, 23], "h_x": 13, "h_y": 13, "h_z": 13, "unus": 13, "trotter_step": 13, "compute_overlap_prob": 13, "evolved_st": 13, "formula": [13, 17], "create_hamiltonian_heisenberg": 13, "create_hamiltonian_tfim": 13, "h_field": 13, "extractcoeffici": 13, "extractword": 13, "ham_typ": 13, "choos": [13, 20, 21, 23, 30, 73, 78, 89], "xxyyzz": 13, "exit": [13, 78, 81, 89], "ones": [13, 25, 38, 58], "valueerror": [13, 15, 16, 58], "invalid": [13, 25, 67, 68], "start_tim": [13, 24, 27, 65, 81], "total_tim": 13, "3f": 13, "060": 13, "grid": [13, 16], "exp_valu": 13, "6f": 13, "arang": [13, 22], "reli": [13, 25, 45, 83, 89, 91, 93], "xx_gate": 13, "tau": 13, "yy_gat": 13, "zz_gate": 13, "io": [13, 27, 75, 78, 89], "quant": 13, "ph": [13, 83], "9503016": 13, "b4d549b1951738f3a5a481d1d93bf090e1e622fa": 13, "highlight": [14, 33, 36, 95], "pytorch": [14, 20, 89], "maximis": 14, "classif": 14, "mnist": 14, "dataset": [14, 20], "classifi": [14, 25, 65], "hand": [14, 19, 57, 64, 68, 89, 93], "torch": [14, 20, 25, 58, 89], "cu118": 14, "torchvis": [14, 20], "url": [14, 20, 62, 63, 64, 78, 81, 87, 89], "download": [14, 20, 25, 87, 89, 94], "whl": [14, 20, 87, 89], "autograd": 14, "nn": [14, 20], "sklearn": 14, "model_select": 14, "train_test_split": 14, "manual_se": [14, 25], "44": [14, 20, 22], "prepare_data": 14, "target_digit": 14, "sample_count": [14, 81], "test_siz": 14, "percentag": [14, 20], "remaind": [14, 17], "train": [14, 16, 25], "totensor": 14, "1307": 14, "3081": 14, "filter": 14, "datapoint": [14, 20], "subset_indic": 14, "randperm": 14, "unsqueez": [14, 20], "relabel": 14, "min": [14, 15, 23], "x_train": 14, "x_test": 14, "y_train": 14, "y_test": 14, "random_st": 14, "classification_threshold": 14, "accuraci": [14, 16, 23, 25, 65], "parmet": 14, "visualis": 14, "sample_to_plot": 14, "grid_img": 14, "make_grid": 14, "pad": [14, 20], "permut": [14, 21], "quantumfunct": 14, "finit": [14, 27, 32], "theta_v": 14, "excetut": 14, "live": 14, "staticmethod": 14, "quantum_circuit": 14, "backward": [14, 27, 32, 44], "save_for_backward": 14, "grad_output": 14, "saved_tensor": 14, "thetas_plu": 14, "exp_vals_plu": 14, "thetas_minu": 14, "exp_vals_minu": 14, "mul": 14, "quantumlay": 14, "hybrid_qnn": 14, "fc1": 14, "fc2": 14, "dropout": 14, "fc3": 14, "fc4": 14, "fc5": 14, "feed": [14, 17], "view": [14, 43, 53, 56, 65, 89], "relu": 14, "fed": [14, 20], "sigmoid": 14, "accuracy_scor": 14, "y_hat": 14, "hybrid_model": 14, "adadelta": 14, "lr": [14, 83], "weight_decai": [14, 20], "loss_funct": 14, "bceloss": 14, "training_cost": 14, "testing_cost": 14, "training_accuraci": 14, "testing_accuraci": 14, "zero_grad": 14, "y_hat_train": 14, "train_cost": 14, "eval": [14, 15], "no_grad": 14, "y_hat_test": 14, "test_cost": 14, "figsiz": [14, 16, 22, 25], "subplot": [14, 16, 22], "tight_layout": [14, 16], "proto": [14, 25], "018ba9130a0e5800b93e86d0096a22daf7a132f8": [14, 25], "multirefer": 15, "mrsqk": 15, "low": [15, 16, 22, 45, 61, 69, 81], "altern": [15, 17, 20, 24, 56, 61, 62, 78, 80, 87, 89, 94], "background": [15, 64], "trotter": [15, 35, 46], "diagon": [15, 67], "heurist": 15, "hartre": [15, 26, 27], "fock": [15, 26, 27, 58], "cisd": 15, "veri": [15, 25, 36, 64, 79, 85, 93, 95], "lcu": 15, "avoid": [15, 25, 87, 93, 94], "phi_0": 15, "phi_d": 15, "slater": 15, "phi_i": 15, "mu": 15, "phi_": 15, "mathcal": 15, "famili": 15, "equiv": [15, 23, 82], "psi_i": 15, "hat": [15, 94], "_n": 15, "c_": 15, "boldsymbol": 15, "hc": 15, "sc": [15, 60], "_m": 15, "phi_j": 15, "h_": [15, 16, 19], "sigma_": [15, 58], "question": 15, "openfermion": [15, 27], "pyscf": [15, 27], "openfermionpyscf": [15, 26, 27], "multi_gpu": 15, "h2": 15, "geometri": [15, 26, 27], "7474": [15, 26], "chemistri": [15, 16, 20, 26, 27], "create_molecular_hamiltonian": [15, 26], "sto": [15, 26, 27], "3g": [15, 26, 27], "electron_count": [15, 26, 27], "n_electron": [15, 26], "n_orbit": [15, 26], "spin_ham_matrix": 15, "eig": 15, "argmin": [15, 25], "min_indic": 15, "termcoeffici": [15, 24], "termword": [15, 24], "pauli_str": 15, "potenti": [15, 19, 23, 27, 28, 38, 73], "improv": [15, 23, 27, 33, 36, 67, 68, 81, 89, 95], "higher": [15, 37, 65], "receiv": [15, 38], "um": 15, "u_m": 15, "un": 15, "u_n": 15, "apply_pauli": 15, "qfd_kernel": 15, "dt_alpha": 15, "dt_beta": 15, "word_list": 15, "my_list": 15, "x_0": [15, 16], "y_0": 15, "m_qfd": 15, "wf_overlap": 15, "accomplish": [15, 20, 29, 81], "observe_op": 15, "identity_word": 15, "pauli_list": 15, "dt_m": 15, "dt_n": 15, "collect_overlap_r": 15, "collect_overlap_img": 15, "sent": [15, 62, 64, 78], "count_id": 15, "tot_dim": 15, "real_val": 15, "img_val": 15, "ham_matrx": 15, "tot_": 15, "accumul": [15, 78], "ham_matrix_r": 15, "ham_matrix_imag": 15, "enter": [15, 78, 89], "eigenvaulu": 15, "sum_k": 15, "v_": 15, "s_k": 15, "kj": 15, "hx": 15, "sce": 15, "s_diag": 15, "s_prime": 15, "sii": 15, "x_prime": 15, "h_prime": 15, "e_prim": 15, "c_prime": 15, "eigen_valu": 15, "eigen_vect": 15, "qfd": 15, "perhap": 16, "highli": [16, 87, 89], "tout": 16, "industri": 16, "fault": [16, 94], "correl": [16, 22], "particularli": [16, 23, 25, 27, 67, 72, 75], "interest": [16, 18, 19, 21, 23, 25, 26, 27, 77, 79], "theori": [16, 66, 82], "dmft": 16, "account": [16, 23, 56, 57, 59, 60, 61, 63, 78, 89], "strong": 16, "electron": [16, 26, 27], "bath": 16, "encompass": 16, "tough": 16, "showcas": [16, 34], "siam": 16, "realist": 16, "appar": 16, "demo": [16, 63], "cudaq_solv": 16, "importerror": [16, 34, 89], "quiet": 16, "restart": [16, 34], "newli": [16, 89], "abc": 16, "restrict": [16, 17, 19, 25, 27, 61, 64], "z_0": 16, "z_2": 16, "coulomb": 16, "ev": 16, "trainabl": 16, "absenc": 16, "n_qubit": [16, 19, 22, 41, 81], "paramterized_ansatz": 16, "variational_angl": 16, "run_logical_vq": 16, "cudaq_hamiltonian": 16, "easier": [16, 18, 38, 83, 86], "reproduct": 16, "init_angl": 16, "get_qubit_count": 16, "variational_kernel": 16, "slsqp": [16, 22], "bare": 16, "unencod": 16, "gateset": [16, 25], "readout": [16, 35], "meas_id": 16, "aim_physical_circuit": 16, "ignore_meas_id": 16, "prep": [16, 42], "z_basi": 16, "for_loop": 16, "q_idx": 16, "getattr": 16, "x_basi": 16, "unsupport": 16, "aim_logical_circuit": 16, "teleport": 16, "noisili": [16, 61], "generate_circuit_set": 16, "u_val": 16, "v_val": 16, "circuit_dict": 16, "qubit_hamiltonian": [16, 27], "tmp_physical_dict": 16, "tmp_logical_dict": 16, "nfinish": 16, "sim_circuit_dict": 16, "circuit_lay": 16, "5846845738799267": 16, "5707961678256028": 16, "588033710930825": 16, "712388365176642": 16, "588651490745171": 16, "5707962742876598": 16, "64012940802256": 16, "5707963354922125": 16, "1293956916868737": 16, "5707963294715355": 16, "6598458659836037": 16, "570796331040382": 16, "695151467539617": 16, "5707960973500679": 16, "4149519241823376": 16, "5707928509325972": 16, "7301462729177735": 16, "570796033796985": 16, "plai": [16, 18], "role": [16, 18], "post": [16, 25, 38, 60, 63, 89], "_num_qubit": 16, "isdecim": 16, "process_count": 16, "data_qubit": 16, "flag_qubit": 16, "dict": [16, 22, 23], "new_data": 16, "continu": [16, 18, 19, 23, 25, 73, 78, 83], "new_kei": 16, "issuperset": 16, "setdefault": 16, "physical_to_log": 16, "0000": [16, 20, 21, 64], "1111": [16, 64], "0011": [16, 21], "1100": 16, "0110": 16, "1001": 16, "physical_kei": 16, "logical_kei": 16, "ev_x": 16, "ev_xx": 16, "ev_zz": 16, "aim_logical_energi": 16, "data_ord": 16, "counts_list": 16, "counts_data": 16, "_aim_energi": 16, "aim_physical_energi": 16, "evx": 16, "evxx": 16, "evzz": 16, "h_param": 16, "key_a": 16, "key_b": 16, "startswith": 16, "uncertainti": 16, "string_kei": 16, "uncertainty_xx": 16, "uncertainty_zz": 16, "_get_energy_diff": 16, "bf_energi": 16, "physical_energi": 16, "logical_energi": 16, "physical_energy_diff": 16, "logical_energy_diff": 16, "physical_sim_energi": 16, "logical_sim_energi": 16, "brute": 16, "forc": [16, 26, 36, 64, 93, 95], "got": 16, "72": 16, "submit_aim_circuit": 16, "folder_path": 16, "future_aim_result": 16, "run_async": 16, "makedir": 16, "exist_ok": 16, "aim_result": 16, "tmp_physical_result": 16, "open": [16, 61, 64, 78, 83, 87, 89], "physical_": 16, "_job_u": 16, "_v": 16, "_result": 16, "txt": [16, 78, 85, 86, 89, 90], "close": [16, 19, 25, 73, 78, 81], "tmp_logical_result": 16, "logical_": 16, "ncomplet": 16, "nall": 16, "async": 16, "_get_async_result": 16, "physical_count": 16, "logical_count": 16, "nobtain": 16, "domin": 16, "Such": [16, 52, 55, 73], "get_device_nois": 16, "depolar_prob_1q": 16, "depolar_prob_2q": 16, "readout_error_prob": 16, "custom_g": 16, "depolar_nois": 16, "noisy_op": 16, "custom_depolar_channel": 16, "p_0": 16, "p_1": 16, "k0": 16, "complex128": [16, 25, 30, 58], "k1": 16, "k3": 16, "cz": 16, "bit_flip": [16, 22, 30, 65], "cudaq_noise_model": 16, "rate": [16, 20, 21, 57], "fidel": 16, "99": [16, 20, 22], "98": 16, "002": 16, "02": [16, 20, 66, 87, 89], "aim_sim_data": 16, "sim_physical_energi": 16, "sim_physical_uncertainti": 16, "sim_logical_energi": 16, "sim_logical_uncertainti": 16, "251736027394713": 16, "265564437074638": 16, "252231964940428": 16, "293350575766127": 16, "608495283014149": 16, "305692796870582": 16, "39007993367173": 16, "260398644698076": 16, "429650912487233": 16, "deviat": [16, 87], "sim_physical_energy_diff": 16, "sim_logical_energy_diff": 16, "929": 16, "46016175277361": 16, "97": 16, "176531948420889": 16, "268": 16, "26321740664324": 16, "8495": 16, "46681284816878": 16, "1965000000000003": 16, "4531715120183297": 16, "336": 16, "341784541550897": 16, "802": 16, "339249509416753": 16, "8580000000000005": 16, "1227150992242025": 16, "3635": 16, "448422736181264": 16, "subject": 16, "overcom": 16, "preview": 16, "offer": [16, 35, 57, 68, 94], "fig": [16, 22], "dpi": 16, "200": [16, 23, 38], "layer_label": 16, "plot_label": 16, "errorbar": 16, "yerr": 16, "ecolor": 16, "255": 16, "94": [16, 22], "capsiz": 16, "elinewidth": 16, "fmt": 16, "markers": 16, "markeredgewidth": 16, "177": 16, "152": [16, 20, 22], "set_xlabel": [16, 22], "fontsiz": [16, 22, 25], "set_ylabel": [16, 22], "set_titl": [16, 22], "loc": 16, "axhlin": 16, "linestyl": 16, "linewidth": [16, 25], "ylim": 16, "bottom": [16, 75], "ve": [16, 36, 79, 91, 95], "seamlessli": 16, "superstaq": [16, 36, 61, 78, 95], "hood": [16, 93], "inde": [16, 25, 87], "gain": 16, "registr": [16, 61, 63, 85, 86], "device_circuit_dict": 16, "7301462945564499": 16, "570796044872433": 16, "superstaq_api_kei": [16, 61], "api_kei": [16, 57], "cq_sqale_qpu": [16, 61, 78], "dry": [16, 61, 78], "sim": [16, 61, 78], "simpl": [16, 30, 32, 40, 43, 57, 58, 64, 65, 71, 73, 77, 78, 79, 81, 83, 85, 89, 90, 94], "recommend": [16, 25, 38, 78, 87, 89, 94], "meantim": [16, 78, 89], "hardware_aim_future_result": 16, "aim_device_data": 16, "physical_uncertainti": 16, "logical_uncertainti": 16, "626499999999997": 16, "69666562801761": 16, "1415": 16, "2032104443266585": 16, "9955": 16, "76919450035401": 16, "331": 16, "85730052910377": 16, "476": [16, 22], "5425689231532203": 16, "043500000000002": 16, "795918428433312": 16, "4715": 16, "96524696701215": 16, "973": 16, "207315773582224": 16, "182": 16, "241375689575516": 16, "yet": [16, 22, 27, 28, 36, 61, 64, 81, 89, 95], "afford": 16, "closer": [16, 72, 79, 83], "outperform": 16, "farhi": 17, "dive": [17, 34, 36, 89, 95], "ll": [17, 18, 23, 79, 83, 86, 90], "although": [17, 61, 66, 82], "rel": [17, 66, 68], "hard": 17, "wide": [17, 25, 52, 83, 93], "statist": [17, 28, 38, 41, 65, 66, 73, 82], "among": [17, 64], "wider": [17, 64], "portfolio": 17, "shop": 17, "vertex": 17, "subseteq": 17, "mathbb": [17, 30, 66, 82], "interchang": [17, 67], "undirect": 17, "v_0": 17, "v_1": 17, "bigcup": 17, "bigcap": 17, "emptyset": 17, "illustr": [17, 25, 38, 58, 62, 64, 66, 76, 78, 79], "disjoint": 17, "depict": [17, 19, 20, 23, 34], "distinct": [17, 25, 34, 52], "substack": 17, "sometim": [17, 19, 62], "01100": [17, 23, 64], "v1": [17, 60], "v2": 17, "v0": 17, "v3": [17, 87, 89], "v4": [17, 89], "01010": [17, 23], "10101": [17, 23], "edges_src": 17, "edges_tgt": 17, "algortihm": 17, "hamilitonian": 17, "deeper": [17, 34], "layer_count": 17, "qaoaproblem": 17, "subcircuit": [17, 72], "plaehold": 17, "mention": [17, 25], "z_v": 17, "vale": 17, "arbirtrari": 17, "z_uz_v": 17, "refram": 17, "promot": [17, 35, 94], "reformul": 17, "hamiltonian_max_cut": 17, "inititi": 17, "iiziz": 17, "izzii": 17, "iiiii": 17, "zziii": 17, "iiizz": 17, "iizzi": 17, "ziizi": 17, "495973826282007": 17, "51349181993727": 17, "21299416361632417": 17, "3250526425808945": 17, "886630847343767": 17, "max_cut": 17, "11111": [17, 23], "11110": [17, 23], "01101": [17, 23], "148": 17, "01110": [17, 23], "47": [17, 20, 22, 23, 34], "01000": [17, 23], "00110": [17, 23], "54": [17, 20, 22], "165": 17, "00101": [17, 23], "154": 17, "00100": [17, 23], "01001": [17, 23], "41": [17, 23], "00000": [17, 23], "00011": [17, 23], "10011": [17, 23, 64], "00010": [17, 23], "01111": [17, 23], "11011": [17, 23], "00111": [17, 23], "11100": [17, 23], "10001": [17, 23], "10010": [17, 23], "144": [17, 22], "10110": [17, 23], "40": [17, 19, 20, 22, 25, 26, 32, 81], "10111": [17, 23], "11000": [17, 23], "11101": [17, 23], "11001": [17, 23], "a726804916fd397408cbf595ce6fe5f33dcd8b4c": [17, 18], "aid": [18, 37], "area": [18, 20, 64], "signal": [18, 43, 58], "compress": 18, "quantiz": [18, 20], "qft": 18, "ingredi": 18, "shor": [18, 35], "faster": [18, 19, 23, 25, 27, 67], "prime": [18, 23], "vital": 18, "idea": [18, 23], "domain": 18, "analogi": 18, "ixi": 18, "5i": 18, "35": [18, 19, 20, 22, 23], "0i": 18, "25i": 18, "35i": 18, "r_k": 18, "bmatrix": [18, 22, 66, 82], "ciruit": 18, "quantum_fourier_transform": [18, 23], "cr1": [18, 23, 41], "zeroth": 18, "round": [18, 25, 32, 41], "r1": [18, 23, 34, 41, 45, 52], "571": [18, 23], "7854": [18, 23], "25j": 18, "35j": 18, "fast": [18, 25, 43, 65, 67, 72], "n2": 18, "life": [18, 57], "li": [18, 23, 83], "invert": [18, 25], "revers": [18, 23, 49], "quantum_fourier_transform2": 18, "attent": [18, 67], "inverse_qft": [18, 23], "verification_exampl": 18, "phenomena": [19, 66, 82], "implic": 19, "initialis": 19, "unless": [19, 38, 87, 89], "0th": [19, 30], "arbitari": 19, "2nd": 19, "beta_": 19, "replic": 19, "stage": 19, "psi0": [19, 58], "psi4": 19, "71": 19, "62": [19, 27], "psi1": 19, "psi2": 19, "psi3": 19, "m1": 19, "m2": 19, "psi_4": 19, "multipartit": 19, "partial": 19, "subsystem": 19, "partial_trac": 19, "state_vector": 19, "trace_system": 19, "particl": [19, 52], "rho": 19, "tensordot": 19, "prod": 19, "state_of_q0": 19, "state_of_q2": 19, "allclos": [19, 25], "gt": [19, 20, 25, 28, 32, 87, 89], "portion": 19, "lab": [19, 89], "infinit": [19, 25, 43, 50, 73], "apart": 19, "obei": [19, 82], "theorem": [19, 50], "longer": [19, 30, 65, 87], "preserv": [19, 30, 65], "violat": 19, "travel": 19, "speed": 19, "light": [19, 58], "experimentalist": 19, "cx_": 19, "alic": 19, "bob": 19, "safekeep": 19, "moon": 19, "posess": 19, "she": 19, "send": 19, "who": 19, "mile": 19, "entail": 19, "collaps": [19, 28, 66, 73, 82, 86], "seper": [19, 26], "poss": 19, "expand": [19, 20, 36, 68, 83, 95], "bracket": 19, "110": [19, 22, 23], "whilst": 19, "maintain": 19, "ask": [19, 89], "her": 19, "unmeasur": 19, "determinist": [19, 66, 73], "tell": [19, 22, 66, 82], "summaris": 19, "psi_3": 19, "nearli": [19, 81], "pend": 19, "minor": 19, "fulfil": 19, "protocol": [19, 87], "m1m2": 19, "recov": 19, "ambit": 19, "instantli": 19, "he": 19, "rather": [19, 20, 24, 28, 29, 57, 67, 73, 82, 93], "transmit": 19, "courtesei": 19, "textbook": 19, "nielsen": 19, "chuang": 19, "rdkit": 20, "2024": [20, 25, 57], "cu121": 20, "torchaudio": 20, "torchdata": 20, "seaborn": [20, 22], "gdown": 20, "perlmutt": 20, "conda": [20, 87, 94], "cuda_quantum_transformer_env": 20, "yml": 20, "env": [20, 94], "ipykernel": 20, "per": [20, 58, 64, 67, 81], "jupyt": [20, 34, 56, 89], "kernelspec": 20, "token": [20, 25, 56, 60, 61, 62, 63, 78, 89], "embed": 20, "propag": 20, "score": [20, 21], "pairwis": 20, "beyond": [20, 23, 57, 68, 85], "physicochem": 20, "e_i": 20, "p_i": [20, 46], "u_c": 20, "event": [20, 28, 73, 87], "u_q": 20, "e_j": 20, "p_j": 20, "u_k": 20, "straightfoward": 20, "recal": [20, 83], "quantum_transformer_src": 20, "unitary_librari": 20, "controlled_adjoint_unitari": 20, "controlled_unitari": 20, "straightforward": [20, 23], "overal": [20, 38, 83, 86], "build_sequence_only_circuit": 20, "token_i": 20, "position_i": 20, "token_j": 20, "position_j": 20, "ansatz_lay": 20, "num_working_qubit": 20, "subsystem_s": 20, "noqa": 20, "f821": 20, "inspect": 20, "dummi": 20, "span": [20, 42, 50], "whole": 20, "dummy_token_i": 20, "dummy_position_i": 20, "dummy_queri": 20, "dummy_token_j": 20, "dummy_position_j": 20, "dummy_kei": 20, "unscal": 20, "32332373054859076": 20, "353": 20, "365": 20, "974": 20, "442": 20, "599": 20, "777": 20, "761": 20, "449": 20, "9803": 20, "1293": 20, "9801": 20, "094": 20, "334": 20, "142": [20, 34], "714": [20, 22], "912": 20, "297": 20, "83": [20, 22], "844": [20, 30], "8765": 20, "836": 20, "302": [20, 22], "9999998277981461": 20, "smile": 20, "qm9": 20, "ensure_training_data": 20, "transformer_dataset": 20, "training_data": 20, "csv": 20, "data_path": 20, "block_siz": 20, "infer": [20, 25, 66, 82], "tokenzied_datapoint": 20, "ito": 20, "2025": 20, "09": [20, 25], "04": [20, 87, 89], "58": [20, 22], "986": 20, "adjust": [20, 22, 67, 68, 87, 93], "cl": 20, "eo": 20, "triethlyamine_example_indic": 20, "tokenize_smil": 20, "ccn": 20, "cc": [20, 52, 67, 83, 87], "indici": 20, "triethlyamin": 20, "triethlyamine_example_tokenzi": 20, "learnabl": 20, "embedding_matrix": 20, "vocab": [20, 25], "triethlyamine_token_embed": 20, "6385": 20, "0583": 20, "3623": 20, "9441": 20, "1235": 20, "9325": 20, "5592": 20, "5694": 20, "9001": 20, "3628": 20, "7841": 20, "5299": 20, "3288": 20, "9595": 20, "8252": 20, "8048": 20, "7066": 20, "3602": 20, "4920": 20, "1895": 20, "9964": 20, "grad_fn": 20, "embeddingbackward0": 20, "get_physchem_properti": 20, "nine": 20, "phyisochem": 20, "mw": 20, "hydrogen": [20, 26], "bond": [20, 26, 68], "acceptor": 20, "hba": 20, "donor": 20, "hbd": 20, "nrot": 20, "ring": [20, 63], "nring": 20, "heteroatom": 20, "nhet": 20, "topolog": 20, "surfac": 20, "tpsa": 20, "logp": 20, "stereocent": 20, "scale_to_rang": 20, "triethylamine_example_properti": 20, "triethylamin": 20, "properties_linear_lay": 20, "triethylamine_physchem_embed": 20, "193": 20, "3481": 20, "1416": 20, "4595": 20, "addbackward0": 20, "assosci": 20, "positional_embed": 20, "query_angl": 20, "key_angl": 20, "5989e": 20, "5420e": 20, "2289e": 20, "2363e": 20, "5234e": 20, "4849e": 20, "8162e": 20, "8772e": 20, "6570e": 20, "2593e": 20, "0761e": 20, "7830e": 20, "8586e": 20, "6136e": 20, "8384e": 20, "2277e": 20, "9890e": 20, "5313e": 20, "4106e": 20, "0625e": 20, "5667e": 20, "7864e": 20, "3209e": 20, "1295e": 20, "7105e": 20, "5052e": 20, "1810e": 20, "6610e": 20, "3487e": 20, "2563e": 20, "7539e": 20, "3147e": 20, "1980e": 20, "2200e": 20, "9201e": 20, "8471e": 20, "4257e": 20, "0934e": 20, "4356e": 20, "2111e": 20, "4584e": 20, "4740e": 20, "0104e": 20, "5124e": 20, "1003e": 20, "3948e": 20, "7301e": 20, "6319e": 20, "7367e": 20, "1952e": 20, "5530e": 20, "2390e": 20, "4680e": 20, "7429e": 20, "6234e": 20, "2586e": 20, "5449e": 20, "6591e": 20, "3635e": 20, "1968e": 20, "7926e": 20, "7988e": 20, "0953e": 20, "6715e": 20, "2218e": 20, "6202e": 20, "8691e": 20, "3352e": 20, "8979e": 20, "4789e": 20, "3580e": 20, "4028e": 20, "requires_grad": 20, "0371": 20, "2226": 20, "8525": 20, "3378": 20, "7377": 20, "2443": 20, "9310": 20, "2740": 20, "0841": 20, "8621": 20, "5424": 20, "3166": 20, "carbon": 20, "nitrogen": 20, "build_physchem_embeddings_circuit": 20, "physchem": 20, "triethylamine_token_i": 20, "detach": 20, "triethylamine_position_i": 20, "triethylamine_token_j": 20, "triethylamine_position_j": 20, "triethylamine_physchem": 20, "triethylamine_queri": 20, "triethylamine_kei": 20, "07270196651512496": 20, "geq": 20, "softmax": 20, "train_transform": 20, "checkpoint_dir": 20, "checkpoint": 20, "checkpoint_resume_path": 20, "resum": 20, "learning_r": 20, "batch_siz": 20, "save_every_n_batch": 20, "validation_split": 20, "fraction": [20, 23, 68], "attn_typ": 20, "conditional_train": 20, "quantum_gradient_method": 20, "spsa": 20, "spsa_epsilon": 20, "epsilon": [20, 27, 30, 32], "sample_percentag": 20, "classical_parameter_reduct": 20, "most_recent_batch": 20, "pt": [20, 62, 78, 89], "classical_exampl": 20, "005": 20, "05": [20, 23, 24, 57], "466": 20, "garunte": 20, "473": 20, "499": 20, "511": 20, "512": 20, "074": 20, "127109": 20, "6689": 20, "133798": 20, "3149": 20, "88it": 20, "56": 20, "482": 20, "training_split": 20, "train_dataset_2025": 20, "09_04": 20, "3159": 20, "62it": 20, "619": 20, "val_dataset_2025": 20, "782": 20, "786": 20, "share": [20, 23, 36, 67, 86, 89, 93, 95], "332": 20, "scaler": 20, "333": 20, "loader": [20, 83], "8361": 20, "497": 20, "34it": 20, "7100": 20, "48it": 20, "7108": 20, "52": 20, "41it": 20, "6858": 20, "38it": 20, "6917": 20, "52it": 20, "40it": 20, "classical_example_condit": 20, "443": 20, "446": [20, 22], "459": 20, "942": 20, "2997": 20, "24it": 20, "37": [20, 64], "364": 20, "06_13": 20, "2946": 20, "49it": 20, "649": 20, "653": 20, "656": 20, "657": 20, "658": 20, "0551": 20, "6301": 20, "28it": 20, "6409": 20, "32it": 20, "5996": 20, "5612": 20, "4919": 20, "switch": [20, 81], "neural": [20, 25, 35], "network": [20, 25, 35, 36, 54, 57, 61, 62, 64, 67, 69, 78, 86, 89, 95], "insofar": 20, "backprog": 20, "computation": 20, "linearli": [20, 58, 82], "impract": [20, 22, 81], "nisq": 20, "era": 20, "perturb": 20, "quantum_exampl": 20, "712": 20, "716": [20, 65], "727": 20, "728": [20, 29], "729": 20, "288": 20, "3249": 20, "412": 20, "12it": 20, "486": [20, 57], "8797": 20, "7182": 20, "7129": 20, "60": [20, 22, 89], "6804": 20, "6892": 20, "6672": 20, "curv": 20, "generate_plots_from_checkpoint": 20, "quantum_checkpoint_path": 20, "model_epoch_3": 20, "classical_equal_param_checkpoint_path": 20, "eq": [20, 22, 83], "plot_train_loss": 20, "show_plot": 20, "header": [20, 45, 87, 89, 91, 93], "generate_smil": 20, "novelti": 20, "successfulli": [20, 25, 32], "pars": 20, "novel": [20, 43], "checkpoint_path": 20, "save_path": 20, "choose_best_val_epoch": 20, "previou": [20, 23, 24, 27, 29, 36, 44, 50, 58, 89, 95], "num_of_model_queri": 20, "sampling_batch_s": 20, "float64": 20, "imputation_method": 20, "imput": 20, "miss": [20, 25, 52, 67, 87], "imputation_dataset_path": 20, "train_id": 20, "dataset_novelty_check_path": 20, "save_dir": 20, "generated_molecul": 20, "250": 20, "2f": 20, "283": 20, "45": [20, 65], "013": 20, "val_loss": 20, "66858810627902": 20, "995": 20, "66it": 20, "46": [20, 22], "069": 20, "588": 20, "80": 20, "071": 20, "585": 20, "49": [20, 22], "214": 20, "293": 20, "50": [20, 23, 27, 66, 73, 82, 93], "grant": 20, "unspecifi": 20, "knn": 20, "median": [20, 21], "most_frequ": 20, "multivari": 20, "classical_example_conditions_mw_120": 20, "mw_120_target": 20, "read_csv": 20, "classical_example_conditions_mw_80": 20, "mw_80_target": 20, "averag": [20, 21, 24, 94], "57": [20, 27, 87, 89], "289": 20, "07": 20, "006": 20, "4918970763683319": 20, "164": 20, "1545": 20, "67it": 20, "846": 20, "847": 20, "376": [20, 66], "69": 20, "08": 20, "663": 20, "190": 20, "697": 20, "395": 20, "564": 20, "1814": 20, "11it": 20, "151": 20, "153": 20, "155": 20, "546": 20, "88": [20, 30], "114": 20, "95": [20, 22], "78": [20, 22], "82": 20, "get_attention_map": 20, "attention_map": 20, "smiles_list": 20, "521": [20, 22, 38], "243": 20, "881": 20, "cc_attent": 20, "png": 20, "856": 20, "qv": 21, "greatest": [21, 23], "though": [21, 87], "imperfect": [21, 22], "usabl": 21, "special": [21, 22, 42, 47, 83, 91], "greater": [21, 23, 52, 57, 67, 68, 82], "heavi": 21, "su4": 21, "kak": 21, "decomposit": [21, 35, 68], "conclud": 21, "su4_per_circuit": 21, "n_params_in_su4": 21, "su4_gat": 21, "u3": 21, "reg": [21, 75], "param_index": 21, "generate_random_param": 21, "params_list": 21, "generate_random_permut": 21, "circuit_permut": 21, "int64": 21, "make_bitstr": 21, "zfill": 21, "percent_heavy_sampl": 21, "error_r": 21, "noiseless": [21, 30], "circuit_param": 21, "layer_permut": 21, "print_output": 21, "bf": 21, "clean_result": 21, "noisy_result": [21, 30], "prob": [21, 22], "cutoff": [21, 68], "circuit_prob": 21, "outcome_prob": 21, "havi": 21, "prob_heavy_in_noisi": 21, "heavy_bitstr": 21, "04363711": 21, "0100": 21, "0010": 21, "1101": 21, "0111": 21, "8153219893574715": 21, "488": 21, "detemin": 21, "_heavy_sampl": 21, "n_circuit": 21, "calc_qv": 21, "circuit_s": 21, "prob_of_error": 21, "number_of_circuit": 21, "counter": 21, "circuit_result": 21, "7280300000000003": 21, "affect": [21, 22, 67, 86], "relationship": 21, "caus": [22, 89, 94], "properli": [22, 73, 87, 89, 93], "character": [22, 30], "pseudoinvers": 22, "p_": 22, "quasi": 22, "sn": 22, "itertool": 22, "set_styl": 22, "dark": 22, "bitflip": [22, 27, 30, 65], "principl": 22, "isinst": 22, "state_label": 22, "ghz": [22, 28, 57, 64, 71, 73, 78, 79, 81, 83, 90], "ghz_kernel": 22, "plot_cmat": 22, "mat": 22, "im2": 22, "matshow": 22, "cm": 22, "vmin": 22, "vmax": 22, "set_ytick": 22, "set_xtick": 22, "set_yticklabel": 22, "set_xticklabel": 22, "xaxi": 22, "set_label_posit": 22, "colorbar": 22, "closest": 22, "min_": 22, "_1": 22, "find_closest_distribut": 22, "empirical_dist": 22, "empir": 22, "l1": 22, "ord": 22, "con": 22, "ineq": 22, "bnd": 22, "initial_valu": 22, "maxit": [22, 26, 27, 32], "get_counts_from_distribut": 22, "drawn": [22, 23], "return_count": 22, "1024": [22, 65], "noise_1": 22, "ghz_result": 22, "noisy_dict_1": 22, "noisy_res_1": 22, "352": 22, "43": 22, "367": 22, "61": [22, 23], "noise_2": 22, "noisy_dict_2": 22, "noisy_res_2": 22, "149816047538945": 22, "3802857225639665": 22, "292797576724562": 22, "212": 22, "122": 22, "189": 22, "87": 22, "131": [22, 23], "single_qubit_label": 22, "single_qubit_st": 22, "924": 22, "104": 22, "920": 22, "true_stat": 22, "observed_st": 22, "90234375": 22, "1015625": 22, "09765625": 22, "8984375": 22, "joint": [22, 78], "a_pinv": 22, "pinv": 22, "positive_dist": 22, "ncorrect": [22, 41], "501": 22, "mitigated_sg": 22, "kind": [22, 73], "bar_label": 22, "assumpt": 22, "a_n": 22, "local_label": 22, "local_st": 22, "388": 22, "235": 22, "174": 22, "79": [22, 23, 57], "38": [22, 23, 87, 89], "370": 22, "107": 22, "224": 22, "162": 22, "marginalized_count": 22, "total_shot": 22, "marginal_ct": 22, "85546875": 22, "15722656": 22, "14453125": 22, "84277344": 22, "6328125": 22, "38476562": 22, "3671875": 22, "61523438": 22, "70800781": 22, "32226562": 22, "29199219": 22, "67773438": 22, "pinv_confusion_matric": 22, "a_joint": 22, "559": 22, "510": [22, 81], "mitigated_k_loc": 22, "accur": [22, 68], "248": 22, "159": [22, 23], "68": 22, "161": [22, 23], "93": 22, "363": 22, "253": 22, "76": 22, "378": 22, "150": [22, 82], "36": 22, "74": [22, 27], "106": 22, "145": 22, "251": 22, "386": 22, "229": 22, "247": 22, "70": [22, 27], "163": 22, "371": 22, "157": [22, 23], "233": 22, "85": 22, "396": 22, "393": 22, "160": [22, 23], "a_ful": 22, "09734490298929": 22, "211": 22, "63": 22, "422": 22, "683": 22, "mitigated_ful": 22, "famou": 23, "signific": [23, 24, 27, 28, 33, 36, 66, 95], "modern": 23, "asymmetr": 23, "encrypt": [23, 89], "scheme": [23, 67], "rsa": [23, 89], "preliminari": 23, "proce": [23, 24, 89, 94], "contfrac": 23, "156": 23, "gcd": 23, "ceil": 23, "satisfi": [23, 30, 50, 65, 78, 87], "divisor": 23, "smallest": [23, 67], "shors_algorithm": 23, "investig": 23, "terminologi": 23, "literatur": 23, "period": 23, "recast": 23, "a1": 23, "a2": 23, "divisor1": 23, "divisor2": 23, "find_order_quantum": 23, "find_order_class": 23, "test_ord": 23, "retri": [23, 34], "establish": 23, "rewritten": [23, 34], "rewrit": [23, 85], "peter": 23, "possible_factor": 23, "test_factor": 23, "No": [23, 78, 81, 89], "notabl": 23, "ineffici": 23, "158": 23, "naiv": [23, 52], "interv": [23, 26], "my_integ": 23, "123": 23, "edit": [23, 89], "initial_value_to_start": 23, "central": 23, "lceil": 23, "rceil": 23, "nbsphinx": 23, "phase_kernel": 23, "exponent": 23, "provabl": 23, "hefti": 23, "5l": 23, "algoirthm": 23, "72l": 23, "exponentiaion": 23, "beckman": 23, "chari": 23, "devabhaktuni": 23, "preskil": 23, "1996": 23, "difficulti": 23, "report": 23, "modular_mult_5_21": 23, "physlab": 23, "wp": 23, "content": [23, 38, 60, 63, 78, 86, 89], "upload": 23, "2023": 23, "shor_s_algorithm_23100113_fin": 23, "modif": [23, 27, 73, 79], "modular_exp_5_21": 23, "expon": 23, "control_s": 23, "ctrl_qubit": [23, 49], "198": 23, "5y": 23, "demonstrate_mod_exponenti": 23, "init": 23, "integer_result": 23, "199": 23, "modular_exp_4_21": 23, "2103": 23, "13855": 23, "control_register_s": 23, "work_register_s": 23, "control_regist": 23, "work_regist": 23, "201": 23, "values_for_a": 23, "15000": 23, "q7": 23, "2843": 23, "913": 23, "1850": 23, "1935": 23, "1830": 23, "2846": 23, "1861": 23, "922": 23, "top_result": 23, "202": 23, "results_dictionari": 23, "pop": [23, 89, 93], "sorted_result": 23, "top_kei": 23, "max_valu": 23, "top_results_dictionari": 23, "203": 23, "750": 23, "lectur": 23, "scott": 23, "aaronson": 23, "204": 23, "get_order_from_phas": 23, "phase_nbit": 23, "eigenphas": 23, "from_float": 23, "limit_denomin": 23, "numer": [23, 35], "denomin": 23, "coefficients_continued_fract": 23, "continued_fract": 23, "convergents_continued_fract": 23, "algoithm": 23, "205": 23, "zero_result": 23, "elem": 23, "most_probable_bitpattern": 23, "reverse_result": 23, "nonzero": 23, "bitpattern": 23, "206": 23, "452": 23, "92": [23, 65], "2485": 23, "96": 23, "1747": 23, "1654": 23, "1736": 23, "475": [23, 81], "420": 23, "00001": 23, "1710": 23, "113": 23, "467": 23, "2536": 23, "81": [23, 65], "8125": 23, "8421052631578947": 23, "regev": 23, "heisenberg": 24, "recurs": [24, 42], "fo": 24, "n_step": [24, 58], "x_j": 24, "x_": 24, "y_j": 24, "y_": 24, "z_": 24, "heisenbergmodelham": 24, "tdop": 24, "getinitst": 24, "numspin": 24, "qid": 24, "average_magnet": 24, "magnetization_exp_v": 24, "steptim": 24, "03444695472717285": 24, "09042024163828166": 24, "0026793479919433594": 24, "08898564687193886": 24, "002758026123046875": 24, "08698024360923415": 24, "002524852752685547": 24, "08507694741170907": 24, "0026259422302246094": 24, "08394118068746997": 24, "002542734146118164": 24, "08394076573115139": 24, "0027430057525634766": 24, "08502222139504187": 24, "0025305747985839844": 24, "08677832064885871": 24, "003045797348022461": 24, "08863390649349775": 24, "0025949478149414062": 24, "09005513983609514": 24, "boost": [24, 33], "resimul": 24, "24x": 24, "florian": 25, "f\u00fcrrutter": 25, "gorka": 25, "mu\u00f1oz": 25, "gil": 25, "han": 25, "briegel": 25, "nat": 25, "mach": 25, "intel": [25, 94], "515": 25, "524": 25, "viabl": 25, "commonli": [25, 30, 58, 87, 89], "dm": [25, 57], "deliv": [25, 57], "fold": 25, "prompt": [25, 78, 89], "thoroughli": 25, "overview": 25, "propos": 25, "crucial": 25, "genqc": 25, "diffusion_pipelin": 25, "diffusionpipelin": 25, "export_cudaq": 25, "genqc_to_cudaq": 25, "infer_compil": 25, "infer_comp": 25, "infer_torch_devic": 25, "memoryclean": 25, "purge_mem": 25, "tf32": 25, "matmul": 25, "from_pretrain": 25, "floki00": 25, "qc_unitary_3qubit": 25, "hug": 25, "set_timestep": 25, "gate_pool": 25, "decod": 25, "num_of_qubit": 25, "max_gat": 25, "nonetheless": 25, "stai": 25, "tune": [25, 67], "bigger": 25, "70710678": [25, 28, 75], "ccx": 25, "u_r": 25, "u_i": 25, "u_tensor": 25, "stack": [25, 42], "out_tensor": 25, "generate_comp_tensor": 25, "system_s": 25, "guidanc": [25, 89], "cfg": [25, 83], "kernel_list": 25, "valid_tensor": 25, "invalid_tensor": 25, "out_tensors_i": 25, "catch": [25, 93], "rapidli": 25, "langl": [25, 38], "th": [25, 46], "got_unitari": 25, "basis_state_j": 25, "set_printopt": 25, "7071": 25, "infidel": 25, "want_unitari": 25, "histogram": 25, "hist": 25, "almost": [25, 87], "min_index": 25, "4e": [25, 78], "valuabl": 25, "deal": [25, 50], "fewest": 25, "toffoli": [25, 49, 65], "duplic": 25, "idx_uniqu": 25, "return_index": 25, "unique_tensor": 25, "unique_infidel": 25, "unique_kernel": 25, "idx_correct": 25, "argwher": 25, "correct_tensor": 25, "num_ccx": 25, "correct_kernel": 25, "correct_kernels_ccx1": 25, "preprocess": [26, 27], "h_2": [26, 35], "molecul": [26, 27, 35], "uccsd": [26, 27], "interatom": 26, "electrostat": 26, "proton": 26, "shield": 26, "neutron": 26, "minimis": 26, "stabl": [26, 89], "hydrogen_count": 26, "angstrom": 26, "bond_dist": 26, "cluster": [26, 27, 35, 64, 67], "uccsd_num_paramet": [26, 27], "builtin": [26, 68, 83], "1371744305855906": 26, "popular": [26, 89], "xk": [26, 27], "x0": [26, 27, 38], "eigensolv": [27, 35], "aspect": [27, 37, 38, 68, 93], "topic": [27, 75], "tradit": 27, "variation": 27, "elabor": 27, "water": 27, "jordan_wign": 27, "get_fermion_oper": 27, "timeit": [27, 73], "charg": 27, "1173": 27, "4691": 27, "7570": 27, "sto3g": 27, "run_pyscf": 27, "moleculardata": 27, "get_molecular_hamiltonian": 27, "jordan": 27, "wigner": 27, "molecular_hamiltonian": 27, "fermion_hamiltonian": 27, "wavefunct": [27, 82], "spatial": 27, "orbit": 27, "theoret": 27, "excit": [27, 36, 82, 95], "hate": 27, "electron_num": 27, "molecuul": 27, "140": 27, "default_tim": 27, "end_tim": [27, 65, 81], "get_term_count": 27, "elaps": [27, 65], "21455023422772": 27, "1086": 27, "9171073289999185": 27, "perfect": [27, 65], "greatli": [27, 36, 81, 95], "minut": [27, 89], "drastic": 27, "ith": [27, 32], "contribut": [27, 32, 36, 89, 95], "prohibit": 27, "observe_asynch": 27, "batched_gradient_funct": [27, 32], "tile": [27, 32], "xplu": [27, 32], "ey": [27, 32], "xminu": [27, 32], "g_plu": [27, 32], "g_minu": [27, 32], "gradient_vector": [27, 32], "init_param": 27, "73": [27, 65], "19471262288755": 27, "27010986900132": 27, "thank": [27, 36, 68, 95], "unnecessari": 27, "highest": 27, "unoccupi": 27, "shallow": [27, 69], "nele_ca": 27, "norb_ca": 27, "ncore": 27, "constrcut": 27, "occupied_indic": 27, "active_indic": 27, "96341992791962": 27, "754178541001238": 27, "consecut": [27, 33], "cudaq_mgpu_fus": [27, 33, 36, 67, 95], "506": [28, 38], "494": [28, 38], "subtl": [28, 73], "rebuilt": [28, 73], "feasibl": [28, 66, 82], "signinific": 28, "textcolor": 28, "respons": [28, 73], "hamiltonian_1": 28, "hamiltonian_2": 28, "result_1": [28, 73], "result_2": [28, 73], "220446049250313e": 28, "obver": 28, "0eb6b444eb5b3a687e6fd64529ee9223aaa2870": 28, "mx": 29, "my": [29, 57, 86, 89], "qubits_a": 29, "qubit_b": 29, "b0": 29, "ot": 29, "expext": 29, "272": 29, "505": [29, 73], "495": [29, 73], "coher": [30, 42, 61], "incoher": 30, "systemat": 30, "miscalibr": 30, "formal": [30, 61], "k_i": 30, "ideal_count": [30, 65], "error_prob": [30, 65], "phase_flip": 30, "kraus_0": 30, "kraus_1": 30, "bitflip_channel": 30, "uniformli": [30, 65], "noisy_count": [30, 65], "8666666666666666": 30, "cover": [31, 54, 75], "sophist": 31, "2xyx": 31, "3zzy": 31, "referenc": 31, "xyxz": 31, "432xzy": 31, "324ixx": 31, "xyz": 31, "ixx": 31, "432": 31, "324": 31, "907": [32, 38, 41, 46, 57, 64, 77], "1433": [32, 38, 41, 46, 57, 64, 77], "21829": [32, 38, 41, 46, 57, 64, 77], "adam": [32, 58], "nminim": 32, "748382901613712": 32, "58409164053813": 32, "accomplis": 32, "fucntion": 32, "messag": [32, 43, 57, 87, 89], "statu": 32, "7488646919931474": 32, "944e": 32, "288e": 32, "nfev": 32, "maxcv": 32, "plu": [32, 58], "minu": [32, 34, 58], "situat": 33, "c2h2vqe": 33, "cue": 34, "sens": [34, 83], "2d": [34, 61], "plane": 34, "3d": [34, 61], "varphi": 34, "spheric": 34, "sphere": 34, "render": 34, "qutip": 34, "sure": [34, 64, 87, 89, 91, 94], "menu": 34, "vscode": [34, 89], "click": [34, 54, 89], "button": 34, "toolbar": 34, "shell": [34, 87, 89, 94], "misunderstand": 34, "qualifi": 34, "bash": [34, 57, 87, 89, 94], "pipe": [34, 83], "nnew": 34, "subsequ": [34, 38, 43, 46, 48, 87, 89], "add_to_bloch_spher": 34, "rng": 34, "default_rng": [34, 81], "blochspherelist": 34, "anglelist": 34, "sph": 34, "displai": [34, 37], "accordingli": [34, 65, 68, 93], "absolut": [34, 50, 83], "had": 34, "toolbox": 34, "blochspher": 34, "unfortun": 34, "handi": [34, 81], "kernel_to_draw": 34, "14159": 34, "tdg": [34, 45], "documentclass": 34, "usepackag": 34, "quantikz": 34, "lstick": 34, "q_0": 34, "r_1": 34, "qw": 34, "q_1": 34, "targx": 34, "q_2": 34, "q_3": 34, "editor": 34, "export": [34, 56, 57, 60, 61, 62, 63, 64, 78, 86, 87, 89, 94], "welcom": [35, 57, 79, 89], "page": [35, 54, 66, 73, 79, 81, 87, 89, 94], "streamlin": [35, 94], "scalabl": [35, 57, 94], "unifi": [35, 94], "brows": 35, "releas": [35, 64, 67, 68, 83, 89, 94, 95], "toolchain": [35, 51, 63, 73, 83, 89, 90, 91, 92, 94], "heterogen": [35, 37, 72, 87], "troubleshoot": [35, 70], "introduct": [35, 51, 66, 76, 91, 94], "bernstein": [35, 89], "vazirani": [35, 89], "diffus": 35, "deutsch": 35, "jozsa": 35, "divis": [35, 67], "coreset": 35, "qaoa": 35, "dock": 35, "dc": 35, "krylov": 35, "fourier": [35, 41], "telepor": 35, "volum": [35, 65], "mitig": 35, "fusion": [35, 36, 65, 67, 95], "subspac": 35, "anderson": [35, 61], "impur": [35, 61], "infleqt": [35, 54, 59], "sqale": [35, 61], "cloud": [35, 36, 54, 56, 60, 61, 63, 68, 78, 95], "center": [35, 88, 89], "downstream": [35, 86, 90, 92], "cmake": [35, 85, 86, 92], "repositori": [36, 58, 85, 86, 87, 89, 95], "docker": [36, 58, 87, 94, 95], "nightli": [36, 58, 89, 95], "stim": [36, 54, 69, 95], "apply_nois": [36, 95], "fermion": [36, 95], "wheel": [36, 64, 68, 87, 94, 95], "infeqt": [36, 95], "offici": [36, 45, 87, 89, 95], "wherea": [36, 93, 95], "never": [36, 50, 95], "toolset": [36, 87, 93, 95], "manipul": [36, 65, 66, 82, 95], "anyon": [36, 54, 59, 95], "technologi": [36, 54, 59, 95], "ferimioniq": [36, 95], "oqc": [36, 54, 59, 95], "hope": [36, 95], "enjoi": [36, 95], "eas": [36, 95], "think": [36, 64, 82, 95], "great": [36, 95], "contributor": [36, 95], "bug": [36, 95], "frontend": [36, 95], "blog": [36, 95], "workload": [36, 64, 89, 95], "gnu": [36, 83, 87, 89, 93, 95], "older": [36, 87, 89, 95], "glibc": [36, 87, 89, 95], "iqm": [36, 54, 56, 59, 95], "publish": [36, 89, 95], "arm": [36, 87, 89, 94, 95], "processor": [36, 38, 43, 61, 69, 73, 89, 93, 94, 95], "aarch64": [36, 58, 94, 95], "pypi": [36, 87, 94, 95], "quantinuum": [36, 54, 59, 95], "ionq": [36, 54, 59, 95], "linux": [36, 83, 87, 89, 95], "amd64": [36, 95], "coprocess": 37, "annot": [37, 42, 71, 79], "core": [37, 38, 68, 83], "namespac": [37, 38, 40, 41, 42, 45, 46, 48, 50, 51, 57, 64, 73, 77, 78, 85, 86, 91, 93], "philosophi": 38, "stand": 38, "alon": 38, "adaptor": 38, "returntyp": 38, "hasvoidreturntyp": 38, "is_void_v": 38, "bel": 38, "lu": [38, 41, 50, 79, 80], "sequential_data": 38, "reg1": 38, "479": 38, "middl": 38, "implicitli": [38, 43, 52], "discern": 38, "silent": 38, "discard": 38, "ancillari": 38, "varieti": [38, 73], "enforc": 38, "sample_async_result": 38, "\ud835\udeb9": 38, "retain": [38, 44], "measurecount": 38, "spinop": 38, "x0x1exp": 38, "x0x1data": 38, "qarrai": [38, 41, 42, 49, 79, 83], "lf": [38, 41, 64, 77], "analyt": 38, "async_observe_result": 38, "broader": [38, 64], "dictat": 38, "safe": 38, "providesgradi": 38, "_providesgradi": 38, "someth": [38, 50, 87, 89, 93], "max_ev": 38, "opt_energi": 38, "grad_vec": 38, "\ud835\udeb9_i": 38, "deuteron_n3_ansatz": 38, "x1": 38, "vctrl": 38, "h3": 38, "625": 38, "913119": 38, "make_tupl": 38, "min_val": 38, "permit": 39, "facilit": [40, 89], "privat": [40, 50], "thenfunctor": 40, "otherkernelbuild": 40, "kerneltocal": 40, "kerneltocontrol": 40, "kerneltoadjoint": 40, "argsarrai": 40, "decltyp": 40, "tuple_s": 40, "integral_const": 40, "sizeof": [40, 91], "tuple_el": 40, "conditional_t": [40, 50], "factori": 40, "xprep": 40, "qubitin": 40, "hadamardtest": 40, "num_it": 41, "c_str": [41, 93], "phase_estim": 41, "cpp": [41, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 77, 78, 79, 80, 83, 85, 86, 87, 89, 90, 91, 93, 94], "qpe": 41, "stdio": [41, 87], "cmath": [41, 78], "iqft": 41, "denom": 41, "1ul": 41, "eigenst": 41, "stateprep": [41, 42], "ncountingqubit": 41, "state_prep": 41, "counting_qubit": 41, "state_regist": 41, "put": [41, 50, 82], "r1pigat": 41, "mostprob": 41, "to_integ": 41, "piestim": 41, "tgate": 41, "xgate": 41, "eigen": [41, 86], "nc": 41, "nq": 41, "countingqubit": 41, "stateregist": 41, "deuteron_n2_ansatz": 41, "param_spac": 41, "linspac": [41, 58, 78], "energy_at_param": 41, "energyatparam": 41, "reflect_about_uniform": 41, "ctrlqubit": 41, "lastqubit": 41, "compute_act": [41, 47], "run_grov": 41, "callablekernel": 41, "n_iter": 41, "target_st": 41, "target_bit_set": 41, "strtol": 41, "null": [41, 58, 89], "0b1011": 41, "compute_oracl": 41, "iterative_qp": 41, "iqp": 41, "cr0": 41, "cr2": 41, "m_pi_4": 41, "differenti": [42, 58], "former": 42, "latter": [42, 58, 65, 83], "my_first_entry_point_kernel": 42, "my_second_entry_point_kernel": 42, "my_first_pure_device_kernel": 42, "bodi": [42, 58, 68], "parent": 42, "boolexprfromqubitmeasur": 42, "another_qubit": 42, "uncomput": [42, 43], "is_arithmetic_v": 42, "mycustomsimplestruct": 42, "recursivevec": 42, "var": [42, 94], "kernelthatreturn": 42, "dataclass": 42, "mysimplestruct": 42, "recursivelist": 42, "1415926": 42, "kernellambda": 42, "mystateprep": 42, "mygenericalgorithm": 42, "placehold": 42, "mygenericalgorithm2": 42, "callkernel": 42, "anothervers": 42, "constrain": [42, 80], "is_convertible_v": 42, "takes_qubit": [42, 80], "mygenericalgorithmonqarrai": 42, "mygenericalgorithmonqubit": 42, "presum": 43, "graphic": 43, "fpga": 43, "concurr": [43, 57], "inter": [43, 67], "fabric": [43, 67], "placement": 43, "copyabl": [43, 50], "flavor": 43, "tightli": 43, "modal": 43, "sfina": 44, "foundat": 45, "inst_nam": 45, "qubitarg": 45, "qr": [45, 68], "scalarangl": 45, "rotation_nam": 45, "measure_op": 45, "convei": 45, "sigma_j": 46, "intent": 47, "u_cod": 47, "v_code": 47, "computef": 47, "actionf": 47, "computel": 47, "segment": [47, 94], "effort": 48, "get_platform": [48, 64, 77], "quantumregist": 49, "x_gate": 49, "ctrl_bit": 49, "rx_and_h_gat": 49, "kerneltestcontrol": 49, "kerneltestadjoint": 49, "aggreg": [49, 78], "qubit0": [49, 67], "qubit1": [49, 67], "kernel_arg": 49, "fundament": [50, 82, 89, 94], "movabl": 50, "n_level": 50, "adl": 50, "familiar": 50, "stride": 50, "first_5": 50, "qb": 50, "knowledg": 50, "ahead": 50, "storag": [50, 82], "fivecompiletimequbit": 50, "conceptu": 52, "sai": [52, 58], "embodi": 52, "behind": 52, "dataflow": 52, "contrast": 52, "truli": 52, "ssa": 52, "clarifi": 52, "toi": 52, "foo": 52, "boilerpl": [52, 86], "c0": 52, "c1": 52, "extract_ref": [52, 83], "bunch": 52, "decid": 52, "i1": [52, 83], "imagin": 52, "adjac": [52, 63], "Of": 52, "cours": 52, "correctli": [52, 87, 91, 93], "quit": [52, 73], "prone": 52, "analys": 52, "q0_1": 52, "q0_0": 52, "wire": 52, "q0_z": 52, "elimin": [52, 64], "r0": 52, "qref": 52, "unwrap": 52, "misc": 52, "q0_m": 52, "q0_l": 52, "q1_x": 52, "q0_p": 52, "q0_y": 52, "straightforwardli": 52, "cancel": [52, 89, 94], "mmeori": 52, "categori": [54, 65], "breakdown": 54, "fermioniq": [54, 69], "photon": [54, 58, 59, 69, 78, 82], "ion": [54, 59, 82], "superconduct": [54, 58, 59, 82], "secur": [56, 64, 78, 89], "demand": [56, 64], "simplest": [56, 61], "cli": [56, 61, 63, 89], "aws_default_region": [56, 61], "aws_access_key_id": [56, 61], "key_id": [56, 61], "aws_secret_access_kei": [56, 61], "access_kei": [56, 61], "aws_session_token": [56, 61], "sv1": [56, 78], "arn": [56, 78], "eu": [56, 78], "north": [56, 78], "garnet": [56, 78], "device_arn": 56, "world": [57, 61, 72, 79], "visit": [57, 73, 78], "approv": 57, "email": [57, 60, 63], "nvqc_api_kei": 57, "session": [57, 61, 64, 78, 89], "home": [57, 60, 63, 89], "bashrc": [57, 89], "438": 57, "3600": 57, "h100": 57, "80gb": 57, "hbm3": 57, "driver": [57, 87, 89], "gb": [57, 67, 69, 81], "clock": 57, "mhz": 57, "2619": 57, "1980": 57, "1111111111111111111111111": [57, 81], "0000000000000000000000000": [57, 81], "514": 57, "nvqc_intro": 57, "545": 57, "487": 57, "513": 57, "tensornet": [57, 64, 65, 68, 69, 81], "nvqc_sampl": 57, "ngpu": 57, "unabl": [57, 89], "deploy": 57, "tabl": [57, 60, 64, 86, 89], "ye": [57, 65, 89], "cutensornet": [57, 68], "contract": [57, 68], "mp": [57, 65, 68, 69, 81], "wherebi": [57, 64, 65, 67, 68], "worker": 57, "nqpu": 57, "opt_gradi": 57, "submiss": [57, 59, 60, 61, 63, 74, 78], "energy_futur": 57, "plus_futur": 57, "minus_futur": 57, "optimal_valu": 57, "paramshift": 57, "74886": 57, "nvqc_vqe": 57, "incom": [57, 80], "attain": 57, "On": [57, 64, 65, 67, 68, 79, 89, 94], "busi": 57, "substanti": 57, "nvqc_log_level": 57, "disabl": [57, 62, 65, 67, 68, 87], "credenti": [57, 68, 78], "lieu": 57, "echo": [57, 60, 63, 87, 89, 93], "nvqc_config": 57, "cuquantum": [58, 86, 87], "transmon": 58, "omega_z": 58, "sigma_z": 58, "omega_x": 58, "omega_d": 58, "sigma_x": 58, "rho0": 58, "t_final": 58, "evolution_result": [58, 61], "aka": [58, 67], "ladder": 58, "harmon": 58, "oscil": 58, "annihil": [58, 66], "displac": 58, "squeez": 58, "momentum": 58, "sigma_i": 58, "jayn": 58, "cum": 58, "omega_c": 58, "omega_a": 58, "caviti": 58, "consider": 58, "h_0": 58, "h_1": 58, "drift": 58, "h0": 58, "h1": [58, 60, 78], "displacement_matrix": 58, "numerictyp": 58, "en": 58, "wiki": 58, "displacement_oper": 58, "term1": 58, "term2": 58, "expm": 58, "system_dimens": 58, "system_oper": 58, "time_depend": 58, "vari": [58, 69, 81], "parameter_valu": 58, "time_step": 58, "compute_valu": 58, "param_nam": 58, "step_idx": 58, "match": [58, 63, 87, 89, 93], "undefin": [58, 89, 93], "rungekuttaintegr": 58, "4th": 58, "rung": 58, "kutta": 58, "scipyzvodeintegr": 58, "ordinari": 58, "cudatorchdiffeqdopri5integr": 58, "dormand": 58, "princ": 58, "shampin": 58, "torchdiffeq": 58, "cudatorchdiffeqadaptiveheunintegr": 58, "cudatorchdiffeqbosh3integr": 58, "bogacki": 58, "cudatorchdiffeqdopri8integr": 58, "cudatorchdiffeqeulerintegr": 58, "cudatorchdiffeqexplicitadamsintegr": 58, "bashforth": 58, "cudatorchdiffeqimplicitadamsintegr": 58, "moulton": 58, "cudatorchdiffeqmidpointintegr": 58, "midpoint": 58, "cudatorchdiffeqrk4integr": 58, "blackwel": [58, 94], "mpiexec": [58, 64, 67, 68, 81, 87], "launcher": [58, 64], "ionq_api_kei": 60, "ionq_generated_api_kei": 60, "aria": [60, 78], "login": [60, 63, 89], "emit": [60, 61, 63, 83], "diagnost": [60, 61, 63], "authent": [60, 61, 62, 63, 64, 68, 78, 89], "ionqsimul": 60, "apt": [60, 63, 89], "curl": [60, 63, 87], "jq": [60, 63], "your_alia": 60, "password": [60, 61, 63, 78, 89], "your_password": 60, "qapi": 60, "id_token": [60, 63], "cat": [60, 63, 89], "refresh_token": [60, 63], "refresh": [60, 63], "quantinuum_config": 60, "cudaq_quantinuum_credenti": 60, "checker": [60, 78], "mere": [60, 87], "2e": [60, 78], "1sc": 60, "comprehens": [60, 68], "navig": [60, 89], "tab": [60, 89], "Their": [61, 87], "softwar": [61, 87, 89], "compani": 61, "bring": 61, "portal": [61, 78, 89], "sdk": [61, 78], "pulser": 61, "pasqal_cloud": [61, 78], "usernam": [61, 63, 78], "pasqal_usernam": [61, 78], "pasqal_password": [61, 78], "user_token": [61, 78], "pasqal_auth_token": [61, 78], "pasqal_project_id": [61, 78], "emu_mp": [61, 78], "publicli": 61, "puls": 61, "layout": 61, "invit": 61, "consult": 61, "calibr": 61, "mandatori": [61, 63, 78], "emu_fre": 61, "rydberg_hamiltonian": [61, 78], "register_sit": [61, 78], "east": 61, "whitepap": 61, "interf": [62, 78], "detector": [62, 78], "delai": [62, 78], "orca_access_url": [62, 78], "spellcheck": 62, "orca_auth_token": 62, "abcdef123456": 62, "orca_url": [62, 78], "getenv": [62, 78], "localhost": [62, 64, 78, 89], "anyon_config": 63, "cudaq_anyon_credenti": 63, "telegraph": 63, "8q": 63, "berkelei": 63, "25q": 63, "inject": [63, 78, 83, 89], "cortex": 63, "cach": 63, "iqm_tokens_fil": 63, "coco": [63, 78], "adoni": [63, 78], "iqm_server_url": 63, "fi": [63, 87, 89], "apollo": 63, "oxford": 63, "topologi": [63, 78], "luci": 63, "kagom": 63, "lattic": 63, "toshiko": 63, "contact": [63, 68, 78], "oqc_qcaas_support": [63, 78], "oxfordquantumcircuit": [63, 78], "oqc_url": [63, 78], "oqc_email": [63, 78], "oqc_password": [63, 78], "qcaa": 63, "assembli": 63, "qat": 63, "elucid": 64, "unlik": [64, 65, 73], "opportun": 64, "count_futur": [64, 81], "kerneltobesampl": 64, "runtimeparam": 64, "singleton": [64, 77], "zu": [64, 77], "countfutur": 64, "emplace_back": 64, "gpuemulatedqpu": 64, "cudaq_mqpu_ngpu": 64, "bellow": 64, "state_futur": 64, "kerneltorun": 64, "async_state_result": 64, "statefutur": 64, "suffici": [64, 87, 89, 94], "script": [64, 73, 81, 87, 89], "srun": 64, "controls_count": [64, 81], "auto_launch": [64, 81], "isdigit": [64, 81], "nrcontrol": 64, "tidx": 64, "daemon": 64, "qpud": 64, "shut": 64, "cudaq_loc": 64, "grep": [64, 87], "qpud_pi": 64, "cuda_visible_devic": [64, 68], "tcp": [64, 89], "ip": 64, "ld_library_path": [64, 87, 89, 94], "app": 64, "firewal": 64, "port1": 64, "port2": 64, "port3": 64, "port4": 64, "resolv": 64, "contigu": 64, "byte": [64, 81, 93], "memcpi": 64, "ixiz": 64, "charact": 64, "incur": 64, "overhead": 64, "defer": 64, "rtti": 64, "standalon": [64, 86], "incorpor": 65, "812": 65, "xop": 65, "108": 65, "809": 65, "86": 65, "102": 65, "807": 65, "cptp": 65, "NO": 65, "asymptot": 65, "n_": 65, "noisy_exp_v": 65, "rerun": 65, "8192": 65, "810546875": 65, "800048828125": 65, "810547": 65, "800049": 65, "777344": 65, "800537": 65, "828125": 65, "801758": 65, "inher": 65, "cudaq_batch_s": 65, "cudaq_batched_sim_max_branch": 65, "cudaq_batched_sim_max_qubit": 65, "cudaq_batched_sim_min_batch_s": 65, "75657844543457": 65, "090202331543": 65, "chrono": [65, 73, 78], "high_resolution_clock": [65, 73], "durat": [65, 73], "milli": 65, "elapsed_tim": 65, "47m": 65, "558": 65, "66m": 65, "cudaq_log_level": [65, 74], "ensembl": [65, 73], "clifford": 65, "slower": [65, 67, 68], "dirac": [66, 82], "vdot": 66, "alpha_0": 66, "alpha_1": 66, "alpha_2": 66, "alpha_d": 66, "alpha_i": 66, "ddot": 66, "transmiss": [66, 82], "hong": 66, "ou": 66, "mandel": 66, "interfer": [66, 78, 87, 89], "n_mode": [66, 78], "beam_splitt": 66, "491": 66, "509": 66, "probabilist": [66, 82], "wave": [66, 68], "devis": [66, 82], "lvert": [66, 82], "rvert": [66, 82], "roughli": [66, 73, 81, 82], "qumode_count": 66, "390": 66, "61237244": 66, "littl": 66, "openmp": [67, 86, 87, 94], "poorli": 67, "worth": 67, "cudaq_fusion_max_qubit": 67, "cudaq_fusion_diagonal_gate_max_qubit": 67, "cudaq_fusion_num_host_thread": 67, "cudaq_max_cpu_memory_gb": 67, "migrat": [67, 87], "unlimit": 67, "0gb": 67, "cudaq_max_gpu_memory_gb": 67, "exce": [67, 81], "cudaq_mgpu_lib_mpi": 67, "libmpi": [67, 89], "cudaq_mgpu_comm_plugin_typ": 67, "openmpi": [67, 87, 89, 94], "mpich": [67, 87], "commplugin": 67, "cudaq_mgpu_nqubits_thresh": 67, "cudaq_mgpu_p2p_device_bit": 67, "gpudirect": 67, "p2p": 67, "cudaq_gpu_fabr": 67, "mnnvl": 67, "nvl": 67, "nvlink": 67, "cudaq_global_index_bit": 67, "comma": 67, "cudaq_host_device_migration_level": 67, "insert": [67, 85], "interconnect": 67, "infiniband": 67, "fuse": 67, "4x4": 67, "bandwidth": 67, "significantli": 67, "ubackend_use_fabric_handl": 67, "technic": [68, 69], "despit": [68, 78], "poor": 68, "visibl": [68, 89], "ship": [68, 89], "cutensornet_comm_lib": 68, "dedic": 68, "dgx": 68, "omp_plac": 68, "omp_num_thread": 68, "number_of_cores_per_nod": 68, "number_of_gpus_per_nod": 68, "cudaq_tensornet_controlled_rank": 68, "cudaq_tensornet_observe_contract_path_reus": 68, "ON": 68, "reus": 68, "cudaq_tensornet_num_hyper_sampl": 68, "hyper": 68, "finder": 68, "sparsiti": 68, "svd": 68, "singular": [68, 87], "truncat": 68, "tractabl": 68, "footprint": 68, "cudaq_mps_max_bond": 68, "cudaq_mps_abs_cutoff": 68, "trim": 68, "cudaq_mps_relative_cutoff": 68, "cudaq_mps_svd_algo": 68, "gesvd": 68, "gesvdj": 68, "jacobi": 68, "gesvdp": 68, "gesvdr": 68, "medium": 68, "ava": 68, "onlin": [68, 87, 89], "fermioniq_access_token_id": 68, "fermioniq_access_token_secret": 68, "remote_config": 68, "remote_config_id": 68, "organ": 68, "project_id": 68, "width": 69, "thousand": 69, "hundr": 69, "stabil": 69, "qec": 69, "amongst": 71, "result_0": 73, "5005": 73, "4995": 73, "most_probable_result": 73, "kernel2": 73, "num_gpu": [73, 81], "confirm": [73, 78, 87, 89, 94], "025": 73, "million": 73, "35x": 73, "code_to_tim": 73, "57462": 73, "stmt": 73, "773286": 73, "atoi": [73, 94], "took": 73, "8337": 73, "18988": 73, "prepend": 74, "cudaq_dump_jit_ir": 74, "output_filenam": 74, "agnost": 75, "707": 75, "707j": 75, "kernel_initi": 75, "state_to_pass": 75, "default_op": 75, "Or": 75, "x_kernel": [75, 80], "control_vector": [75, 80], "blow": 75, "kernel_a": 75, "kernel_b": 75, "024": 75, "543": 75, "d2": 77, "observe_mqpu": 77, "async_count": 78, "fstream": 78, "proceed": [78, 87], "redefin": 78, "same_fil": 78, "retrieved_async_result": 78, "cq_sqale_simul": 78, "ofstream": 78, "savem": 78, "readin": 78, "ifstream": 78, "flight": 78, "mimic": 78, "dashboard": 78, "qb1": 78, "qb2": 78, "qb3": 78, "qb4": 78, "qb5": 78, "adonis_ghz": 78, "transpar": 78, "worri": 78, "optic": 78, "reconfigur": 78, "indistinguish": 78, "n_beam_splitt": 78, "sleep": 78, "this_thread": 78, "sleep_for": 78, "sleep_until": 78, "chrono_liter": 78, "sum_loop_length": 78, "static_cast": [78, 91], "n_loop": 78, "endl": [78, 93], "200m": 78, "assist": 78, "bill": 78, "pasqal_machine_target": 78, "arrang": 78, "5e": 78, "time_ramp": 78, "000001": 78, "time_max": 78, "000003": 78, "piec": [78, 87], "wise": 78, "waveform": 78, "rabi": 78, "omega_max": 78, "delta_end": 78, "delta_start": 78, "pasqal_auth": 78, "folder": [78, 86, 87, 89, 90], "dynamics_integr": 78, "make_pair": 78, "rad": 78, "sec": 78, "rydberg": 78, "scalar_oper": 78, "get_sampling_result": 78, "endpoint": 78, "syntax_check": 78, "hello": [78, 79, 89], "7e": 78, "6300000": 78, "12121222": 78, "21202221": 78, "21212121": 78, "21212122": 78, "21221212": 78, "21221221": 78, "22121221": 78, "22221221": 78, "post_sequ": 78, "01010111": 78, "10101010": 78, "10101011": 78, "10101110": 78, "10110101": 78, "10110110": 78, "11010110": 78, "11110110": 78, "pre_sequ": 78, "11101111": 78, "11111111": 78, "quera_bas": 78, "make_coord": 78, "3e6": 78, "gotten": 79, "static_kernel": 79, "multi_controlled_oper": 80, "ccnot": 80, "applyx": 80, "ccnot_test": 80, "apply_x": 80, "counts2": 80, "seamless": [81, 89], "ghz_state": 81, "sample_ghz_st": 81, "cpu_result": 81, "525": [81, 89], "modest": 81, "slow": 81, "425x": 81, "gpu_result": 81, "490": 81, "term_count": 81, "185340642929077": 81, "unto": 81, "2500": 81, "4x": 81, "1754660606384277": 81, "counterpart": 82, "transistor": 82, "alter": 82, "ourselv": 82, "law": 82, "physicist": 82, "logarithm": 82, "correspondingli": [82, 93], "art": [82, 93], "offload": 82, "502": 82, "498": 82, "modulu": 82, "conserv": 82, "uphold": 82, "postul": 82, "alpha_": 82, "llvm": [83, 85, 86, 87, 91], "qke": [83, 85], "pipelin": 83, "canonic": 83, "lift": 83, "indirect": 83, "cse": 83, "lpsxpu": 83, "p3de4l": 83, "fixup": 83, "linkag": 83, "pl": [83, 87], "llc": [83, 87], "reloc": 83, "pic": 83, "filetyp": 83, "obj": 83, "o2": 83, "clang": [83, 87, 93], "usr": [83, 87, 89, 93], "lib": [83, 85, 86, 87, 89, 90, 93, 94], "gcc": [83, 87, 89, 93], "x86_64": [83, 87, 89, 94], "lib64": [83, 89, 91], "stub": 83, "wl": [83, 87, 93], "rpath": [83, 93], "llib": 83, "lcudaq": 83, "builder": 83, "ensmallen": 83, "em": 83, "lnvqir": 83, "orchestr": 83, "qtx": 83, "mangled_name_map": 83, "__nvqpp__mlirgen__ghz": 83, "_zn3ghzclei": 83, "i32": 83, "entrypoint": 83, "alloca": 83, "memref": 83, "extsi": 83, "c0_i32": 83, "c0_i32_0": 83, "alloca_1": 83, "c1_i32": 83, "subi": 83, "cmpi": 83, "slt": 83, "addi": 83, "unoptim": 83, "mangl": 83, "introspect": 83, "overwrit": 83, "libcudaq": 83, "libnvqir": [83, 86], "robust": 83, "depart": 83, "datalayout": 83, "p270": 83, "p271": 83, "p272": 83, "f80": 83, "n8": 83, "s128": 83, "invokewithcontrolqubit": 83, "__quantum__qis__x__ctl": 83, "__quantum__rt__array_get_size_1d": 83, "__quantum__qis__h": 83, "i8": 83, "__quantum__rt__array_get_element_ptr_1d": 83, "sext": 83, "bitcast": 83, "icmp": 83, "sgt": 83, "br": 83, "prehead": 83, "_crit_edg": 83, "trip": 83, "zext": 83, "indvar": 83, "iv": 83, "nuw": 83, "nsw": 83, "nonnul": 83, "exitcond": 83, "ph3": 83, "_crit_edge4": 83, "exitcond5": 83, "mycustomplugin": 85, "cmakelist": [85, 86, 90], "add_llvm_pass_plugin": 85, "operationpass": 85, "quakedialect": 85, "quakeop": 85, "frozenrewritepatternset": 85, "dialectconvers": 85, "replaceh": 85, "oprewritepattern": 85, "hop": 85, "logicalresult": 85, "matchandrewrit": 85, "patternrewrit": 85, "replaceopwithnewop": 85, "sop": 85, "isadj": 85, "getparamet": 85, "getcontrol": 85, "gettarget": 85, "custompassplugin": 85, "passwrapp": 85, "mlir_define_explicit_internal_inline_type_id": 85, "stringref": 85, "runonoper": 85, "getoper": 85, "getcontext": 85, "rewritepatternset": 85, "conversiontarget": 85, "addlegaldialect": 85, "addillegalop": 85, "applypartialconvers": 85, "emitoperror": 85, "signalpassfailur": 85, "cudaq_register_mlir_pass": 85, "add_subdirectori": 85, "circuitsimulatorbas": 86, "lot": 86, "qppcircuitsimul": 86, "custateveccircuitsimul": 86, "overridden": 86, "addqubittost": 86, "addqubitstost": 86, "resetqubit": 86, "qubitidx": 86, "resetqubitstateimpl": 86, "applyg": 86, "gateapplicationtask": 86, "measurequbit": 86, "floattyp": 86, "mysimul": 86, "nvqir_register_simul": 86, "mysimulatorclassnam": 86, "dylib": 86, "nvqir_simulation_backend": 86, "cuda_quantum_path": [86, 87, 89, 90], "find_packag": [86, 90], "nvqir_add_backend": 86, "cmake_minimum_requir": [86, 90], "fatal_error": [86, 90], "democreatenvqirbackend": 86, "cxx": [86, 87, 90, 94], "measuredbit": 86, "cuda_quantum": [86, 87], "cd": [86, 87, 89, 90], "ninja": [86, 90], "dnvqir_dir": 86, "conflict": [87, 89, 94], "rootless": 87, "admin": [87, 89], "permiss": [87, 89], "meet": 87, "carefulli": 87, "requisit": 87, "almalinux": 87, "manylinux_2_28": 87, "cento": [87, 89], "debian": [87, 89], "fedora": [87, 89], "opensus": [87, 89], "sled": [87, 89], "sle": [87, 89], "rhel": [87, 89], "rocki": [87, 89], "ubuntu": [87, 89], "newer": [87, 89, 94], "x86": [87, 89], "arm64": [87, 89], "v8": [87, 89], "volta": [87, 89], "ture": [87, 89], "amper": [87, 89], "ada": [87, 89], "hopper": [87, 89], "470": [87, 89], "git": 87, "unzip": 87, "web": [87, 89], "cudaq_install_prefix": 87, "cuquantum_install_prefix": 87, "cutensor_install_prefix": 87, "cutensor": 87, "llvm_install_prefix": 87, "blas_install_prefix": 87, "bla": 87, "zlib_install_prefix": 87, "zlib": 87, "openssl_install_prefix": 87, "openssl": 87, "curl_install_prefix": 87, "aws_install_prefix": 87, "freeli": [87, 89], "toolkit": [87, 89, 91, 94], "cuda_vers": [87, 89, 94], "cuda_download_url": [87, 89], "repo": [87, 89], "subfold": [87, 89], "rhel8": [87, 89], "cuda_arch_fold": [87, 89], "dnf": [87, 89], "nobest": [87, 89], "setopt": [87, 89], "install_weak_dep": [87, 89], "tr": [87, 89], "gcc_version": 87, "assembl": 87, "enable_script": 87, "gcc_toolchain": 87, "rh": 87, "root": [87, 89], "cudacxx": 87, "nvcc": [87, 89, 91], "cudahostcxx": 87, "omit": 87, "commit": 87, "checkout": 87, "archiv": [87, 89, 93], "subsect": 87, "dev": [87, 89], "devel": [87, 89], "suffix": [87, 94], "auditwheel": 87, "patchelf": 87, "pyproject": 87, "toml": 87, "llvm_project": 87, "flang": 87, "lld": 87, "install_prerequisit": [87, 89], "sh": [87, 89, 94], "fc": 87, "histori": 87, "setuptools_scm_pretend_vers": 87, "cudaq_wheel": 87, "manylinux_platform": 87, "linux_": 87, "sed": [87, 89], "manylinux_2_28_": 87, "pwd": [87, 93], "_skbuild": 87, "repair": 87, "plat": 87, "libcubla": [87, 89], "libcublaslt": 87, "libcurand": [87, 89], "libcusolv": [87, 89], "libcutensor": 87, "libcutensornet": 87, "libcustatevec": 87, "libcudart": 87, "libnvtoolsext": 87, "libnvidia": 87, "ml": 87, "libcuda": 87, "wheelhous": 87, "cudaq_enable_static_link": 87, "cudaq_require_openmp": 87, "cudaq_werror": 87, "cudaq_python_support": 87, "build_cudaq": 87, "primarili": 87, "linker": [87, 93], "makeself": 87, "cuda_quantum_asset": 87, "mv": 87, "ld": 87, "build_config": 87, "xml": 87, "gzip": [87, 89], "sha256": 87, "install_cuda_quantum": [87, 89, 94], "unam": [87, 89, 94], "migrate_asset": 87, "libc6": [87, 89], "sudo": [87, 89, 94], "set_env": [87, 89], "asset": [87, 89, 94], "profil": [87, 89, 94], "version_suffix": [87, 89], "cudart": [87, 89], "nvrtc": [87, 89], "f1": [87, 89], "libnvjitlink": [87, 89], "awar": 87, "autoconf": 87, "libtool": 87, "flex": 87, "openmpi_vers": 87, "openmpi_download_url": 87, "ompi": 87, "tar": [87, 89], "gz": [87, 89], "tmp": 87, "xf": 87, "rf": [87, 89], "autogen": 87, "ldflag": 87, "prefix": [87, 89], "getpwuid": 87, "mem": 87, "memcheck": 87, "verb": 87, "nproc": 87, "mpic": 87, "mpi_cuda_check": 87, "__has_includ": 87, "ext": 87, "endif": 87, "mpi_init": 87, "exit_cod": 87, "mpix_query_cuda_support": 87, "mpi_fin": 87, "mca": 87, "plm_rsh_agent": 87, "ssh": 87, "agent": 87, "rsh": 87, "slurm": 87, "mpi_path": [87, 89, 94], "distributed_interfac": [87, 89, 94], "activate_custom_mpi": [87, 89, 94], "bundl": 89, "deploi": 89, "unsur": 89, "engin": 89, "desktop": 89, "administr": 89, "ngc": 89, "whenev": 89, "pull": 89, "nvcr": 89, "prototyp": 89, "tri": 89, "readm": 89, "appreci": 89, "insuffici": 89, "hover": 89, "id_rsa": 89, "pub": 89, "itd": 89, "2222": 89, "exec": 89, "openssh": 89, "usepam": 89, "sshd_config": 89, "authorized_kei": 89, "sbin": 89, "sshd": 89, "stricthostkeycheck": 89, "userknownhostsfil": 89, "globalknownhostsfil": 89, "cupy_backend": 89, "cudadrivererror": 89, "cuda_error_no_binary_for_gpu": 89, "cubla": 89, "nvjitlink": 89, "curand": 89, "cu128": 89, "pytest": 89, "cuspars": 89, "libcuspars": 89, "__nvjitlinkcreate_12_8": 89, "incorrectli": 89, "ne": 89, "relocat": 89, "wsl": 89, "prerequisit": 89, "sylab": 89, "ce": 89, "xzf": 89, "mconfig": 89, "suid": 89, "builddir": 89, "bootstrap": 89, "runscript": 89, "mount": 89, "devpt": 89, "fakeroot": 89, "sif": 89, "writabl": 89, "nv": 89, "conf": 89, "ldd": [89, 93], "privileg": 89, "revis": 89, "upvot": 89, "posix": 89, "browser": 89, "palett": 89, "attach": 89, "window": 89, "reload": 89, "microsoft": 89, "sandbox": 89, "portmap": 89, "sshd_output": 89, "listen": 89, "1025": 89, "65535": 89, "ui": 89, "aren": 89, "icon": 89, "sidebar": 89, "workspac": 89, "remotecommand": 89, "requesttti": 89, "hostnam": 89, "enableremotecommand": 89, "uselocalserv": 89, "remoteserverlistenonsocket": 89, "connecttimeout": 89, "serverinstallpath": 89, "sign": 89, "upgrad": 89, "ac": 89, "ace_nam": 89, "instance_nam": 89, "commandlin": 89, "job_id": 89, "600": 89, "8888": 89, "404": 89, "patient": 89, "happi": 89, "cuda12x": 89, "vendor": 89, "prebuilt": 89, "libcudaq_distributed_interface_mpi": 89, "cudaq_mpi_comm_lib": 89, "cu11": [89, 94], "uninstal": [89, 94], "supersed": 89, "dsize": 89, "fairli": 89, "succe": 89, "hang": [89, 94], "imper": 90, "mycudaqapp": 90, "add_execut": 90, "ghz_ex": 90, "dcudaq_dir": 90, "cu": 91, "my_proj": 91, "conform": 91, "my_proj_quantum": 91, "libc": 91, "cudadatatyp": [91, 93], "cudasetfirstnel": 91, "__restrict__": 91, "sv2": 91, "int64_t": 91, "blockidx": 91, "blockdim": 91, "threadidx": 91, "setfirstnel": 91, "uint32_t": [91, 93], "n_block": [91, 93], "int32_t": [91, 93], "threads_per_block": [91, 93], "newdevicestatevector": 91, "devicestatevector": [91, 93], "previousstatedimens": 91, "reinterpret_cast": [91, 93], "cufloatcomplex": [91, 93], "cudoublecomplex": [91, 93], "cucomplex": 91, "cuda_runtim": 91, "device_launch_paramet": 91, "my_kernel": 91, "cudamalloc": 91, "xcompil": 91, "fpic": [91, 93], "cuda_hom": 91, "lcudart": 91, "my_execut": 91, "quantum_kernel": 93, "sstream": 93, "bell_distribut": 93, "stringbuf": 93, "ptr": 93, "strcpy": 93, "libstdc": 93, "libquantum_kernel": 93, "bell_dist": 93, "lquantum_kernel": 93, "abi": 93, "incompat": 93, "watch": 93, "surround": 93, "third_party_librari": 93, "libexternal_librari": 93, "my_cod": 93, "bstatic": 93, "lexternal_librari": 93, "bdynam": 93, "crut": 93, "libexternal_library_complet": 93, "naddlib": 93, "nsave": 93, "nend": 93, "lexternal_library_complet": 93, "shim": 93, "pragma": 93, "is_integr": 93, "initializedevicestatevector": 93, "statedimens": 93, "cudainitializedevicestatevector": 93, "cumbersom": 93, "necessarili": 93, "recogn": 93, "forg": 94, "conda_prefix": 94, "ompi_mca_opal_cuda_support": 94, "ompi_mca_btl": 94, "openib": 94, "bash_profil": 94, "bash_login": 94, "_cu11": 94, "_cu12": 94, "amd": 94}, "objects": {"": [[2, 0, 1, "_CPPv45cudaq", "cudaq"], [2, 1, 1, "_CPPv4N5cudaq20BaseNvcfSimulatorQPUE", "cudaq::BaseNvcfSimulatorQPU"], [2, 1, 1, "_CPPv4N5cudaq17BaseRemoteRESTQPUE", "cudaq::BaseRemoteRESTQPU"], [2, 1, 1, "_CPPv4N5cudaq22BaseRemoteSimulatorQPUE", "cudaq::BaseRemoteSimulatorQPU"], [2, 1, 1, "_CPPv4I0EN5cudaq9CusvStateE", "cudaq::CusvState"], [2, 2, 1, "_CPPv4I0EN5cudaq9CusvStateE", "cudaq::CusvState::ScalarType"], [2, 1, 1, "_CPPv4N5cudaq16ExecutionContextE", "cudaq::ExecutionContext"], [2, 3, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringE", "cudaq::ExecutionContext::ExecutionContext"], [2, 3, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE", "cudaq::ExecutionContext::ExecutionContext"], [2, 4, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringE", "cudaq::ExecutionContext::ExecutionContext::n"], [2, 4, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE", "cudaq::ExecutionContext::ExecutionContext::n"], [2, 4, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE", "cudaq::ExecutionContext::ExecutionContext::shots_"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext13amplitudeMapsE", "cudaq::ExecutionContext::amplitudeMaps"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext9asyncExecE", "cudaq::ExecutionContext::asyncExec"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext11asyncResultE", "cudaq::ExecutionContext::asyncResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext14batchIterationE", "cudaq::ExecutionContext::batchIteration"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext16canHandleObserveE", "cudaq::ExecutionContext::canHandleObserve"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext16expectationValueE", "cudaq::ExecutionContext::expectationValue"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext20explicitMeasurementsE", "cudaq::ExecutionContext::explicitMeasurements"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext12futureResultE", "cudaq::ExecutionContext::futureResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext31hasConditionalsOnMeasureResultsE", "cudaq::ExecutionContext::hasConditionalsOnMeasureResults"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext22invocationResultBufferE", "cudaq::ExecutionContext::invocationResultBuffer"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext10kernelNameE", "cudaq::ExecutionContext::kernelName"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext11kernelTraceE", "cudaq::ExecutionContext::kernelTrace"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext4nameE", "cudaq::ExecutionContext::name"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext10noiseModelE", "cudaq::ExecutionContext::noiseModel"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext18numberTrajectoriesE", "cudaq::ExecutionContext::numberTrajectories"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext9optResultE", "cudaq::ExecutionContext::optResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext20overlapComputeStatesE", "cudaq::ExecutionContext::overlapComputeStates"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext13overlapResultE", "cudaq::ExecutionContext::overlapResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext13registerNamesE", "cudaq::ExecutionContext::registerNames"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext10reorderIdxE", "cudaq::ExecutionContext::reorderIdx"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext6resultE", "cudaq::ExecutionContext::result"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext5shotsE", "cudaq::ExecutionContext::shots"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext15simulationStateE", "cudaq::ExecutionContext::simulationState"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext4spinE", "cudaq::ExecutionContext::spin"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext15totalIterationsE", "cudaq::ExecutionContext::totalIterations"], [2, 1, 1, "_CPPv4N5cudaq15ExecutionResultE", "cudaq::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionary", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultENSt6stringE", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultERK15ExecutionResult", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEd", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEv", "cudaq::ExecutionResult::ExecutionResult"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionary", "cudaq::ExecutionResult::ExecutionResult::c"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE", "cudaq::ExecutionResult::ExecutionResult::c"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd", "cudaq::ExecutionResult::ExecutionResult::c"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd", "cudaq::ExecutionResult::ExecutionResult::e"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEd", "cudaq::ExecutionResult::ExecutionResult::expVal"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE", "cudaq::ExecutionResult::ExecutionResult::name"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultENSt6stringE", "cudaq::ExecutionResult::ExecutionResult::name"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultERK15ExecutionResult", "cudaq::ExecutionResult::ExecutionResult::other"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE", "cudaq::ExecutionResult::appendResult"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE", "cudaq::ExecutionResult::appendResult::bitString"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE", "cudaq::ExecutionResult::appendResult::count"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::ExecutionResult::deserialize"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::ExecutionResult::deserialize::data"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResultaSERK15ExecutionResult", "cudaq::ExecutionResult::operator="], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResultaSERK15ExecutionResult", "cudaq::ExecutionResult::operator=::other"], [2, 3, 1, "_CPPv4NK5cudaq15ExecutionResulteqERK15ExecutionResult", "cudaq::ExecutionResult::operator=="], [2, 4, 1, "_CPPv4NK5cudaq15ExecutionResulteqERK15ExecutionResult", "cudaq::ExecutionResult::operator==::result"], [2, 5, 1, "_CPPv4N5cudaq15ExecutionResult12registerNameE", "cudaq::ExecutionResult::registerName"], [2, 5, 1, "_CPPv4N5cudaq15ExecutionResult14sequentialDataE", "cudaq::ExecutionResult::sequentialData"], [2, 3, 1, "_CPPv4NK5cudaq15ExecutionResult9serializeEv", "cudaq::ExecutionResult::serialize"], [2, 1, 1, "_CPPv4N5cudaq16FermioniqBaseQPUE", "cudaq::FermioniqBaseQPU"], [2, 0, 1, "_CPPv4N5cudaq19KernelExecutionTaskE", "cudaq::KernelExecutionTask"], [2, 1, 1, "_CPPv4N5cudaq21KernelThunkResultTypeE", "cudaq::KernelThunkResultType"], [2, 0, 1, "_CPPv4N5cudaq15KernelThunkTypeE", "cudaq::KernelThunkType"], [2, 1, 1, "_CPPv4N5cudaq17OrcaRemoteRESTQPUE", "cudaq::OrcaRemoteRESTQPU"], [2, 1, 1, "_CPPv4N5cudaq13PasqalBaseQPUE", "cudaq::PasqalBaseQPU"], [2, 1, 1, "_CPPv4N5cudaq3QPUE", "cudaq::QPU"], [2, 3, 1, "_CPPv4N5cudaq3QPU3QPUENSt6size_tE", "cudaq::QPU::QPU"], [2, 3, 1, "_CPPv4N5cudaq3QPU3QPUERR3QPU", "cudaq::QPU::QPU"], [2, 3, 1, "_CPPv4N5cudaq3QPU3QPUEv", "cudaq::QPU::QPU"], [2, 4, 1, "_CPPv4N5cudaq3QPU3QPUENSt6size_tE", "cudaq::QPU::QPU::_qpuId"], [2, 3, 1, "_CPPv4N5cudaq3QPU7enqueueER11QuantumTask", "cudaq::QPU::enqueue"], [2, 4, 1, "_CPPv4N5cudaq3QPU7enqueueER11QuantumTask", "cudaq::QPU::enqueue::task"], [2, 3, 1, "_CPPv4N5cudaq3QPU15getConnectivityEv", "cudaq::QPU::getConnectivity"], [2, 3, 1, "_CPPv4NK5cudaq3QPU20getExecutionThreadIdEv", "cudaq::QPU::getExecutionThreadId"], [2, 3, 1, "_CPPv4N5cudaq3QPU12getNumQubitsEv", "cudaq::QPU::getNumQubits"], [2, 3, 1, "_CPPv4NK5cudaq3QPU21getRemoteCapabilitiesEv", "cudaq::QPU::getRemoteCapabilities"], [2, 3, 1, "_CPPv4N5cudaq3QPU10isEmulatedEv", "cudaq::QPU::isEmulated"], [2, 3, 1, "_CPPv4N5cudaq3QPU11isSimulatorEv", "cudaq::QPU::isSimulator"], [2, 3, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel"], [2, 3, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::args"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::kernelFunc"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::name"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::name"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::rawArgs"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::rawArgs"], [2, 3, 1, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE", "cudaq::QPU::launchSerializedCodeExecution"], [2, 4, 1, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE", "cudaq::QPU::launchSerializedCodeExecution::name"], [2, 4, 1, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE", "cudaq::QPU::launchSerializedCodeExecution::serializeCodeExecutionObject"], [2, 3, 1, "_CPPv4N5cudaq3QPU15onRandomSeedSetENSt6size_tE", "cudaq::QPU::onRandomSeedSet"], [2, 4, 1, "_CPPv4N5cudaq3QPU15onRandomSeedSetENSt6size_tE", "cudaq::QPU::onRandomSeedSet::seed"], [2, 3, 1, "_CPPv4N5cudaq3QPU21resetExecutionContextEv", "cudaq::QPU::resetExecutionContext"], [2, 3, 1, "_CPPv4N5cudaq3QPU19setExecutionContextEP16ExecutionContext", "cudaq::QPU::setExecutionContext"], [2, 4, 1, "_CPPv4N5cudaq3QPU19setExecutionContextEP16ExecutionContext", "cudaq::QPU::setExecutionContext::context"], [2, 3, 1, "_CPPv4N5cudaq3QPU5setIdENSt6size_tE", "cudaq::QPU::setId"], [2, 4, 1, "_CPPv4N5cudaq3QPU5setIdENSt6size_tE", "cudaq::QPU::setId::_qpuId"], [2, 3, 1, "_CPPv4N5cudaq3QPU8setShotsEi", "cudaq::QPU::setShots"], [2, 4, 1, "_CPPv4N5cudaq3QPU8setShotsEi", "cudaq::QPU::setShots::_nShots"], [2, 3, 1, "_CPPv4N5cudaq3QPU27supportsConditionalFeedbackEv", "cudaq::QPU::supportsConditionalFeedback"], [2, 3, 1, "_CPPv4N5cudaq3QPU28supportsExplicitMeasurementsEv", "cudaq::QPU::supportsExplicitMeasurements"], [2, 3, 1, "_CPPv4N5cudaq3QPUD0Ev", "cudaq::QPU::~QPU"], [2, 1, 1, "_CPPv4N5cudaq12QuEraBaseQPUE", "cudaq::QuEraBaseQPU"], [2, 1, 1, "_CPPv4N5cudaq10QuakeValueE", "cudaq::QuakeValue"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE", "cudaq::QuakeValue::QuakeValue"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd", "cudaq::QuakeValue::QuakeValue"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE", "cudaq::QuakeValue::QuakeValue::builder"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd", "cudaq::QuakeValue::QuakeValue::builder"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE", "cudaq::QuakeValue::QuakeValue::v"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd", "cudaq::QuakeValue::QuakeValue::v"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue22canValidateNumElementsEv", "cudaq::QuakeValue::canValidateNumElements"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue12constantSizeEv", "cudaq::QuakeValue::constantSize"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue4dumpERNSt7ostreamE", "cudaq::QuakeValue::dump"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue4dumpEv", "cudaq::QuakeValue::dump"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue19getRequiredElementsEv", "cudaq::QuakeValue::getRequiredElements"], [2, 3, 1, "_CPPv4NK5cudaq10QuakeValue8getValueEv", "cudaq::QuakeValue::getValue"], [2, 3, 1, "_CPPv4NK5cudaq10QuakeValue7inverseEv", "cudaq::QuakeValue::inverse"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue8isStdVecEv", "cudaq::QuakeValue::isStdVec"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemlE10QuakeValue", "cudaq::QuakeValue::operator*"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemlEKd", "cudaq::QuakeValue::operator*"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValuemlE10QuakeValue", "cudaq::QuakeValue::operator*::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueplE10QuakeValue", "cudaq::QuakeValue::operator+"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueplEKd", "cudaq::QuakeValue::operator+"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueplEKi", "cudaq::QuakeValue::operator+"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValueplE10QuakeValue", "cudaq::QuakeValue::operator+::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemiE10QuakeValue", "cudaq::QuakeValue::operator-"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemiEKd", "cudaq::QuakeValue::operator-"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemiEKi", "cudaq::QuakeValue::operator-"], [2, 3, 1, "_CPPv4NK5cudaq10QuakeValuemiEv", "cudaq::QuakeValue::operator-"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValuemiE10QuakeValue", "cudaq::QuakeValue::operator-::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuedvE10QuakeValue", "cudaq::QuakeValue::operator/"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuedvEKd", "cudaq::QuakeValue::operator/"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValuedvE10QuakeValue", "cudaq::QuakeValue::operator/::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueixEKNSt6size_tE", "cudaq::QuakeValue::operator[]"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueixERK10QuakeValue", "cudaq::QuakeValue::operator[]"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValueixEKNSt6size_tE", "cudaq::QuakeValue::operator[]::idx"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValueixERK10QuakeValue", "cudaq::QuakeValue::operator[]::idx"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue4sizeEv", "cudaq::QuakeValue::size"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE", "cudaq::QuakeValue::slice"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE", "cudaq::QuakeValue::slice::count"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE", "cudaq::QuakeValue::slice::startIdx"], [2, 0, 1, "_CPPv4N5cudaq11QuantumTaskE", "cudaq::QuantumTask"], [2, 0, 1, "_CPPv4N5cudaq17QubitConnectivityE", "cudaq::QubitConnectivity"], [2, 0, 1, "_CPPv4N5cudaq9QubitEdgeE", "cudaq::QubitEdge"], [2, 1, 1, "_CPPv4N5cudaq18RemoteCapabilitiesE", "cudaq::RemoteCapabilities"], [2, 3, 1, "_CPPv4N5cudaq18RemoteCapabilities18RemoteCapabilitiesEb", "cudaq::RemoteCapabilities::RemoteCapabilities"], [2, 4, 1, "_CPPv4N5cudaq18RemoteCapabilities18RemoteCapabilitiesEb", "cudaq::RemoteCapabilities::RemoteCapabilities::initValue"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities17isRemoteSimulatorE", "cudaq::RemoteCapabilities::isRemoteSimulator"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities18serializedCodeExecE", "cudaq::RemoteCapabilities::serializedCodeExec"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities12stateOverlapE", "cudaq::RemoteCapabilities::stateOverlap"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities3vqeE", "cudaq::RemoteCapabilities::vqe"], [2, 1, 1, "_CPPv4N5cudaq21RemoteSimulationStateE", "cudaq::RemoteSimulationState"], [2, 1, 1, "_CPPv4N5cudaq9ResourcesE", "cudaq::Resources"], [2, 1, 1, "_CPPv4N5cudaq30SerializedCodeExecutionContextE", "cudaq::SerializedCodeExecutionContext"], [2, 1, 1, "_CPPv4N5cudaq15SimulationStateE", "cudaq::SimulationState"], [2, 1, 1, "_CPPv4N5cudaq15SimulationState6TensorE", "cudaq::SimulationState::Tensor"], [2, 6, 1, "_CPPv4N5cudaq15SimulationState9precisionE", "cudaq::SimulationState::precision"], [2, 7, 1, "_CPPv4N5cudaq15SimulationState9precision4fp32E", "cudaq::SimulationState::precision::fp32"], [2, 7, 1, "_CPPv4N5cudaq15SimulationState9precision4fp64E", "cudaq::SimulationState::precision::fp64"], [2, 0, 1, "_CPPv4N5cudaq15TensorStateDataE", "cudaq::TensorStateData"], [2, 1, 1, "_CPPv4N5cudaq5TraceE", "cudaq::Trace"], [2, 1, 1, "_CPPv4N5cudaq17amplitude_dampingE", "cudaq::amplitude_damping"], [2, 1, 1, "_CPPv4N5cudaq25amplitude_damping_channelE", "cudaq::amplitude_damping_channel"], [2, 1, 1, "_CPPv4I0EN5cudaq12async_resultE", "cudaq::async_result"], [2, 2, 1, "_CPPv4I0EN5cudaq12async_resultE", "cudaq::async_result::T"], [2, 3, 1, "_CPPv4N5cudaq12async_result3getEv", "cudaq::async_result::get"], [2, 0, 1, "_CPPv4N5cudaq19async_sample_resultE", "cudaq::async_sample_result"], [2, 1, 1, "_CPPv4N5cudaq16bit_flip_channelE", "cudaq::bit_flip_channel"], [2, 0, 1, "_CPPv4N5cudaq7complexE", "cudaq::complex"], [2, 1, 1, "_CPPv4N5cudaq14complex_matrixE", "cudaq::complex_matrix"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix7adjointEv", "cudaq::complex_matrix::adjoint"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix4dumpERNSt7ostreamE", "cudaq::complex_matrix::dump"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix4dumpEv", "cudaq::complex_matrix::dump"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrix4dumpERNSt7ostreamE", "cudaq::complex_matrix::dump::os"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix11eigenvaluesEv", "cudaq::complex_matrix::eigenvalues"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix12eigenvectorsEv", "cudaq::complex_matrix::eigenvectors"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix11exponentialEv", "cudaq::complex_matrix::exponential"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix8identityEKNSt6size_tE", "cudaq::complex_matrix::identity"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix8identityEKNSt6size_tE", "cudaq::complex_matrix::identity::rows"], [2, 3, 1, "_CPPv4I00EN5cudaq14complex_matrix9kroneckerE14complex_matrix8Iterable8Iterable", "cudaq::complex_matrix::kronecker"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix9kroneckerERK14complex_matrixRK14complex_matrix", "cudaq::complex_matrix::kronecker"], [2, 2, 1, "_CPPv4I00EN5cudaq14complex_matrix9kroneckerE14complex_matrix8Iterable8Iterable", "cudaq::complex_matrix::kronecker::Iterable"], [2, 2, 1, "_CPPv4I00EN5cudaq14complex_matrix9kroneckerE14complex_matrix8Iterable8Iterable", "cudaq::complex_matrix::kronecker::T"], [2, 4, 1, "_CPPv4I00EN5cudaq14complex_matrix9kroneckerE14complex_matrix8Iterable8Iterable", "cudaq::complex_matrix::kronecker::begin"], [2, 4, 1, "_CPPv4I00EN5cudaq14complex_matrix9kroneckerE14complex_matrix8Iterable8Iterable", "cudaq::complex_matrix::kronecker::end"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix18minimal_eigenvalueEv", "cudaq::complex_matrix::minimal_eigenvalue"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()::i"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()::i"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()::j"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()::j"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixmlEN14complex_matrix10value_typeERK14complex_matrix", "cudaq::complex_matrix::operator*"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixmlERK14complex_matrixRK14complex_matrix", "cudaq::complex_matrix::operator*"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixmlERK14complex_matrixRKNSt6vectorIN14complex_matrix10value_typeEEE", "cudaq::complex_matrix::operator*"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixplERK14complex_matrixRK14complex_matrix", "cudaq::complex_matrix::operator+"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixmiERK14complex_matrixRK14complex_matrix", "cudaq::complex_matrix::operator-"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrixixERKNSt6vectorINSt6size_tEEE", "cudaq::complex_matrix::operator[]"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrixixERKNSt6vectorINSt6size_tEEE", "cudaq::complex_matrix::operator[]"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrixixERKNSt6vectorINSt6size_tEEE", "cudaq::complex_matrix::operator[]::at"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixixERKNSt6vectorINSt6size_tEEE", "cudaq::complex_matrix::operator[]::at"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix5powerEi", "cudaq::complex_matrix::power"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix5powerEi", "cudaq::complex_matrix::power::powers"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix8set_zeroEv", "cudaq::complex_matrix::set_zero"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix9to_stringEv", "cudaq::complex_matrix::to_string"], [2, 0, 1, "_CPPv4N5cudaq14complex_matrix10value_typeE", "cudaq::complex_matrix::value_type"], [2, 1, 1, "_CPPv4N5cudaq15depolarization1E", "cudaq::depolarization1"], [2, 1, 1, "_CPPv4N5cudaq15depolarization2E", "cudaq::depolarization2"], [2, 3, 1, "_CPPv4N5cudaq15depolarization215depolarization2EK4real", "cudaq::depolarization2::depolarization2"], [2, 4, 1, "_CPPv4N5cudaq15depolarization215depolarization2EK4real", "cudaq::depolarization2::depolarization2::probability"], [2, 1, 1, "_CPPv4N5cudaq22depolarization_channelE", "cudaq::depolarization_channel"], [2, 0, 1, "_CPPv4N5cudaq7detailsE", "cudaq::details"], [2, 1, 1, "_CPPv4N5cudaq7details17KernelBuilderTypeE", "cudaq::details::KernelBuilderType"], [2, 3, 1, "_CPPv4N5cudaq7details17KernelBuilderType17KernelBuilderTypeERRNSt8functionIFN4mlir4TypeEPN4mlir11MLIRContextEEEE", "cudaq::details::KernelBuilderType::KernelBuilderType"], [2, 4, 1, "_CPPv4N5cudaq7details17KernelBuilderType17KernelBuilderTypeERRNSt8functionIFN4mlir4TypeEPN4mlir11MLIRContextEEEE", "cudaq::details::KernelBuilderType::KernelBuilderType::f"], [2, 3, 1, "_CPPv4N5cudaq7details17KernelBuilderType6createEPN4mlir11MLIRContextE", "cudaq::details::KernelBuilderType::create"], [2, 4, 1, "_CPPv4N5cudaq7details17KernelBuilderType6createEPN4mlir11MLIRContextE", "cudaq::details::KernelBuilderType::create::ctx"], [2, 1, 1, "_CPPv4N5cudaq7details6futureE", "cudaq::details::future"], [2, 3, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future"], [2, 3, 1, "_CPPv4N5cudaq7details6future6futureERR6future", "cudaq::details::future::future"], [2, 3, 1, "_CPPv4N5cudaq7details6future6futureEv", "cudaq::details::future::future"], [2, 4, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future::_jobs"], [2, 4, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future::config"], [2, 4, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future::qpuNameIn"], [2, 1, 1, "_CPPv4N5cudaq7details19kernel_builder_baseE", "cudaq::details::kernel_builder_base"], [2, 3, 1, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base", "cudaq::details::kernel_builder_base::operator&lt;&lt;"], [2, 4, 1, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base", "cudaq::details::kernel_builder_base::operator&lt;&lt;::builder"], [2, 4, 1, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base", "cudaq::details::kernel_builder_base::operator&lt;&lt;::stream"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::QuantumKernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::kernel"], [2, 5, 1, "_CPPv4N5cudaq3dynE", "cudaq::dyn"], [2, 3, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state"], [2, 2, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::Args"], [2, 2, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::QuantumKernel"], [2, 4, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::args"], [2, 4, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::kernel"], [2, 1, 1, "_CPPv4N5cudaq8gradientE", "cudaq::gradient"], [2, 3, 1, "_CPPv4N5cudaq8gradient5cloneEv", "cudaq::gradient::clone"], [2, 3, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute"], [2, 3, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute::func"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::h"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute::x"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4N5cudaq8gradient8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4N5cudaq8gradient8gradientEv", "cudaq::gradient::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT", "cudaq::gradient::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT", "cudaq::gradient::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq8gradient8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradient::gradient::kernel"], [2, 3, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs"], [2, 2, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::Args"], [2, 2, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::QuantumKernel"], [2, 4, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::args"], [2, 4, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::kernel"], [2, 3, 1, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel", "cudaq::gradient::setKernel"], [2, 2, 1, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel", "cudaq::gradient::setKernel::QuantumKernel"], [2, 4, 1, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel", "cudaq::gradient::setKernel::kernel"], [2, 1, 1, "_CPPv4N5cudaq9gradients18central_differenceE", "cudaq::gradients::central_difference"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference5cloneEv", "cudaq::gradients::central_difference::clone"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::exp_h"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute::func"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::h"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute::x"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference8gradientEv", "cudaq::gradients::central_difference::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT", "cudaq::gradients::central_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT", "cudaq::gradients::central_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::central_difference::gradient::kernel"], [2, 1, 1, "_CPPv4N5cudaq9gradients18forward_differenceE", "cudaq::gradients::forward_difference"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference5cloneEv", "cudaq::gradients::forward_difference::clone"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute::func"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::h"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute::x"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference8gradientEv", "cudaq::gradients::forward_difference::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT", "cudaq::gradients::forward_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 1, 1, "_CPPv4N5cudaq9gradients15parameter_shiftE", "cudaq::gradients::parameter_shift"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift5cloneEv", "cudaq::gradients::parameter_shift::clone"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::exp_h"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute::func"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::h"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute::x"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift8gradientEv", "cudaq::gradients::parameter_shift::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT", "cudaq::gradients::parameter_shift::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 1, 1, "_CPPv4IDpEN5cudaq14kernel_builderE", "cudaq::kernel_builder"], [2, 2, 1, "_CPPv4IDpEN5cudaq14kernel_builderE", "cudaq::kernel_builder::Args"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder11constantValEd", "cudaq::kernel_builder::constantVal"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder11constantValEd", "cudaq::kernel_builder::constantVal::val"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder12getArgumentsEv", "cudaq::kernel_builder::getArguments"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder12getNumParamsEv", "cudaq::kernel_builder::getNumParams"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder11isArgStdVecENSt6size_tE", "cudaq::kernel_builder::isArgStdVec"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder11isArgStdVecENSt6size_tE", "cudaq::kernel_builder::isArgStdVec::idx"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder14kernel_builderERNSt6vectorIN7details17KernelBuilderTypeEEE", "cudaq::kernel_builder::kernel_builder"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder14kernel_builderERNSt6vectorIN7details17KernelBuilderTypeEEE", "cudaq::kernel_builder::kernel_builder::types"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder4nameEv", "cudaq::kernel_builder::name"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocE10QuakeValue", "cudaq::kernel_builder::qalloc"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocEKNSt6size_tE", "cudaq::kernel_builder::qalloc"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocERNSt6vectorINSt7complexIdEEEE", "cudaq::kernel_builder::qalloc"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocEv", "cudaq::kernel_builder::qalloc"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder6qallocEKNSt6size_tE", "cudaq::kernel_builder::qalloc::nQubits"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder6qallocE10QuakeValue", "cudaq::kernel_builder::qalloc::size"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder6qallocERNSt6vectorINSt7complexIdEEEE", "cudaq::kernel_builder::qalloc::state"], [2, 3, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap"], [2, 3, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::control"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::controls"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::first"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::first"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::first"], [2, 2, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::mod"], [2, 2, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::mod"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::second"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::second"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::second"], [2, 1, 1, "_CPPv4N5cudaq13kraus_channelE", "cudaq::kraus_channel"], [2, 3, 1, "_CPPv4NK5cudaq13kraus_channel5emptyEv", "cudaq::kraus_channel::empty"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel25generateUnitaryParametersEv", "cudaq::kraus_channel::generateUnitaryParameters"], [2, 3, 1, "_CPPv4NK5cudaq13kraus_channel7get_opsEv", "cudaq::kraus_channel::get_ops"], [2, 3, 1, "_CPPv4NK5cudaq13kraus_channel18is_unitary_mixtureEv", "cudaq::kraus_channel::is_unitary_mixture"], [2, 3, 1, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERK13kraus_channel", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERKNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERRNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelEv", "cudaq::kraus_channel::kraus_channel"], [2, 2, 1, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE", "cudaq::kraus_channel::kraus_channel::T"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERKNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel::inOps"], [2, 4, 1, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE", "cudaq::kraus_channel::kraus_channel::inputLists"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERRNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel::ops"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERK13kraus_channel", "cudaq::kraus_channel::kraus_channel::other"], [2, 5, 1, "_CPPv4N5cudaq13kraus_channel10noise_typeE", "cudaq::kraus_channel::noise_type"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channelaSERK13kraus_channel", "cudaq::kraus_channel::operator="], [2, 4, 1, "_CPPv4N5cudaq13kraus_channelaSERK13kraus_channel", "cudaq::kraus_channel::operator=::other"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channelixEKNSt6size_tE", "cudaq::kraus_channel::operator[]"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channelixEKNSt6size_tE", "cudaq::kraus_channel::operator[]::idx"], [2, 5, 1, "_CPPv4N5cudaq13kraus_channel10parametersE", "cudaq::kraus_channel::parameters"], [2, 5, 1, "_CPPv4N5cudaq13kraus_channel13probabilitiesE", "cudaq::kraus_channel::probabilities"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel9push_backE8kraus_op", "cudaq::kraus_channel::push_back"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel9push_backE8kraus_op", "cudaq::kraus_channel::push_back::op"], [2, 3, 1, "_CPPv4NK5cudaq13kraus_channel4sizeEv", "cudaq::kraus_channel::size"], [2, 5, 1, "_CPPv4N5cudaq13kraus_channel11unitary_opsE", "cudaq::kraus_channel::unitary_ops"], [2, 1, 1, "_CPPv4N5cudaq8kraus_opE", "cudaq::kraus_op"], [2, 3, 1, "_CPPv4NK5cudaq8kraus_op7adjointEv", "cudaq::kraus_op::adjoint"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op4dataE", "cudaq::kraus_op::data"], [2, 3, 1, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE", "cudaq::kraus_op::kraus_op"], [2, 3, 1, "_CPPv4N5cudaq8kraus_op8kraus_opENSt6vectorIN5cudaq7complexEEE", "cudaq::kraus_op::kraus_op"], [2, 3, 1, "_CPPv4N5cudaq8kraus_op8kraus_opERK8kraus_op", "cudaq::kraus_op::kraus_op"], [2, 2, 1, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE", "cudaq::kraus_op::kraus_op::T"], [2, 4, 1, "_CPPv4N5cudaq8kraus_op8kraus_opENSt6vectorIN5cudaq7complexEEE", "cudaq::kraus_op::kraus_op::d"], [2, 4, 1, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE", "cudaq::kraus_op::kraus_op::initList"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op5nColsE", "cudaq::kraus_op::nCols"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op5nRowsE", "cudaq::kraus_op::nRows"], [2, 3, 1, "_CPPv4N5cudaq8kraus_opaSERK8kraus_op", "cudaq::kraus_op::operator="], [2, 4, 1, "_CPPv4N5cudaq8kraus_opaSERK8kraus_op", "cudaq::kraus_op::operator=::other"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op9precisionE", "cudaq::kraus_op::precision"], [2, 0, 1, "_CPPv4N5cudaq3mpiE", "cudaq::mpi"], [2, 3, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE", "cudaq::mpi::all_gather"], [2, 3, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE", "cudaq::mpi::all_gather"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE", "cudaq::mpi::all_gather::global"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE", "cudaq::mpi::all_gather::global"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE", "cudaq::mpi::all_gather::local"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE", "cudaq::mpi::all_gather::local"], [2, 3, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce"], [2, 3, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func", "cudaq::mpi::all_reduce"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::BinaryFunction"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func", "cudaq::mpi::all_reduce::Func"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::T"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func", "cudaq::mpi::all_reduce::T"], [2, 4, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::function"], [2, 4, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::localValue"], [2, 3, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi", "cudaq::mpi::broadcast"], [2, 3, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi", "cudaq::mpi::broadcast"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi", "cudaq::mpi::broadcast::data"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi", "cudaq::mpi::broadcast::data"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi", "cudaq::mpi::broadcast::rootRank"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi", "cudaq::mpi::broadcast::rootRank"], [2, 3, 1, "_CPPv4N5cudaq3mpi8finalizeEv", "cudaq::mpi::finalize"], [2, 3, 1, "_CPPv4N5cudaq3mpi10initializeEiPPc", "cudaq::mpi::initialize"], [2, 3, 1, "_CPPv4N5cudaq3mpi10initializeEv", "cudaq::mpi::initialize"], [2, 4, 1, "_CPPv4N5cudaq3mpi10initializeEiPPc", "cudaq::mpi::initialize::argc"], [2, 4, 1, "_CPPv4N5cudaq3mpi10initializeEiPPc", "cudaq::mpi::initialize::argv"], [2, 3, 1, "_CPPv4N5cudaq3mpi14is_initializedEv", "cudaq::mpi::is_initialized"], [2, 3, 1, "_CPPv4N5cudaq3mpi9num_ranksEv", "cudaq::mpi::num_ranks"], [2, 3, 1, "_CPPv4N5cudaq3mpi4rankEv", "cudaq::mpi::rank"], [2, 1, 1, "_CPPv4N5cudaq11noise_modelE", "cudaq::noise_model"], [2, 0, 1, "_CPPv4N5cudaq11noise_model15PredicateFuncTyE", "cudaq::noise_model::PredicateFuncTy"], [2, 3, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel"], [2, 3, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel"], [2, 2, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::QuantumOp"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::channel"], [2, 4, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::channel"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::numControls"], [2, 4, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::numControls"], [2, 4, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::quantumOp"], [2, 3, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy", "cudaq::noise_model::add_channel"], [2, 3, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel"], [2, 3, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy", "cudaq::noise_model::add_channel"], [2, 3, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel"], [2, 2, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy", "cudaq::noise_model::add_channel::QuantumOp"], [2, 2, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::QuantumOp"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::channel"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::channel"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy", "cudaq::noise_model::add_channel::pred"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy", "cudaq::noise_model::add_channel::pred"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy", "cudaq::noise_model::add_channel::quantumOp"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::quantumOp"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::qubits"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::qubits"], [2, 3, 1, "_CPPv4NK5cudaq11noise_model5emptyEv", "cudaq::noise_model::empty"], [2, 3, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels"], [2, 3, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels"], [2, 2, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::QuantumOp"], [2, 4, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::controlQubits"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::controlQubits"], [2, 4, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::params"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::params"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::quantumOp"], [2, 4, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::targetQubits"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::targetQubits"], [2, 3, 1, "_CPPv4N5cudaq11noise_model11noise_modelEv", "cudaq::noise_model::noise_model"], [2, 6, 1, "_CPPv4N5cudaq16noise_model_typeE", "cudaq::noise_model_type"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type17amplitude_dampingE", "cudaq::noise_model_type::amplitude_damping"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type25amplitude_damping_channelE", "cudaq::noise_model_type::amplitude_damping_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type16bit_flip_channelE", "cudaq::noise_model_type::bit_flip_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type15depolarization1E", "cudaq::noise_model_type::depolarization1"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type15depolarization2E", "cudaq::noise_model_type::depolarization2"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type22depolarization_channelE", "cudaq::noise_model_type::depolarization_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type6pauli1E", "cudaq::noise_model_type::pauli1"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type6pauli2E", "cudaq::noise_model_type::pauli2"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type13phase_dampingE", "cudaq::noise_model_type::phase_damping"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type18phase_flip_channelE", "cudaq::noise_model_type::phase_flip_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type7unknownE", "cudaq::noise_model_type::unknown"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type7x_errorE", "cudaq::noise_model_type::x_error"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type7y_errorE", "cudaq::noise_model_type::y_error"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type7z_errorE", "cudaq::noise_model_type::z_error"], [2, 3, 1, "_CPPv4N5cudaq18num_available_gpusEv", "cudaq::num_available_gpus"], [2, 3, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe"], [2, 2, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::Args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::H"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::H"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::H"], [2, 2, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::SpinOpContainer"], [2, 4, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::options"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::shots"], [2, 4, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::termList"], [2, 1, 1, "_CPPv4N5cudaq15observe_optionsE", "cudaq::observe_options"], [2, 1, 1, "_CPPv4N5cudaq14observe_resultE", "cudaq::observe_result"], [2, 3, 1, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType", "cudaq::observe_result::counts"], [2, 2, 1, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType", "cudaq::observe_result::counts::SpinOpType"], [2, 4, 1, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType", "cudaq::observe_result::counts::term"], [2, 3, 1, "_CPPv4N5cudaq14observe_result4dumpEv", "cudaq::observe_result::dump"], [2, 3, 1, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType", "cudaq::observe_result::expectation"], [2, 3, 1, "_CPPv4N5cudaq14observe_result11expectationEv", "cudaq::observe_result::expectation"], [2, 2, 1, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType", "cudaq::observe_result::expectation::SpinOpType"], [2, 4, 1, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType", "cudaq::observe_result::expectation::term"], [2, 3, 1, "_CPPv4N5cudaq14observe_result14id_coefficientEv", "cudaq::observe_result::id_coefficient"], [2, 3, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op", "cudaq::observe_result::observe_result"], [2, 3, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op", "cudaq::observe_result::observe_result::H"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result::H"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result::counts"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op", "cudaq::observe_result::observe_result::e"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result::e"], [2, 3, 1, "_CPPv4N5cudaq14observe_resultcvdEv", "cudaq::observe_result::operator double"], [2, 3, 1, "_CPPv4N5cudaq14observe_result8raw_dataEv", "cudaq::observe_result::raw_data"], [2, 1, 1, "_CPPv4N5cudaq20optimizable_functionE", "cudaq::optimizable_function"], [2, 0, 1, "_CPPv4N5cudaq19optimization_resultE", "cudaq::optimization_result"], [2, 1, 1, "_CPPv4N5cudaq9optimizerE", "cudaq::optimizer"], [2, 3, 1, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function", "cudaq::optimizer::optimize"], [2, 4, 1, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function", "cudaq::optimizer::optimize::dim"], [2, 4, 1, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function", "cudaq::optimizer::optimize::opt_function"], [2, 3, 1, "_CPPv4N5cudaq9optimizer17requiresGradientsEv", "cudaq::optimizer::requiresGradients"], [2, 0, 1, "_CPPv4N5cudaq4orcaE", "cudaq::orca"], [2, 3, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample"], [2, 3, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::ps_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async"], [2, 3, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::ps_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::qpu_id"], [2, 1, 1, "_CPPv4N5cudaq6pauli1E", "cudaq::pauli1"], [2, 3, 1, "_CPPv4N5cudaq6pauli16pauli1ERKNSt6vectorIN5cudaq4realEEE", "cudaq::pauli1::pauli1"], [2, 4, 1, "_CPPv4N5cudaq6pauli16pauli1ERKNSt6vectorIN5cudaq4realEEE", "cudaq::pauli1::pauli1::p"], [2, 1, 1, "_CPPv4N5cudaq6pauli2E", "cudaq::pauli2"], [2, 3, 1, "_CPPv4N5cudaq6pauli26pauli2ERKNSt6vectorIN5cudaq4realEEE", "cudaq::pauli2::pauli2"], [2, 4, 1, "_CPPv4N5cudaq6pauli26pauli2ERKNSt6vectorIN5cudaq4realEEE", "cudaq::pauli2::pauli2::p"], [2, 1, 1, "_CPPv4N5cudaq13phase_dampingE", "cudaq::phase_damping"], [2, 1, 1, "_CPPv4N5cudaq18phase_flip_channelE", "cudaq::phase_flip_channel"], [2, 1, 1, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE", "cudaq::qreg"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE", "cudaq::qreg::Levels"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE", "cudaq::qreg::N"], [2, 3, 1, "_CPPv4N5cudaq4qreg4backENSt6size_tE", "cudaq::qreg::back"], [2, 3, 1, "_CPPv4N5cudaq4qreg4backEv", "cudaq::qreg::back"], [2, 4, 1, "_CPPv4N5cudaq4qreg4backENSt6size_tE", "cudaq::qreg::back::count"], [2, 3, 1, "_CPPv4N5cudaq4qreg5beginEv", "cudaq::qreg::begin"], [2, 3, 1, "_CPPv4N5cudaq4qreg5clearEv", "cudaq::qreg::clear"], [2, 3, 1, "_CPPv4N5cudaq4qreg5frontENSt6size_tE", "cudaq::qreg::front"], [2, 3, 1, "_CPPv4N5cudaq4qreg5frontEv", "cudaq::qreg::front"], [2, 4, 1, "_CPPv4N5cudaq4qreg5frontENSt6size_tE", "cudaq::qreg::front::count"], [2, 3, 1, "_CPPv4N5cudaq4qregixEKNSt6size_tE", "cudaq::qreg::operator[]"], [2, 4, 1, "_CPPv4N5cudaq4qregixEKNSt6size_tE", "cudaq::qreg::operator[]::idx"], [2, 3, 1, "_CPPv4NK5cudaq4qreg4sizeEv", "cudaq::qreg::size"], [2, 3, 1, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE", "cudaq::qreg::slice"], [2, 4, 1, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE", "cudaq::qreg::slice::size"], [2, 4, 1, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE", "cudaq::qreg::slice::start"], [2, 0, 1, "_CPPv4N5cudaq4qreg10value_typeE", "cudaq::qreg::value_type"], [2, 1, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE", "cudaq::qspan"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE", "cudaq::qspan::Levels"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE", "cudaq::qspan::N"], [2, 1, 1, "_CPPv4N5cudaq16quantum_platformE", "cudaq::quantum_platform"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform11clear_shotsEv", "cudaq::quantum_platform::clear_shots"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12connectivityEv", "cudaq::quantum_platform::connectivity"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask", "cudaq::quantum_platform::enqueueAsyncTask"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE", "cudaq::quantum_platform::enqueueAsyncTask"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE", "cudaq::quantum_platform::enqueueAsyncTask::f"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask", "cudaq::quantum_platform::enqueueAsyncTask::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE", "cudaq::quantum_platform::enqueueAsyncTask::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask", "cudaq::quantum_platform::enqueueAsyncTask::t"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12getLogStreamEv", "cudaq::quantum_platform::getLogStream"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform15get_current_qpuEv", "cudaq::quantum_platform::get_current_qpu"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform12get_exec_ctxEv", "cudaq::quantum_platform::get_exec_ctx"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9get_noiseEv", "cudaq::quantum_platform::get_noise"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsENSt6size_tE", "cudaq::quantum_platform::get_num_qubits"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsEv", "cudaq::quantum_platform::get_num_qubits"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsENSt6size_tE", "cudaq::quantum_platform::get_num_qubits::qpu_id"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform23get_remote_capabilitiesEKNSt6size_tE", "cudaq::quantum_platform::get_remote_capabilities"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform23get_remote_capabilitiesEKNSt6size_tE", "cudaq::quantum_platform::get_remote_capabilities::qpuId"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9get_shotsEv", "cudaq::quantum_platform::get_shots"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform11is_emulatedEKNSt6size_tE", "cudaq::quantum_platform::is_emulated"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform11is_emulatedEKNSt6size_tE", "cudaq::quantum_platform::is_emulated::qpuId"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9is_remoteEKNSt6size_tE", "cudaq::quantum_platform::is_remote"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9is_remoteEKNSt6size_tE", "cudaq::quantum_platform::is_remote::qpuId"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform12is_simulatorEKNSt6size_tE", "cudaq::quantum_platform::is_simulator"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform12is_simulatorEKNSt6size_tE", "cudaq::quantum_platform::is_simulator::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::H"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::gradient"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::kernelArgs"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::kernelName"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::n_params"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::optimizer"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::shots"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14list_platformsEv", "cudaq::quantum_platform::list_platforms"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform4nameEv", "cudaq::quantum_platform::name"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform8num_qpusEv", "cudaq::quantum_platform::num_qpus"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform15onRandomSeedSetENSt6size_tE", "cudaq::quantum_platform::onRandomSeedSet"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform15onRandomSeedSetENSt6size_tE", "cudaq::quantum_platform::onRandomSeedSet::seed"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14resetLogStreamEv", "cudaq::quantum_platform::resetLogStream"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14reset_exec_ctxENSt6size_tE", "cudaq::quantum_platform::reset_exec_ctx"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform14reset_exec_ctxENSt6size_tE", "cudaq::quantum_platform::reset_exec_ctx::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform11reset_noiseEv", "cudaq::quantum_platform::reset_noise"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12setLogStreamERNSt7ostreamE", "cudaq::quantum_platform::setLogStream"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform12setLogStreamERNSt7ostreamE", "cudaq::quantum_platform::setLogStream::logStream"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform16setTargetBackendERKNSt6stringE", "cudaq::quantum_platform::setTargetBackend"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16setTargetBackendERKNSt6stringE", "cudaq::quantum_platform::setTargetBackend::name"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform15set_current_qpuEKNSt6size_tE", "cudaq::quantum_platform::set_current_qpu"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform15set_current_qpuEKNSt6size_tE", "cudaq::quantum_platform::set_current_qpu::device_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE", "cudaq::quantum_platform::set_exec_ctx"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE", "cudaq::quantum_platform::set_exec_ctx::ctx"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE", "cudaq::quantum_platform::set_exec_ctx::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9set_noiseEPK11noise_model", "cudaq::quantum_platform::set_noise"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9set_noiseEPK11noise_model", "cudaq::quantum_platform::set_noise::model"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9set_shotsEi", "cudaq::quantum_platform::set_shots"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9set_shotsEi", "cudaq::quantum_platform::set_shots::numShots"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform29supports_conditional_feedbackEKNSt6size_tE", "cudaq::quantum_platform::supports_conditional_feedback"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform29supports_conditional_feedbackEKNSt6size_tE", "cudaq::quantum_platform::supports_conditional_feedback::qpu_id"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform30supports_explicit_measurementsEKNSt6size_tE", "cudaq::quantum_platform::supports_explicit_measurements"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform30supports_explicit_measurementsEKNSt6size_tE", "cudaq::quantum_platform::supports_explicit_measurements::qpu_id"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform26supports_task_distributionEv", "cudaq::quantum_platform::supports_task_distribution"], [2, 0, 1, "_CPPv4N5cudaq5qubitE", "cudaq::qubit"], [2, 1, 1, "_CPPv4I_NSt6size_tEEN5cudaq5quditE", "cudaq::qudit"], [2, 2, 1, "_CPPv4I_NSt6size_tEEN5cudaq5quditE", "cudaq::qudit::Levels"], [2, 3, 1, "_CPPv4N5cudaq5qudit5quditEv", "cudaq::qudit::qudit"], [2, 1, 1, "_CPPv4I_NSt6size_tEEN5cudaq7qvectorE", "cudaq::qvector"], [2, 2, 1, "_CPPv4I_NSt6size_tEEN5cudaq7qvectorE", "cudaq::qvector::Levels"], [2, 3, 1, "_CPPv4N5cudaq7qvector4backENSt6size_tE", "cudaq::qvector::back"], [2, 3, 1, "_CPPv4N5cudaq7qvector4backEv", "cudaq::qvector::back"], [2, 4, 1, "_CPPv4N5cudaq7qvector4backENSt6size_tE", "cudaq::qvector::back::count"], [2, 3, 1, "_CPPv4N5cudaq7qvector5beginEv", "cudaq::qvector::begin"], [2, 3, 1, "_CPPv4N5cudaq7qvector5clearEv", "cudaq::qvector::clear"], [2, 3, 1, "_CPPv4N5cudaq7qvector3endEv", "cudaq::qvector::end"], [2, 3, 1, "_CPPv4N5cudaq7qvector5frontENSt6size_tE", "cudaq::qvector::front"], [2, 3, 1, "_CPPv4N5cudaq7qvector5frontEv", "cudaq::qvector::front"], [2, 4, 1, "_CPPv4N5cudaq7qvector5frontENSt6size_tE", "cudaq::qvector::front::count"], [2, 3, 1, "_CPPv4N5cudaq7qvectoraSERK7qvector", "cudaq::qvector::operator="], [2, 3, 1, "_CPPv4N5cudaq7qvectorixEKNSt6size_tE", "cudaq::qvector::operator[]"], [2, 4, 1, "_CPPv4N5cudaq7qvectorixEKNSt6size_tE", "cudaq::qvector::operator[]::idx"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorENSt6size_tE", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERK5state", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERK7qvector", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERR7qvector", "cudaq::qvector::qvector"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorENSt6size_tE", "cudaq::qvector::qvector::size"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorERK5state", "cudaq::qvector::qvector::state"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb", "cudaq::qvector::qvector::validate"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb", "cudaq::qvector::qvector::vector"], [2, 3, 1, "_CPPv4NK5cudaq7qvector4sizeEv", "cudaq::qvector::size"], [2, 3, 1, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE", "cudaq::qvector::slice"], [2, 4, 1, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE", "cudaq::qvector::slice::size"], [2, 4, 1, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE", "cudaq::qvector::slice::start"], [2, 0, 1, "_CPPv4N5cudaq7qvector10value_typeE", "cudaq::qvector::value_type"], [2, 1, 1, "_CPPv4I_NSt6size_tEEN5cudaq5qviewE", "cudaq::qview"], [2, 2, 1, "_CPPv4I_NSt6size_tEEN5cudaq5qviewE", "cudaq::qview::Levels"], [2, 0, 1, "_CPPv4N5cudaq5qview10value_typeE", "cudaq::qview::value_type"], [2, 3, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType", "cudaq::range"], [2, 3, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range"], [2, 3, 1, "_CPPv4N5cudaq5rangeENSt6size_tE", "cudaq::range"], [2, 2, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType", "cudaq::range::ElementType"], [2, 2, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::ElementType"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType", "cudaq::range::N"], [2, 4, 1, "_CPPv4N5cudaq5rangeENSt6size_tE", "cudaq::range::N"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::start"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::step"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::stop"], [2, 0, 1, "_CPPv4N5cudaq4realE", "cudaq::real"], [2, 0, 1, "_CPPv4N5cudaq8registryE", "cudaq::registry"], [2, 1, 1, "_CPPv4I0EN5cudaq8registry14RegisteredTypeE", "cudaq::registry::RegisteredType"], [2, 2, 1, "_CPPv4I0EN5cudaq8registry14RegisteredTypeE", "cudaq::registry::RegisteredType::T"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::QuantumKernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::options"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::shots"], [2, 1, 1, "_CPPv4N5cudaq14sample_optionsE", "cudaq::sample_options"], [2, 1, 1, "_CPPv4N5cudaq13sample_resultE", "cudaq::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResultb", "cudaq::sample_result::append"], [2, 4, 1, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResultb", "cudaq::sample_result::append::concatenate"], [2, 4, 1, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResultb", "cudaq::sample_result::append::result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result5beginEv", "cudaq::sample_result::begin"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result5beginEv", "cudaq::sample_result::begin"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result6cbeginEv", "cudaq::sample_result::cbegin"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result4cendEv", "cudaq::sample_result::cend"], [2, 3, 1, "_CPPv4N5cudaq13sample_result5clearEv", "cudaq::sample_result::clear"], [2, 3, 1, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::count"], [2, 4, 1, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::count::bitString"], [2, 4, 1, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::count::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::sample_result::deserialize"], [2, 4, 1, "_CPPv4N5cudaq13sample_result11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::sample_result::deserialize::data"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result4dumpERNSt7ostreamE", "cudaq::sample_result::dump"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result4dumpEv", "cudaq::sample_result::dump"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result4dumpERNSt7ostreamE", "cudaq::sample_result::dump::os"], [2, 3, 1, "_CPPv4N5cudaq13sample_result3endEv", "cudaq::sample_result::end"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result3endEv", "cudaq::sample_result::end"], [2, 3, 1, "_CPPv4N5cudaq13sample_result9exp_val_zEKNSt11string_viewE", "cudaq::sample_result::exp_val_z"], [2, 4, 1, "_CPPv4N5cudaq13sample_result9exp_val_zEKNSt11string_viewE", "cudaq::sample_result::exp_val_z::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result11expectationEKNSt11string_viewE", "cudaq::sample_result::expectation"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result11expectationEKNSt11string_viewE", "cudaq::sample_result::expectation::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal"], [2, 3, 1, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::marginalIndices"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::marginalIndices"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::registerName"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result15get_total_shotsEv", "cudaq::sample_result::get_total_shots"], [2, 3, 1, "_CPPv4N5cudaq13sample_result15has_even_parityENSt11string_viewE", "cudaq::sample_result::has_even_parity"], [2, 4, 1, "_CPPv4N5cudaq13sample_result15has_even_parityENSt11string_viewE", "cudaq::sample_result::has_even_parity::bitString"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result15has_expectationEKNSt11string_viewE", "cudaq::sample_result::has_expectation"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result15has_expectationEKNSt11string_viewE", "cudaq::sample_result::has_expectation::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13most_probableEKNSt11string_viewE", "cudaq::sample_result::most_probable"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13most_probableEKNSt11string_viewE", "cudaq::sample_result::most_probable::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_resultpLERK13sample_result", "cudaq::sample_result::operator+="], [2, 4, 1, "_CPPv4N5cudaq13sample_resultpLERK13sample_result", "cudaq::sample_result::operator+=::other"], [2, 3, 1, "_CPPv4N5cudaq13sample_resultaSER13sample_result", "cudaq::sample_result::operator="], [2, 3, 1, "_CPPv4N5cudaq13sample_resultaSERR13sample_result", "cudaq::sample_result::operator="], [2, 4, 1, "_CPPv4N5cudaq13sample_resultaSER13sample_result", "cudaq::sample_result::operator=::counts"], [2, 4, 1, "_CPPv4N5cudaq13sample_resultaSERR13sample_result", "cudaq::sample_result::operator=::counts"], [2, 3, 1, "_CPPv4NK5cudaq13sample_resulteqERK13sample_result", "cudaq::sample_result::operator=="], [2, 4, 1, "_CPPv4NK5cudaq13sample_resulteqERK13sample_result", "cudaq::sample_result::operator==::counts"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::probability"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::probability::bitString"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::probability::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result14register_namesEv", "cudaq::sample_result::register_names"], [2, 3, 1, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::reorder"], [2, 4, 1, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::reorder::index"], [2, 4, 1, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::reorder::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultER15ExecutionResult", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERK13sample_result", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERR13sample_result", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERR15ExecutionResult", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultEv", "cudaq::sample_result::sample_result"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result::preComputedExp"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultER15ExecutionResult", "cudaq::sample_result::sample_result::result"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultERR15ExecutionResult", "cudaq::sample_result::sample_result::result"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultERNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result::results"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result::results"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result9serializeEv", "cudaq::sample_result::serialize"], [2, 3, 1, "_CPPv4N5cudaq13sample_result4sizeEKNSt11string_viewE", "cudaq::sample_result::size"], [2, 4, 1, "_CPPv4N5cudaq13sample_result4sizeEKNSt11string_viewE", "cudaq::sample_result::size::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result6to_mapEKNSt11string_viewE", "cudaq::sample_result::to_map"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result6to_mapEKNSt11string_viewE", "cudaq::sample_result::to_map::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_resultD0Ev", "cudaq::sample_result::~sample_result"], [2, 3, 1, "_CPPv4N5cudaq9set_noiseERKN5cudaq11noise_modelE", "cudaq::set_noise"], [2, 4, 1, "_CPPv4N5cudaq9set_noiseERKN5cudaq11noise_modelE", "cudaq::set_noise::model"], [2, 3, 1, "_CPPv4N5cudaq15set_random_seedENSt6size_tE", "cudaq::set_random_seed"], [2, 4, 1, "_CPPv4N5cudaq15set_random_seedENSt6size_tE", "cudaq::set_random_seed::seed"], [2, 6, 1, "_CPPv4N5cudaq20simulation_precisionE", "cudaq::simulation_precision"], [2, 7, 1, "_CPPv4N5cudaq20simulation_precision4fp32E", "cudaq::simulation_precision::fp32"], [2, 7, 1, "_CPPv4N5cudaq20simulation_precision4fp64E", "cudaq::simulation_precision::fp64"], [2, 1, 1, "_CPPv4N5cudaq7spin_opE", "cudaq::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op5beginEv", "cudaq::spin_op::begin"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op5beginEv", "cudaq::spin_op::begin"], [2, 0, 1, "_CPPv4N5cudaq7spin_op12csr_spmatrixE", "cudaq::spin_op::csr_spmatrix"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op16distribute_termsENSt6size_tE", "cudaq::spin_op::distribute_terms"], [2, 4, 1, "_CPPv4NK5cudaq7spin_op16distribute_termsENSt6size_tE", "cudaq::spin_op::distribute_terms::numChunks"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op4dumpEv", "cudaq::spin_op::dump"], [2, 3, 1, "_CPPv4N5cudaq7spin_op3endEv", "cudaq::spin_op::end"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op3endEv", "cudaq::spin_op::end"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op14for_each_pauliERRNSt8functionIFv5pauliNSt6size_tEEEE", "cudaq::spin_op::for_each_pauli"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op13for_each_termERRNSt8functionIFvR7spin_opEEE", "cudaq::spin_op::for_each_term"], [2, 3, 1, "_CPPv4N5cudaq7spin_op9from_wordERKNSt6stringE", "cudaq::spin_op::from_word"], [2, 4, 1, "_CPPv4N5cudaq7spin_op9from_wordERKNSt6stringE", "cudaq::spin_op::from_word::pauliWord"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op21getDataRepresentationEv", "cudaq::spin_op::getDataRepresentation"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op12getDataTupleEv", "cudaq::spin_op::getDataTuple"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op15get_coefficientEv", "cudaq::spin_op::get_coefficient"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op12get_raw_dataEv", "cudaq::spin_op::get_raw_data"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op11is_identityEv", "cudaq::spin_op::is_identity"], [2, 1, 1, "_CPPv4I0EN5cudaq7spin_op8iteratorE", "cudaq::spin_op::iterator"], [2, 2, 1, "_CPPv4I0EN5cudaq7spin_op8iteratorE", "cudaq::spin_op::iterator::QualifiedSpinOp"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op10num_qubitsEv", "cudaq::spin_op::num_qubits"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op9num_termsEv", "cudaq::spin_op::num_terms"], [2, 3, 1, "_CPPv4N5cudaq7spin_opmLEKNSt7complexIdEE", "cudaq::spin_op::operator*="], [2, 3, 1, "_CPPv4N5cudaq7spin_opmLEKd", "cudaq::spin_op::operator*="], [2, 3, 1, "_CPPv4N5cudaq7spin_opmLERK7spin_op", "cudaq::spin_op::operator*="], [2, 4, 1, "_CPPv4N5cudaq7spin_opmLEKNSt7complexIdEE", "cudaq::spin_op::operator*=::v"], [2, 4, 1, "_CPPv4N5cudaq7spin_opmLEKd", "cudaq::spin_op::operator*=::v"], [2, 4, 1, "_CPPv4N5cudaq7spin_opmLERK7spin_op", "cudaq::spin_op::operator*=::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_oppLERK7spin_op", "cudaq::spin_op::operator+="], [2, 4, 1, "_CPPv4N5cudaq7spin_oppLERK7spin_op", "cudaq::spin_op::operator+=::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_opmIERK7spin_op", "cudaq::spin_op::operator-="], [2, 4, 1, "_CPPv4N5cudaq7spin_opmIERK7spin_op", "cudaq::spin_op::operator-=::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_opaSERK7spin_op", "cudaq::spin_op::operator="], [2, 3, 1, "_CPPv4NK5cudaq7spin_opeqERK7spin_op", "cudaq::spin_op::operator=="], [2, 4, 1, "_CPPv4NK5cudaq7spin_opeqERK7spin_op", "cudaq::spin_op::operator==::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random"], [2, 4, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random::nQubits"], [2, 4, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random::nTerms"], [2, 4, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random::seed"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opENSt6size_tE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERK7spin_op", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt13unordered_mapI12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opEv", "cudaq::spin_op::spin_op"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt13unordered_mapI12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op::_terms"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE", "cudaq::spin_op::spin_op::bsf"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE", "cudaq::spin_op::spin_op::coeff"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE", "cudaq::spin_op::spin_op::coeff"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE", "cudaq::spin_op::spin_op::coeffs"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE", "cudaq::spin_op::spin_op::data_rep"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE", "cudaq::spin_op::spin_op::id"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE", "cudaq::spin_op::spin_op::nQubits"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opENSt6size_tE", "cudaq::spin_op::spin_op::numQubits"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERK7spin_op", "cudaq::spin_op::spin_op::o"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE", "cudaq::spin_op::spin_op::term"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op::termData"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op::termData"], [2, 0, 1, "_CPPv4N5cudaq7spin_op12spin_op_termE", "cudaq::spin_op::spin_op_term"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op9to_matrixEv", "cudaq::spin_op::to_matrix"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op16to_sparse_matrixEv", "cudaq::spin_op::to_sparse_matrix"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op9to_stringEb", "cudaq::spin_op::to_string"], [2, 4, 1, "_CPPv4NK5cudaq7spin_op9to_stringEb", "cudaq::spin_op::to_string::printCoefficients"], [2, 3, 1, "_CPPv4N5cudaq7spin_opD0Ev", "cudaq::spin_op::~spin_op"], [2, 1, 1, "_CPPv4N5cudaq5stateE", "cudaq::state"], [2, 3, 1, "_CPPv4N5cudaq5state9amplitudeERKNSt6vectorIiEE", "cudaq::state::amplitude"], [2, 4, 1, "_CPPv4N5cudaq5state9amplitudeERKNSt6vectorIiEE", "cudaq::state::amplitude::basisState"], [2, 3, 1, "_CPPv4N5cudaq5state10amplitudesERKNSt6vectorINSt6vectorIiEEEE", "cudaq::state::amplitudes"], [2, 4, 1, "_CPPv4N5cudaq5state10amplitudesERKNSt6vectorINSt6vectorIiEEEE", "cudaq::state::amplitudes::basisStates"], [2, 3, 1, "_CPPv4NK5cudaq5state4dumpERNSt7ostreamE", "cudaq::state::dump"], [2, 3, 1, "_CPPv4NK5cudaq5state4dumpEv", "cudaq::state::dump"], [2, 4, 1, "_CPPv4NK5cudaq5state4dumpERNSt7ostreamE", "cudaq::state::dump::os"], [2, 3, 1, "_CPPv4N5cudaq5state9from_dataERK10state_data", "cudaq::state::from_data"], [2, 4, 1, "_CPPv4N5cudaq5state9from_dataERK10state_data", "cudaq::state::from_data::data"], [2, 3, 1, "_CPPv4NK5cudaq5state14get_num_qubitsEv", "cudaq::state::get_num_qubits"], [2, 3, 1, "_CPPv4NK5cudaq5state15get_num_tensorsEv", "cudaq::state::get_num_tensors"], [2, 3, 1, "_CPPv4NK5cudaq5state13get_precisionEv", "cudaq::state::get_precision"], [2, 3, 1, "_CPPv4NK5cudaq5state10get_tensorENSt6size_tE", "cudaq::state::get_tensor"], [2, 4, 1, "_CPPv4NK5cudaq5state10get_tensorENSt6size_tE", "cudaq::state::get_tensor::tensorIdx"], [2, 3, 1, "_CPPv4NK5cudaq5state11get_tensorsEv", "cudaq::state::get_tensors"], [2, 3, 1, "_CPPv4NK5cudaq5state9is_on_gpuEv", "cudaq::state::is_on_gpu"], [2, 3, 1, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE", "cudaq::state::operator()"], [2, 3, 1, "_CPPv4NK5cudaq5stateclERKNSt16initializer_listINSt6size_tEEENSt6size_tE", "cudaq::state::operator()"], [2, 4, 1, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE", "cudaq::state::operator()::idx"], [2, 4, 1, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE", "cudaq::state::operator()::jdx"], [2, 4, 1, "_CPPv4NK5cudaq5stateclERKNSt16initializer_listINSt6size_tEEENSt6size_tE", "cudaq::state::operator()::tensorIdx"], [2, 3, 1, "_CPPv4N5cudaq5stateaSERR5state", "cudaq::state::operator="], [2, 4, 1, "_CPPv4N5cudaq5stateaSERR5state", "cudaq::state::operator=::other"], [2, 3, 1, "_CPPv4NK5cudaq5stateixENSt6size_tE", "cudaq::state::operator[]"], [2, 4, 1, "_CPPv4NK5cudaq5stateixENSt6size_tE", "cudaq::state::operator[]::idx"], [2, 3, 1, "_CPPv4N5cudaq5state7overlapERK5state", "cudaq::state::overlap"], [2, 4, 1, "_CPPv4N5cudaq5state7overlapERK5state", "cudaq::state::overlap::other"], [2, 3, 1, "_CPPv4N5cudaq5state5stateEP15SimulationState", "cudaq::state::state"], [2, 3, 1, "_CPPv4N5cudaq5state5stateERK5state", "cudaq::state::state"], [2, 4, 1, "_CPPv4N5cudaq5state5stateERK5state", "cudaq::state::state::other"], [2, 4, 1, "_CPPv4N5cudaq5state5stateEP15SimulationState", "cudaq::state::state::ptrToOwn"], [2, 3, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host"], [2, 2, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host::ScalarType"], [2, 4, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host::hostPtr"], [2, 4, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host::numElements"], [2, 0, 1, "_CPPv4N5cudaq10state_dataE", "cudaq::state_data"], [2, 0, 1, "_CPPv4N5cudaq6tensorE", "cudaq::tensor"], [2, 3, 1, "_CPPv4N5cudaq11unset_noiseEv", "cudaq::unset_noise"], [2, 1, 1, "_CPPv4N5cudaq7x_errorE", "cudaq::x_error"], [2, 1, 1, "_CPPv4N5cudaq7y_errorE", "cudaq::y_error"], [2, 1, 1, "_CPPv4N5cudaq7z_errorE", "cudaq::z_error"], [2, 1, 1, "_CPPv4N5nvqir18MPSSimulationStateE", "nvqir::MPSSimulationState"], [2, 1, 1, "_CPPv4N5nvqir24TensorNetSimulationStateE", "nvqir::TensorNetSimulationState"], [3, 8, 0, "-", "cudaq"]], "cudaq": [[3, 9, 1, "", "AmplitudeDampingChannel"], [3, 9, 1, "", "AsyncEvolveResult"], [3, 9, 1, "", "AsyncObserveResult"], [3, 9, 1, "", "AsyncSampleResult"], [3, 9, 1, "", "AsyncStateResult"], [3, 9, 1, "", "BitFlipChannel"], [3, 9, 1, "", "ComplexMatrix"], [3, 9, 1, "", "Depolarization1"], [3, 9, 1, "", "Depolarization2"], [3, 9, 1, "", "DepolarizationChannel"], [3, 9, 1, "", "EvolveResult"], [3, 11, 1, "", "Kernel"], [3, 9, 1, "", "KrausChannel"], [3, 9, 1, "", "KrausOperator"], [3, 9, 1, "", "NoiseModel"], [3, 9, 1, "", "ObserveResult"], [3, 9, 1, "", "OptimizationResult"], [3, 9, 1, "", "Pauli1"], [3, 9, 1, "", "Pauli2"], [3, 9, 1, "", "PhaseDamping"], [3, 9, 1, "", "PhaseFlipChannel"], [3, 9, 1, "", "PyKernel"], [3, 9, 1, "", "PyKernelDecorator"], [3, 9, 1, "", "QuakeValue"], [3, 9, 1, "", "SampleResult"], [3, 9, 1, "", "Schedule"], [3, 9, 1, "", "SimulationPrecision"], [3, 9, 1, "", "SpinOperator"], [3, 9, 1, "", "State"], [3, 9, 1, "", "Target"], [3, 9, 1, "", "Tensor"], [3, 9, 1, "", "XError"], [3, 9, 1, "", "YError"], [3, 9, 1, "", "ZError"], [3, 13, 1, "", "draw"], [3, 13, 1, "", "evolve"], [3, 13, 1, "", "evolve_async"], [3, 13, 1, "", "get_state"], [3, 13, 1, "", "get_state_async"], [3, 13, 1, "", "get_target"], [3, 13, 1, "", "get_targets"], [3, 13, 1, "", "has_target"], [3, 10, 1, "", "initialize_cudaq"], [3, 13, 1, "", "kernel"], [3, 13, 1, "", "make_kernel"], [3, 10, 1, "", "num_available_gpus"], [3, 13, 1, "", "observe"], [3, 13, 1, "", "observe_async"], [3, 11, 1, "", "qreg"], [3, 9, 1, "", "qubit"], [3, 9, 1, "", "qvector"], [3, 13, 1, "", "reset_target"], [3, 13, 1, "", "sample"], [3, 13, 1, "", "sample_async"], [3, 13, 1, "", "set_noise"], [3, 10, 1, "", "set_random_seed"], [3, 13, 1, "", "set_target"], [3, 13, 1, "", "translate"], [3, 13, 1, "", "unset_noise"], [3, 13, 1, "", "vqe"]], "cudaq.AmplitudeDampingChannel": [[3, 10, 1, "", "__init__"]], "cudaq.AsyncEvolveResult": [[3, 10, 1, "", "get"]], "cudaq.AsyncObserveResult": [[3, 10, 1, "", "get"]], "cudaq.AsyncSampleResult": [[3, 10, 1, "", "get"]], "cudaq.AsyncStateResult": [[3, 10, 1, "", "get"]], "cudaq.BitFlipChannel": [[3, 10, 1, "", "__init__"]], "cudaq.ComplexMatrix": [[3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "__str__"], [3, 10, 1, "", "minimal_eigenvalue"], [3, 10, 1, "", "num_columns"], [3, 10, 1, "", "num_rows"], [3, 10, 1, "", "to_numpy"]], "cudaq.DepolarizationChannel": [[3, 10, 1, "", "__init__"]], "cudaq.EvolveResult": [[3, 10, 1, "", "expectation_values"], [3, 10, 1, "", "final_expectation_values"], [3, 10, 1, "", "final_state"], [3, 10, 1, "", "intermediate_states"]], "cudaq.KrausChannel": [[3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "append"]], "cudaq.KrausOperator": [[3, 12, 1, "", "col_count"], [3, 12, 1, "", "row_count"]], "cudaq.NoiseModel": [[3, 10, 1, "", "__init__"], [3, 10, 1, "", "add_all_qubit_channel"], [3, 10, 1, "", "add_channel"], [3, 10, 1, "", "get_channels"]], "cudaq.ObserveResult": [[3, 10, 1, "", "counts"], [3, 10, 1, "", "dump"], [3, 10, 1, "", "expectation"], [3, 10, 1, "", "expectation_z"], [3, 10, 1, "", "get_spin"]], "cudaq.PhaseFlipChannel": [[3, 10, 1, "", "__init__"]], "cudaq.PyKernel": [[3, 11, 1, "", "argument_count"], [3, 11, 1, "", "arguments"], [3, 11, 1, "", "name"]], "cudaq.PyKernelDecorator": [[3, 10, 1, "", "__call__"], [3, 10, 1, "", "__str__"], [3, 10, 1, "", "compile"], [3, 10, 1, "", "extract_c_function_pointer"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "merge_kernel"], [3, 10, 1, "", "synthesize_callable_arguments"], [3, 10, 1, "", "to_json"], [3, 10, 1, "", "type_to_str"]], "cudaq.QuakeValue": [[3, 10, 1, "", "__add__"], [3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "__mul__"], [3, 10, 1, "", "__neg__"], [3, 10, 1, "", "__radd__"], [3, 10, 1, "", "__rmul__"], [3, 10, 1, "", "__rsub__"], [3, 10, 1, "", "__sub__"], [3, 10, 1, "", "slice"]], "cudaq.SampleResult": [[3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "__iter__"], [3, 10, 1, "", "__len__"], [3, 10, 1, "", "clear"], [3, 10, 1, "", "count"], [3, 10, 1, "", "deserialize"], [3, 10, 1, "", "dump"], [3, 10, 1, "", "expectation"], [3, 10, 1, "", "expectation_z"], [3, 10, 1, "", "get_marginal_counts"], [3, 10, 1, "", "get_register_counts"], [3, 10, 1, "", "get_sequential_data"], [3, 10, 1, "", "get_total_shots"], [3, 10, 1, "", "items"], [3, 10, 1, "", "most_probable"], [3, 10, 1, "", "probability"], [3, 11, 1, "", "register_names"], [3, 10, 1, "", "serialize"], [3, 10, 1, "", "values"]], "cudaq.SimulationPrecision": [[3, 12, 1, "", "name"]], "cudaq.State": [[3, 10, 1, "", "amplitude"], [3, 10, 1, "", "amplitudes"], [3, 10, 1, "", "dump"], [3, 10, 1, "", "from_data"], [3, 10, 1, "", "getTensor"], [3, 10, 1, "", "getTensors"], [3, 10, 1, "", "is_on_gpu"], [3, 10, 1, "", "num_qubits"], [3, 10, 1, "", "overlap"]], "cudaq.Target": [[3, 12, 1, "", "description"], [3, 10, 1, "", "get_precision"], [3, 10, 1, "", "is_emulated"], [3, 10, 1, "", "is_remote"], [3, 12, 1, "", "name"], [3, 10, 1, "", "num_qpus"], [3, 12, 1, "", "platform"], [3, 12, 1, "", "simulator"]], "cudaq.gradients": [[3, 9, 1, "", "CentralDifference"], [3, 9, 1, "", "ForwardDifference"], [3, 9, 1, "", "ParameterShift"], [3, 9, 1, "", "gradient"]], "cudaq.gradients.CentralDifference": [[3, 10, 1, "", "compute"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "to_json"]], "cudaq.gradients.ForwardDifference": [[3, 10, 1, "", "compute"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "to_json"]], "cudaq.gradients.ParameterShift": [[3, 10, 1, "", "compute"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "to_json"]], "cudaq.mpi": [[3, 10, 1, "", "all_gather"], [3, 10, 1, "", "broadcast"], [3, 10, 1, "", "finalize"], [3, 10, 1, "", "initialize"], [3, 10, 1, "", "is_initialized"], [3, 10, 1, "", "num_ranks"], [3, 10, 1, "", "rank"]], "cudaq.operator.cudm_state": [[3, 9, 1, "", "CuDensityMatState"], [3, 13, 1, "", "to_cupy_array"]], "cudaq.operator.cudm_state.CuDensityMatState": [[3, 10, 1, "", "try_init_state"]], "cudaq.operator.definitions": [[3, 9, 1, "", "SpinOperator"]], "cudaq.operator.expressions": [[3, 9, 1, "", "ElementaryOperator"], [3, 9, 1, "", "OperatorSum"], [3, 9, 1, "", "ProductOperator"], [3, 9, 1, "", "RydbergHamiltonian"], [3, 9, 1, "", "ScalarOperator"]], "cudaq.operator.expressions.ElementaryOperator": [[3, 10, 1, "", "define"]], "cudaq.operator.expressions.RydbergHamiltonian": [[3, 10, 1, "", "__init__"]], "cudaq.operator.helpers": [[3, 9, 1, "", "InitialState"]], "cudaq.operator.integrator": [[3, 9, 1, "", "BaseIntegrator"]], "cudaq.optimizers": [[3, 9, 1, "", "COBYLA"], [3, 9, 1, "", "GradientDescent"], [3, 9, 1, "", "LBFGS"], [3, 9, 1, "", "NelderMead"], [3, 9, 1, "", "optimizer"]], "cudaq.optimizers.COBYLA": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.optimizers.GradientDescent": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.optimizers.LBFGS": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.optimizers.NelderMead": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.orca": [[3, 10, 1, "", "sample"]], "cudaq.spin": [[3, 13, 1, "", "i"], [3, 13, 1, "", "x"], [3, 13, 1, "", "y"], [3, 13, 1, "", "z"]]}, "objtypes": {"0": "cpp:type", "1": "cpp:class", "2": "cpp:templateParam", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:member", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:module", "9": "py:class", "10": "py:method", "11": "py:attribute", "12": "py:property", "13": "py:function"}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "module", "Python module"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "property", "Python property"], "13": ["py", "function", "Python function"]}, "titleterms": {"code": [0, 13, 89], "document": 0, "cuda": [0, 2, 3, 5, 9, 10, 13, 16, 25, 26, 27, 32, 35, 36, 37, 38, 53, 54, 55, 69, 70, 71, 72, 73, 76, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95], "q": [0, 2, 3, 5, 9, 10, 13, 16, 25, 26, 27, 32, 35, 36, 37, 38, 53, 54, 55, 69, 70, 71, 72, 73, 76, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95], "api": [0, 2, 3], "quantum": [1, 2, 5, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 26, 28, 38, 41, 42, 45, 46, 47, 48, 50, 57, 59, 64, 66, 78, 82], "oper": [1, 2, 4, 31, 45, 46, 58], "unitari": [1, 25, 65], "qubit": [1, 22, 34, 45, 50], "x": 1, "y": 1, "z": 1, "h": 1, "r1": 1, "rx": 1, "ry": 1, "rz": 1, "": [1, 8, 16, 23, 41, 86], "t": 1, "swap": 1, "u3": 1, "adjoint": 1, "control": [1, 39, 80], "measur": [1, 11, 23, 29, 66, 82], "mz": 1, "mx": 1, "my": 1, "user": 1, "defin": 1, "custom": 1, "photon": [1, 62, 66], "qudit": [1, 50], "creat": [1, 20, 85], "annihil": 1, "phase_shift": 1, "beam_splitt": 1, "c": [2, 56, 87, 93], "common": [2, 47], "nois": [2, 22, 65], "model": [2, 13, 16, 20, 22, 25, 43], "kernel": [2, 3, 23, 25, 34, 40, 42, 64, 66, 72, 75], "builder": 2, "algorithm": [2, 4, 5, 7, 8, 15, 20, 23, 38, 41], "platform": [2, 48], "util": 2, "namespac": [2, 44], "python": [3, 56, 87, 89], "program": [3, 41, 47, 71, 73], "construct": [3, 13, 16, 31], "execut": [3, 28, 57, 58, 66, 81], "dynam": [3, 58], "backend": [3, 54, 55, 57, 64, 69, 81], "configur": 3, "data": [3, 10], "type": [3, 50], "optim": [3, 26, 32, 33, 38], "gradient": [3, 27, 32, 38], "noisi": [3, 16, 30, 65], "simul": [3, 4, 10, 13, 16, 24, 25, 30, 57, 58, 64, 65, 66, 67, 68, 69, 74, 86, 89], "mpi": [3, 87, 89], "submodul": 3, "orca": [3, 62, 66, 78], "adapt": 4, "qaoa": [4, 9, 10, 17], "input": 4, "The": [4, 7, 23, 24, 27], "problem": [4, 9, 23, 24], "hamiltonian": [4, 13, 81], "h_c": 4, "max": [4, 17], "cut": [4, 17], "graph": 4, "th": 4, "pool": [4, 81], "a_j": 4, "commut": 4, "begin": 4, "iter": [4, 41], "bernstein": 5, "vazirani": 5, "classic": [5, 12, 23], "case": [5, 23], "implement": [5, 7, 9, 10, 27], "cost": 6, "minim": 6, "deutsch": [7, 8], "jozsa": 7, "theori": 7, "xor": 8, "oplu": 8, "oracl": 8, "phase": [8, 23, 41], "parallel": [8, 27, 28, 32, 64, 77, 81], "molecular": 9, "dock": 9, "via": [9, 89], "dc": 9, "set": [9, 16, 56, 60, 61, 62, 63], "up": [9, 16], "divis": 10, "cluster": 10, "With": [10, 23, 24], "coreset": 10, "us": [10, 11, 12, 13, 25, 26, 27, 50, 78, 89, 91], "preprocess": 10, "function": [10, 38], "scale": 10, "edg": 11, "detect": 11, "imag": [11, 89], "probabl": [11, 13], "encod": [11, 16], "qpie": 11, "below": 11, "we": 11, "show": 11, "how": 11, "an": [11, 27, 93], "cudaq": [11, 38, 45, 46, 50], "flexibl": 11, "represent": 11, "frqi": 11, "build": [11, 71, 75, 87], "state": [11, 13, 15, 16, 28, 41, 64, 66, 67, 68, 82], "retriev": 11, "hadamard": [11, 12], "qhed": 11, "post": 11, "process": 11, "test": 12, "determin": [12, 15, 23], "krylov": [12, 15], "subspac": [12, 15], "decomposit": [12, 13], "matrix": [12, 15, 22, 65, 68], "element": [12, 15], "numer": [12, 58], "result": [12, 23], "refer": [12, 13, 15], "sampl": [12, 28, 38, 41, 73], "perform": [12, 16, 33], "multi": [12, 15, 58, 64, 67, 68, 80, 81], "gpu": [12, 57, 58, 67, 68, 73, 81, 89], "evalu": [12, 25], "qksd": 12, "diagon": 12, "spin": [13, 31], "introduct": [13, 52, 79, 89], "heisenberg": 13, "transvers": 13, "field": 13, "Ising": 13, "tfim": 13, "time": [13, 40, 58], "evolut": 13, "trotter": [13, 24], "kei": 13, "step": [13, 89], "1": 13, "prepar": [13, 41], "initi": 13, "2": [13, 16, 50], "3": 13, "comput": [13, 15, 24, 47, 61, 62, 63, 77, 78, 82, 89], "overlap": 13, "4": [13, 16, 23], "5": [13, 23], "6": 13, "extract": 13, "coeffici": 13, "pauli": [13, 31], "word": [13, 31], "main": 13, "visual": [13, 34], "over": [13, 81], "expect": [13, 65, 77], "valu": [13, 65, 77], "addit": [13, 65, 67, 89], "inform": 13, "relev": [13, 27], "hybrid": 14, "neural": 14, "network": [14, 68], "h_2": 15, "molecul": [15, 20], "setup": [15, 24, 25], "ground": [15, 16], "energi": [15, 41], "anderson": 16, "impur": 16, "solver": 16, "infleqt": [16, 61, 78], "sqale": 16, "logic": [16, 29], "variat": [16, 26], "eigensolv": [16, 26], "vqe": [16, 27], "qx": 16, "circuit": [16, 20, 25, 27, 28, 29, 49, 69, 81, 86], "submiss": [16, 56], "decod": 16, "workflow": [16, 81], "run": [16, 24, 73], "aim": 16, "hardwar": [16, 59, 78], "fourier": [18, 23], "transform": [18, 20, 23], "revisit": 18, "telepor": 19, "teleport": 19, "explain": 19, "instal": [20, 27, 87, 88, 89, 94], "exampl": [20, 41, 76], "self": 20, "attent": 20, "usag": 20, "train": 20, "gener": [20, 25, 52, 65], "map": 20, "volum": 21, "readout": 22, "error": 22, "mitig": 22, "invers": [22, 23], "confus": 22, "from": [22, 23, 56, 81, 87, 93], "singl": [22, 67], "k": 22, "local": [22, 89], "matric": 22, "full": 22, "factor": 23, "integ": 23, "shor": 23, "solv": 23, "order": 23, "find": 23, "modular": 23, "exponenti": [23, 31], "n": [23, 50], "21": 23, "postscript": 23, "magnet": 24, "suzuki": 24, "approxim": 24, "compil": [25, 85, 93], "diffus": 25, "pipelin": 25, "load": [25, 27], "convert": 25, "tensor": [25, 68], "compar": 25, "choos": 25, "you": 25, "need": 25, "integr": [26, 58, 92, 93], "third": [26, 32, 93], "parti": [26, 32, 93], "activ": 27, "space": 27, "gate": [27, 33, 66, 82], "fusion": [27, 33], "basic": [27, 70], "packag": 27, "paramet": [27, 32, 41], "shift": [27, 32], "larger": 27, "observ": [28, 38, 73], "get": [28, 89], "techniqu": 28, "async": 28, "mid": 29, "condit": 29, "built": [32, 89], "content": [35, 70, 88], "releas": 36, "languag": 37, "specif": [37, 51], "primit": 38, "deprec": [38, 50], "move": 38, "librari": [38, 87, 93], "flow": 39, "just": 40, "creation": 40, "hello": 41, "world": 41, "simpl": 41, "bell": 41, "ghz": 41, "estim": 41, "deuteron": 41, "bind": 41, "sweep": 41, "grover": 41, "machin": 43, "standard": 44, "intrins": 45, "spin_op": 46, "pattern": 47, "action": [47, 86], "uncomput": 47, "sub": 49, "synthesi": [49, 80], "level": 50, "contain": [50, 89], "qview": 50, "qvector": 50, "qarrai": 50, "qspan": 50, "instead": 50, "qreg": 50, "quak": 52, "dialect": 52, "motiv": 52, "applic": 53, "cloud": [55, 57, 89], "amazon": [56, 78], "braket": [56, 78], "credenti": [56, 60, 61, 62, 63], "nvidia": 57, "quick": [57, 58, 94], "start": [57, 58, 89, 94], "select": 57, "multipl": [57, 64, 77, 81], "qpu": [57, 59, 64, 81], "asynchron": 57, "faq": 57, "builtin": 58, "depend": [58, 87, 89], "node": [58, 67, 68], "ion": 60, "trap": 60, "ionq": [60, 78], "submit": [60, 61, 62, 63], "quantinuum": [60, 78], "neutral": 61, "atom": 61, "pasqal": [61, 78], "quera": [61, 78], "about": 61, "aquila": 61, "superconduct": 63, "anyon": 63, "technologi": 63, "iqm": [63, 78], "oqc": [63, 78], "distribut": [64, 89], "mode": [64, 67], "other": [64, 81, 92], "support": [64, 65, 67, 87, 89], "argument": 64, "serial": 64, "access": [64, 89], "trajectori": 65, "mixtur": 65, "v": [65, 89], "channel": 65, "calcul": 65, "batch": [65, 81], "environ": [65, 67], "variabl": [65, 67], "option": [65, 67], "densiti": 65, "stim": 65, "openmp": 66, "cpu": [66, 67, 81], "onli": 66, "101": [66, 82], "vector": 67, "product": 68, "fermioniq": 68, "In": [69, 89], "your": [71, 73, 85, 94], "first": [71, 73], "what": 72, "i": 72, "troubleshoot": 74, "debug": 74, "verbos": 74, "output": 74, "across": 77, "processor": 77, "provid": 78, "memori": 81, "mgpu": 81, "mqpu": 81, "term": 81, "remot": [81, 89], "work": 83, "ir": 83, "extend": [84, 86], "own": 85, "pass": 85, "new": 86, "circuitsimul": 86, "requir": [86, 89], "subtyp": 86, "method": 86, "overrid": 86, "let": 86, "see": 86, "thi": 86, "sourc": 87, "prerequisit": 87, "toolchain": [87, 93], "host": [87, 89], "runtim": 87, "guid": 88, "docker": 89, "known": 89, "blackwel": 89, "issu": 89, "singular": 89, "wheel": 89, "pre": 89, "binari": [89, 93], "develop": 89, "connect": 89, "tunnel": 89, "ssh": 89, "dgx": 89, "jupyterlab": 89, "tool": [89, 92], "pypi": 89, "updat": 89, "compat": 89, "system": 89, "next": 89, "cmake": 90, "project": 91, "softwar": 92, "call": 93, "interfac": 93, "between": 93, "differ": 93, "valid": 94, "version": 95}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Common Quantum Programming Patterns": [[47, "common-quantum-programming-patterns"]], "Compute-Action-Uncompute": [[47, "compute-action-uncompute"]], "Quantum Kernels": [[42, "quantum-kernels"]], "Quantum Intrinsic Operations": [[45, "quantum-intrinsic-operations"]], "Operations on cudaq::qubit": [[45, "operations-on-cudaq-qubit"]], "Namespace and Standard": [[44, "namespace-and-standard"]], "Machine Model": [[43, "machine-model"]], "Quantum Operators": [[46, "quantum-operators"]], "cudaq::spin_op": [[46, "cudaq-spin-op"]], "CUDA-Q Applications": [[53, "cuda-q-applications"]], "Specifications": [[51, "specifications"]], "Sub-circuit Synthesis": [[49, "sub-circuit-synthesis"]], "Quantum Types": [[50, "quantum-types"]], "cudaq::qudit<Levels>": [[50, "cudaq-qudit-levels"]], "cudaq::qubit": [[50, "cudaq-qubit"]], "Quantum Containers": [[50, "quantum-containers"]], "cudaq::qview<Levels = 2>": [[50, "cudaq-qview-levels-2"]], "cudaq::qvector<Levels = 2>": [[50, "cudaq-qvector-levels-2"]], "cudaq::qarray<N, Levels = 2>": [[50, "cudaq-qarray-n-levels-2"]], "cudaq::qspan<N, Levels> (Deprecated. Use cudaq::qview<Levels> instead.)": [[50, "cudaq-qspan-n-levels-deprecated-use-cudaq-qview-levels-instead"]], "cudaq::qreg<N, Levels> (Deprecated. Use cudaq::qvector<Levels> instead.)": [[50, "cudaq-qreg-n-levels-deprecated-use-cudaq-qvector-levels-instead"]], "Quantum Platform": [[48, "quantum-platform"]], "Quake Dialect": [[52, "quake-dialect"]], "General Introduction": [[52, "general-introduction"]], "Motivation": [[52, "motivation"]], "What is a CUDA-Q kernel?": [[72, "what-is-a-cuda-q-kernel"]], "Computing Expectation Values": [[77, "computing-expectation-values"]], "Parallelizing across Multiple Processors": [[77, "parallelizing-across-multiple-processors"]], "Running your first CUDA-Q Program": [[73, "running-your-first-cuda-q-program"]], "Sample": [[73, "sample"], [28, "Sample"]], "Observe": [[73, "observe"], [28, "Observe"]], "Running on a GPU": [[73, "running-on-a-gpu"]], "Troubleshooting": [[74, "troubleshooting"]], "Debugging and Verbose Simulation Output": [[74, "debugging-and-verbose-simulation-output"]], "CUDA-Q by Example": [[76, "cuda-q-by-example"]], "Building Kernels": [[75, "building-kernels"]], "Introduction": [[79, "introduction"], [89, "introduction"], [13, "Introduction"]], "Working with the CUDA-Q IR": [[83, "working-with-the-cuda-q-ir"]], "Using Quantum Hardware Providers": [[78, "using-quantum-hardware-providers"]], "Amazon Braket": [[78, "amazon-braket"], [56, "amazon-braket"]], "Infleqtion": [[78, "infleqtion"], [61, "infleqtion"]], "IonQ": [[78, "ionq"], [60, "ionq"]], "IQM": [[78, "iqm"], [63, "iqm"]], "OQC": [[78, "oqc"], [63, "oqc"]], "ORCA Computing": [[78, "orca-computing"], [62, "orca-computing"]], "Pasqal": [[78, "pasqal"], [61, "pasqal"]], "Quantinuum": [[78, "quantinuum"], [60, "quantinuum"]], "QuEra Computing": [[78, "quera-computing"], [61, "quera-computing"]], "Multi-control Synthesis": [[80, "multi-control-synthesis"]], "Multi-GPU Workflows": [[81, "multi-gpu-workflows"]], "From CPU to GPU": [[81, "from-cpu-to-gpu"]], "Pooling the memory of multiple GPUs (mgpu)": [[81, "pooling-the-memory-of-multiple-gpus-mgpu"]], "Parallel execution over multiple QPUs (mqpu)": [[81, "parallel-execution-over-multiple-qpus-mqpu"]], "Batching Hamiltonian Terms": [[81, "batching-hamiltonian-terms"]], "Circuit Batching": [[81, "circuit-batching"]], "Multi-QPU + Other Backends (remote-mqpu)": [[81, "multi-qpu-other-backends-remote-mqpu"]], "Quantum Computing 101": [[82, "quantum-computing-101"]], "Quantum States": [[82, "quantum-states"]], "Quantum Gates": [[82, "quantum-gates"]], "Measurements": [[82, "measurements"], [66, "measurements"], [29, "Measurements"]], "Quick Start": [[94, "quick-start"], [57, "quick-start"], [58, "quick-start"]], "Install CUDA-Q": [[94, "install-cuda-q"]], "Validate your Installation": [[94, "validate-your-installation"]], "CUDA-Q and CMake": [[90, "cuda-q-and-cmake"]], "Using CUDA and CUDA-Q in a Project": [[91, "using-cuda-and-cuda-q-in-a-project"]], "Integration with other Software Tools": [[92, "integration-with-other-software-tools"]], "Integrating with Third-Party Libraries": [[93, "integrating-with-third-party-libraries"]], "Calling a CUDA-Q library from C++": [[93, "calling-a-cuda-q-library-from-c"]], "Calling an C++ library from CUDA-Q": [[93, "calling-an-c-library-from-cuda-q"]], "Interfacing between binaries compiled with a different toolchains": [[93, "interfacing-between-binaries-compiled-with-a-different-toolchains"]], "CUDA-Q Versions": [[95, "cuda-q-versions"]], "CUDA-Q Releases": [[36, "cuda-q-releases"]], "Just-in-Time Kernel Creation": [[40, "just-in-time-kernel-creation"]], "Language Specification": [[37, "language-specification"]], "CUDA-Q": [[37, null], [35, "cuda-q"]], "Example Programs": [[41, "example-programs"]], "Hello World - Simple Bell State": [[41, "hello-world-simple-bell-state"]], "GHZ State Preparation and Sampling": [[41, "ghz-state-preparation-and-sampling"]], "Quantum Phase Estimation": [[41, "quantum-phase-estimation"]], "Deuteron Binding Energy Parameter Sweep": [[41, "deuteron-binding-energy-parameter-sweep"]], "Grover\u2019s Algorithm": [[41, "grover-s-algorithm"]], "Iterative Phase Estimation": [[41, "iterative-phase-estimation"]], "Control Flow": [[39, "control-flow"]], "Quantum Algorithmic Primitives": [[38, "quantum-algorithmic-primitives"]], "cudaq::sample": [[38, "cudaq-sample"]], "cudaq::observe": [[38, "cudaq-observe"]], "cudaq::optimizer (deprecated, functionality moved to CUDA-Q libraries)": [[38, "cudaq-optimizer-deprecated-functionality-moved-to-cuda-q-libraries"]], "cudaq::gradient (deprecated, functionality moved to CUDA-Q libraries)": [[38, "cudaq-gradient-deprecated-functionality-moved-to-cuda-q-libraries"]], "Quantum Hardware (QPU)": [[59, "quantum-hardware-qpu"]], "CUDA-Q Cloud Backends": [[55, "cuda-q-cloud-backends"]], "NVIDIA Quantum Cloud": [[57, "nvidia-quantum-cloud"]], "Simulator Backend Selection": [[57, "simulator-backend-selection"]], "Multiple GPUs": [[57, "multiple-gpus"]], "Simulator Backends": [[57, "id1"]], "Multiple QPUs Asynchronous Execution": [[57, "multiple-qpus-asynchronous-execution"]], "FAQ": [[57, "faq"]], "Setting Credentials": [[56, "setting-credentials"], [63, "setting-credentials"], [63, "id1"], [63, "id3"], [61, "setting-credentials"], [61, "pasqal-backend"], [61, "quera-backend"], [60, "setting-credentials"], [60, "quantinuum-backend"], [62, "setting-credentials"]], "Submission from C++": [[56, "submission-from-c"]], "Submission from Python": [[56, "submission-from-python"]], "CUDA-Q Backends": [[54, "cuda-q-backends"]], "Dynamics Simulation": [[58, "dynamics-simulation"]], "Operator": [[58, "operator"]], "Builtin Operators": [[58, "id1"]], "Time-Dependent Dynamics": [[58, "time-dependent-dynamics"]], "Numerical Integrators": [[58, "numerical-integrators"], [58, "id2"]], "Multi-GPU Multi-Node Execution": [[58, "multi-gpu-multi-node-execution"]], "Building your first CUDA-Q Program": [[71, "building-your-first-cuda-q-program"]], "CUDA-Q Circuit Simulation Backends": [[69, "cuda-q-circuit-simulation-backends"]], "Simulators In CUDA-Q": [[69, "id1"]], "State Vector Simulators": [[67, "state-vector-simulators"]], "CPU": [[67, "cpu"]], "Single-GPU": [[67, "single-gpu"]], "Environment variable options supported in single-GPU mode": [[67, "id1"]], "Multi-node multi-GPU": [[67, "multi-node-multi-gpu"], [68, "multi-node-multi-gpu"]], "Additional environment variable options for multi-node multi-GPU mode": [[67, "id2"]], "Tensor Network Simulators": [[68, "tensor-network-simulators"]], "Matrix product state": [[68, "matrix-product-state"]], "Fermioniq": [[68, "fermioniq"]], "Photonics Simulators": [[66, "photonics-simulators"]], "orca-photonics": [[66, "orca-photonics"]], "OpenMP CPU-only": [[66, "openmp-cpu-only"]], "Photonics 101": [[66, "photonics-101"]], "Quantum Photonic States": [[66, "quantum-photonic-states"]], "Quantum Photonics Gates": [[66, "quantum-photonics-gates"]], "Executing Photonics Kernels": [[66, "executing-photonics-kernels"]], "CUDA-Q Basics": [[70, "cuda-q-basics"]], "Contents": [[70, null], [88, null], [35, null]], "Noisy Simulators": [[65, "noisy-simulators"]], "Trajectory Noisy Simulation": [[65, "trajectory-noisy-simulation"]], "Unitary Mixture vs. General Noise Channel": [[65, "unitary-mixture-vs-general-noise-channel"]], "Noise Channel Support": [[65, "id2"]], "Trajectory Expectation Value Calculation": [[65, "trajectory-expectation-value-calculation"]], "Batched Trajectory Simulation": [[65, "batched-trajectory-simulation"]], "Additional environment variable options for trajectory simulation": [[65, "id3"]], "Density Matrix": [[65, "density-matrix"]], "Stim": [[65, "stim"]], "Superconducting": [[63, "superconducting"]], "Anyon Technologies/Anyon Computing": [[63, "anyon-technologies-anyon-computing"]], "Submitting": [[63, "submitting"], [63, "id2"], [63, "id4"], [61, "submitting"], [61, "id2"], [61, "id4"], [60, "submitting"], [60, "id2"], [62, "submitting"]], "Multiple QPUs": [[64, "multiple-qpus"]], "Simulate Multiple QPUs in Parallel": [[64, "simulate-multiple-qpus-in-parallel"]], "Parallel distribution mode": [[64, "parallel-distribution-mode"]], "Multi-QPU + Other Backends": [[64, "multi-qpu-other-backends"]], "Supported Kernel Arguments": [[64, "supported-kernel-arguments"]], "Kernel argument serialization": [[64, "id3"]], "Accessing Simulated Quantum State": [[64, "accessing-simulated-quantum-state"]], "Neutral Atom": [[61, "neutral-atom"]], "About Aquila": [[61, "about-aquila"]], "Ion Trap": [[60, "ion-trap"]], "Photonic": [[62, "photonic"]], "Local Installation": [[89, "local-installation"]], "Docker": [[89, "docker"]], "Known Blackwell Issues": [[89, "known-blackwell-issues"]], "Singularity": [[89, "singularity"]], "Python wheels": [[89, "python-wheels"]], "Pre-built binaries": [[89, "pre-built-binaries"]], "Development with VS Code": [[89, "development-with-vs-code"]], "Using a Docker container": [[89, "using-a-docker-container"]], "Using a Singularity container": [[89, "using-a-singularity-container"]], "Connecting to a Remote Host": [[89, "connecting-to-a-remote-host"]], "Developing with Remote Tunnels": [[89, "developing-with-remote-tunnels"]], "Remote Access via SSH": [[89, "remote-access-via-ssh"]], "DGX Cloud": [[89, "dgx-cloud"]], "Get Started": [[89, "get-started"]], "Use JupyterLab": [[89, "use-jupyterlab"]], "Use VS Code": [[89, "use-vs-code"]], "Additional CUDA Tools": [[89, "additional-cuda-tools"]], "Installation via PyPI": [[89, "installation-via-pypi"]], "Installation In Container Images": [[89, "installation-in-container-images"]], "Installing Pre-built Binaries": [[89, "installing-pre-built-binaries"]], "Distributed Computing with MPI": [[89, "distributed-computing-with-mpi"]], "Updating CUDA-Q": [[89, "updating-cuda-q"]], "Dependencies and Compatibility": [[89, "dependencies-and-compatibility"]], "Supported Systems": [[89, "id11"]], "Requirements for GPU Simulation": [[89, "id12"]], "Next Steps": [[89, "next-steps"]], "Extending CUDA-Q": [[84, "extending-cuda-q"]], "Extending CUDA-Q with a new Simulator": [[86, "extending-cuda-q-with-a-new-simulator"]], "CircuitSimulator": [[86, "circuitsimulator"]], "Required Circuit Simulator Subtype Method Overrides": [[86, "id1"]], "Let\u2019s see this in action": [[86, "let-s-see-this-in-action"]], "Installation from Source": [[87, "installation-from-source"]], "Prerequisites": [[87, "prerequisites"]], "Build Dependencies": [[87, "build-dependencies"]], "CUDA": [[87, "cuda"]], "Toolchain": [[87, "toolchain"]], "Building CUDA-Q": [[87, "building-cuda-q"]], "Python Support": [[87, "python-support"]], "C++ Support": [[87, "c-support"]], "Installation on the Host": [[87, "installation-on-the-host"]], "CUDA Runtime Libraries": [[87, "cuda-runtime-libraries"]], "MPI": [[87, "mpi"]], "Installation Guide": [[88, "installation-guide"]], "Create your own CUDA-Q Compiler Pass": [[85, "create-your-own-cuda-q-compiler-pass"]], "Optimizers and Gradients": [[32, "Optimizers-and-Gradients"]], "Built in CUDA-Q Optimizers and Gradients": [[32, "Built-in-CUDA-Q-Optimizers-and-Gradients"]], "Third-Party Optimizers": [[32, "Third-Party-Optimizers"]], "Parallel Parameter Shift Gradients": [[32, "Parallel-Parameter-Shift-Gradients"], [27, "Parallel-Parameter-Shift-Gradients"]], "Visualization": [[34, "Visualization"]], "Qubit Visualization": [[34, "Qubit-Visualization"]], "Kernel Visualization": [[34, "Kernel-Visualization"]], "Operators": [[31, "Operators"], [2, "operators"]], "Constructing Spin Operators": [[31, "Constructing-Spin-Operators"]], "Pauli Words and Exponentiating Pauli Words": [[31, "Pauli-Words-and-Exponentiating-Pauli-Words"]], "Noisy Simulation": [[30, "Noisy-Simulation"], [3, "noisy-simulation"]], "Optimizing Performance": [[33, "Optimizing-Performance"]], "Gate Fusion": [[33, "Gate-Fusion"]], "Cost Minimization": [[6, "Cost-Minimization"]], "Deutsch\u2019s Algorithm": [[8, "Deutsch's-Algorithm"]], "XOR \\oplus": [[8, "XOR-\\oplus"]], "Quantum oracles": [[8, "Quantum-oracles"]], "Phase oracle": [[8, "Phase-oracle"]], "Quantum parallelism": [[8, "Quantum-parallelism"]], "Deutsch\u2019s Algorithm:": [[8, "Deutsch's-Algorithm:"]], "Quantum edge detection": [[11, "Quantum-edge-detection"]], "Image": [[11, "Image"]], "Quantum Probability Image Encoding (QPIE):": [[11, "Quantum-Probability-Image-Encoding-(QPIE):"]], "Below we show how to encode an image using QPIE in cudaq.": [[11, "Below-we-show-how-to-encode-an-image-using-QPIE-in-cudaq."]], "Flexible Representation of Quantum Images (FRQI):": [[11, "Flexible-Representation-of-Quantum-Images-(FRQI):"]], "Building the FRQI State:": [[11, "Building-the-FRQI-State:"]], "Measurement and Image Retrieval:": [[11, "Measurement-and-Image-Retrieval:"]], "Quantum Hadamard Edge Detection (QHED)": [[11, "Quantum-Hadamard-Edge-Detection-(QHED)"]], "Post-processing": [[11, "Post-processing"]], "Divisive Clustering With Coresets Using CUDA-Q": [[10, "Divisive-Clustering-With-Coresets-Using-CUDA-Q"]], "Data preprocessing": [[10, "Data-preprocessing"]], "Quantum functions": [[10, "Quantum-functions"]], "Divisive Clustering Function": [[10, "Divisive-Clustering-Function"]], "QAOA Implementation": [[10, "QAOA-Implementation"]], "Scaling simulations with CUDA-Q": [[10, "Scaling-simulations-with-CUDA-Q"]], "Molecular docking via DC-QAOA": [[9, "Molecular-docking-via-DC-QAOA"]], "Setting up the Molecular Docking Problem": [[9, "Setting-up-the-Molecular-Docking-Problem"]], "CUDA-Q Implementation": [[9, "CUDA-Q-Implementation"]], "The Deutsch-Jozsa Algorithm": [[7, "The-Deutsch-Jozsa-Algorithm"]], "The Theory": [[7, "The-Theory"]], "The Algorithm Implementation": [[7, "The-Algorithm-Implementation"]], "Multi-reference Quantum Krylov Algorithm - H_2 Molecule": [[15, "Multi-reference-Quantum-Krylov-Algorithm---H_2-Molecule"]], "Setup": [[15, "Setup"]], "Computing the matrix elements": [[15, "Computing-the-matrix-elements"]], "Determining the ground state energy of the subspace": [[15, "Determining-the-ground-state-energy-of-the-subspace"]], "Anderson Impurity Model ground state solver on Infleqtion\u2019s Sqale": [[16, "Anderson-Impurity-Model-ground-state-solver-on-Infleqtion's-Sqale"]], "Performing logical Variational Quantum Eigensolver (VQE) with CUDA-QX": [[16, "Performing-logical-Variational-Quantum-Eigensolver-(VQE)-with-CUDA-QX"]], "Constructing circuits in the [[4,2,2]] encoding": [[16, "Constructing-circuits-in-the-[[4,2,2]]-encoding"]], "Setting up submission and decoding workflow": [[16, "Setting-up-submission-and-decoding-workflow"]], "Running a CUDA-Q noisy simulation": [[16, "Running-a-CUDA-Q-noisy-simulation"]], "Running logical AIM on Infleqtion\u2019s hardware": [[16, "Running-logical-AIM-on-Infleqtion's-hardware"]], "Hybrid Quantum Neural Networks": [[14, "Hybrid-Quantum-Neural-Networks"]], "Using the Hadamard Test to Determine Quantum Krylov Subspace Decomposition Matrix Elements": [[12, "Using-the-Hadamard-Test-to-Determine-Quantum-Krylov-Subspace-Decomposition-Matrix-Elements"]], "Numerical result as a reference:": [[12, "Numerical-result-as-a-reference:"]], "Using Sample to perform the Hadamard test": [[12, "Using-Sample-to-perform-the-Hadamard-test"]], "Multi-GPU evaluation of QKSD matrix elements using the Hadamard Test": [[12, "Multi-GPU-evaluation-of-QKSD-matrix-elements-using-the-Hadamard-Test"]], "Classically Diagonalize the Subspace Matrix": [[12, "Classically-Diagonalize-the-Subspace-Matrix"]], "Max-Cut with QAOA": [[17, "Max-Cut-with-QAOA"]], "Spin-Hamiltonian Simulation Using CUDA-Q": [[13, "Spin-Hamiltonian-Simulation-Using-CUDA-Q"]], "Heisenberg Hamiltonian": [[13, "Heisenberg-Hamiltonian"]], "Transverse Field Ising Model (TFIM)": [[13, "Transverse-Field-Ising-Model-(TFIM)"]], "Time Evolution and Trotter Decomposition": [[13, "Time-Evolution-and-Trotter-Decomposition"]], "Key steps": [[13, "Key-steps"]], "1. Prepare initial state": [[13, "1.-Prepare-initial-state"]], "2. Hamiltonian Trotterization": [[13, "2.-Hamiltonian-Trotterization"]], "3. Compute overlap": [[13, "3.-Compute-overlap"]], "4. Construct Heisenberg Hamiltonian": [[13, "4.-Construct-Heisenberg-Hamiltonian"]], "5. Construct TFIM Hamiltonian": [[13, "5.-Construct-TFIM-Hamiltonian"]], "6. Extract coefficients and Pauli words": [[13, "6.-Extract-coefficients-and-Pauli-words"]], "Main code": [[13, "Main-code"]], "Visualization of probablity over time": [[13, "Visualization-of-probablity-over-time"]], "Expectation value over time:": [[13, "Expectation-value-over-time:"]], "Visualization of expectation over time": [[13, "Visualization-of-expectation-over-time"]], "Additional information": [[13, "Additional-information"]], "Relevant references": [[13, "Relevant-references"]], "Executing Quantum Circuits": [[28, "Executing-Quantum-Circuits"]], "Get state": [[28, "Get-state"]], "Parallelization Techniques": [[28, "Parallelization-Techniques"]], "Observe Async": [[28, "Observe-Async"]], "Sample Async": [[28, "Sample-Async"]], "Get State Async": [[28, "Get-State-Async"]], "VQE with gradients, active spaces, and gate fusion": [[27, "VQE-with-gradients,-active-spaces,-and-gate-fusion"]], "The Basics of VQE": [[27, "The-Basics-of-VQE"]], "Installing/Loading Relevant Packages": [[27, "Installing/Loading-Relevant-Packages"]], "Implementing VQE in CUDA-Q": [[27, "Implementing-VQE-in-CUDA-Q"]], "Using an Active Space": [[27, "Using-an-Active-Space"]], "Gate Fusion for Larger Circuits": [[27, "Gate-Fusion-for-Larger-Circuits"]], "Compiling Unitaries Using Diffusion Models": [[25, "Compiling-Unitaries-Using-Diffusion-Models"]], "Diffusion model pipeline": [[25, "Diffusion-model-pipeline"]], "Setup and compilation": [[25, "Setup-and-compilation"]], "Load model": [[25, "Load-model"]], "Unitary compilation": [[25, "Unitary-compilation"]], "Convert tensors to CUDA-Q": [[25, "Convert-tensors-to-CUDA-Q"]], "Evaluate generated circuits": [[25, "Evaluate-generated-circuits"]], "Simulate kernels": [[25, "Simulate-kernels"]], "Compare unitaries": [[25, "Compare-unitaries"]], "Choosing the circuit you need": [[25, "Choosing-the-circuit-you-need"]], "Variational Quantum Eigensolver": [[26, "Variational-Quantum-Eigensolver"]], "Using CUDA-Q Optimizers": [[26, "Using-CUDA-Q-Optimizers"]], "Integration with Third-Party Optimizers": [[26, "Integration-with-Third-Party-Optimizers"]], "Mid-circuit Measurement and Conditional Logic": [[29, "Mid-circuit-Measurement-and-Conditional-Logic"]], "Computing Magnetization With The Suzuki-Trotter Approximation": [[24, "Computing-Magnetization-With-The-Suzuki-Trotter-Approximation"]], "Problem Setup": [[24, "Problem-Setup"]], "Running the Simulation": [[24, "Running-the-Simulation"]], "Factoring Integers With Shor\u2019s Algorithm": [[23, "Factoring-Integers-With-Shor's-Algorithm"]], "Shor\u2019s algorithm": [[23, "Shor's-algorithm"]], "Solving the order-finding problem classically": [[23, "Solving-the-order-finding-problem-classically"]], "Solving the order-finding problem with a quantum algorithm": [[23, "Solving-the-order-finding-problem-with-a-quantum-algorithm"]], "Inverse quantum Fourier transform": [[23, "Inverse-quantum-Fourier-transform"]], "Quantum kernels for modular exponentiation": [[23, "Quantum-kernels-for-modular-exponentiation"]], "The case N = 21 and a = 5:": [[23, "The-case-N-=-21-and-a-=-5:"]], "The case N = 21 and a = 4:": [[23, "The-case-N-=-21-and-a-=-4:"]], "Determining the order from the measurement results of the phase kernel": [[23, "Determining-the-order-from-the-measurement-results-of-the-phase-kernel"]], "Postscript": [[23, "Postscript"]], "Readout Error Mitigation": [[22, "Readout-Error-Mitigation"]], "Inverse confusion matrix from single-qubit noise model": [[22, "Inverse-confusion-matrix-from-single-qubit-noise-model"]], "Inverse confusion matrix from k local confusion matrices": [[22, "Inverse-confusion-matrix-from-k-local-confusion-matrices"]], "Inverse of full confusion matrix": [[22, "Inverse-of-full-confusion-matrix"]], "Quantum Volume": [[21, "Quantum-Volume"]], "Quantum Transformer": [[20, "Quantum-Transformer"]], "Installation": [[20, "Installation"]], "Algorithm and Example": [[20, "Algorithm-and-Example"]], "Creating the self-attention circuits": [[20, "Creating-the-self-attention-circuits"]], "Usage": [[20, "Usage"]], "Model Training": [[20, "Model-Training"]], "Generating Molecules": [[20, "Generating-Molecules"]], "Attention Maps": [[20, "Attention-Maps"]], "Quantum Fourier Transform": [[18, "Quantum-Fourier-Transform"]], "Quantum Fourier Transform revisited": [[18, "Quantum-Fourier-Transform-revisited"]], "Quantum Teleporation": [[19, "Quantum-Teleporation"]], "Teleportation explained": [[19, "Teleportation-explained"]], "CUDA-Q Python API": [[3, "module-cudaq"]], "Program Construction": [[3, "program-construction"]], "Kernel Execution": [[3, "kernel-execution"]], "Dynamics": [[3, "dynamics"]], "Backend Configuration": [[3, "backend-configuration"]], "Data Types": [[3, "data-types"]], "Optimizers": [[3, "optimizers"]], "Gradients": [[3, "gradients"]], "MPI Submodule": [[3, "mpi-submodule"]], "ORCA Submodule": [[3, "orca-submodule"]], "Code documentation": [[0, "code-documentation"]], "CUDA-Q API": [[0, null]], "Bernstein-Vazirani Algorithm": [[5, "Bernstein-Vazirani-Algorithm"]], "Classical case": [[5, "Classical-case"]], "Quantum case": [[5, "Quantum-case"]], "Implementing in CUDA-Q": [[5, "Implementing-in-CUDA-Q"]], "ADAPT-QAOA algorithm": [[4, "ADAPT-QAOA-algorithm"]], "Simulation input:": [[4, "Simulation-input:"]], "The problem Hamiltonian H_C of the max-cut graph:": [[4, "The-problem-Hamiltonian-H_C-of-the-max-cut-graph:"]], "Th operator pool A_j:": [[4, "Th-operator-pool-A_j:"]], "The commutator [H_C,A_j]:": [[4, "The-commutator-[H_C,A_j]:"]], "Beginning of ADAPT-QAOA iteration:": [[4, "Beginning-of-ADAPT-QAOA-iteration:"]], "CUDA-Q C++ API": [[2, "cuda-q-c-api"]], "Quantum": [[2, "quantum"]], "Common": [[2, "common"]], "Noise Modeling": [[2, "noise-modeling"]], "Kernel Builder": [[2, "kernel-builder"]], "Algorithms": [[2, "algorithms"]], "Platform": [[2, "platform"]], "Utilities": [[2, "utilities"]], "Namespaces": [[2, "namespaces"]], "Quantum Operations": [[1, "quantum-operations"]], "Unitary Operations on Qubits": [[1, "unitary-operations-on-qubits"]], "x": [[1, "x"]], "y": [[1, "y"]], "z": [[1, "z"]], "h": [[1, "h"]], "r1": [[1, "r1"]], "rx": [[1, "rx"]], "ry": [[1, "ry"]], "rz": [[1, "rz"]], "s": [[1, "s"]], "t": [[1, "t"]], "swap": [[1, "swap"]], "u3": [[1, "u3"]], "Adjoint and Controlled Operations": [[1, "adjoint-and-controlled-operations"]], "Measurements on Qubits": [[1, "measurements-on-qubits"]], "mz": [[1, "mz"], [1, "id1"]], "mx": [[1, "mx"]], "my": [[1, "my"]], "User-Defined Custom Operations": [[1, "user-defined-custom-operations"]], "Photonic Operations on Qudits": [[1, "photonic-operations-on-qudits"]], "create": [[1, "create"]], "annihilate": [[1, "annihilate"]], "phase_shift": [[1, "phase-shift"]], "beam_splitter": [[1, "beam-splitter"]]}, "indexentries": {"cudaq (c++ type)": [[2, "_CPPv45cudaq"]], "cudaq::basenvcfsimulatorqpu (c++ class)": [[2, "_CPPv4N5cudaq20BaseNvcfSimulatorQPUE"]], "cudaq::baseremoterestqpu (c++ class)": [[2, "_CPPv4N5cudaq17BaseRemoteRESTQPUE"]], "cudaq::baseremotesimulatorqpu (c++ class)": [[2, "_CPPv4N5cudaq22BaseRemoteSimulatorQPUE"]], "cudaq::cusvstate (c++ class)": [[2, "_CPPv4I0EN5cudaq9CusvStateE"]], "cudaq::executioncontext (c++ class)": [[2, "_CPPv4N5cudaq16ExecutionContextE"]], "cudaq::executioncontext::executioncontext (c++ function)": [[2, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringE"], [2, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE"]], "cudaq::executioncontext::amplitudemaps (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext13amplitudeMapsE"]], "cudaq::executioncontext::asyncexec (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext9asyncExecE"]], "cudaq::executioncontext::asyncresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext11asyncResultE"]], "cudaq::executioncontext::batchiteration (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext14batchIterationE"]], "cudaq::executioncontext::canhandleobserve (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext16canHandleObserveE"]], "cudaq::executioncontext::expectationvalue (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext16expectationValueE"]], "cudaq::executioncontext::explicitmeasurements (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext20explicitMeasurementsE"]], "cudaq::executioncontext::futureresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext12futureResultE"]], "cudaq::executioncontext::hasconditionalsonmeasureresults (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext31hasConditionalsOnMeasureResultsE"]], "cudaq::executioncontext::invocationresultbuffer (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext22invocationResultBufferE"]], "cudaq::executioncontext::kernelname (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext10kernelNameE"]], "cudaq::executioncontext::kerneltrace (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext11kernelTraceE"]], "cudaq::executioncontext::name (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext4nameE"]], "cudaq::executioncontext::noisemodel (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext10noiseModelE"]], "cudaq::executioncontext::numbertrajectories (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext18numberTrajectoriesE"]], "cudaq::executioncontext::optresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext9optResultE"]], "cudaq::executioncontext::overlapcomputestates (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext20overlapComputeStatesE"]], "cudaq::executioncontext::overlapresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext13overlapResultE"]], "cudaq::executioncontext::registernames (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext13registerNamesE"]], "cudaq::executioncontext::reorderidx (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext10reorderIdxE"]], "cudaq::executioncontext::result (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext6resultE"]], "cudaq::executioncontext::shots (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext5shotsE"]], "cudaq::executioncontext::simulationstate (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext15simulationStateE"]], "cudaq::executioncontext::spin (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext4spinE"]], "cudaq::executioncontext::totaliterations (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext15totalIterationsE"]], "cudaq::executionresult (c++ struct)": [[2, "_CPPv4N5cudaq15ExecutionResultE"]], "cudaq::executionresult::executionresult (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionary"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultENSt6stringE"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultERK15ExecutionResult"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEd"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEv"]], "cudaq::executionresult::appendresult (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE"]], "cudaq::executionresult::deserialize (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResult11deserializeERNSt6vectorINSt6size_tEEE"]], "cudaq::executionresult::operator= (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResultaSERK15ExecutionResult"]], "cudaq::executionresult::operator== (c++ function)": [[2, "_CPPv4NK5cudaq15ExecutionResulteqERK15ExecutionResult"]], "cudaq::executionresult::registername (c++ member)": [[2, "_CPPv4N5cudaq15ExecutionResult12registerNameE"]], "cudaq::executionresult::sequentialdata (c++ member)": [[2, "_CPPv4N5cudaq15ExecutionResult14sequentialDataE"]], "cudaq::executionresult::serialize (c++ function)": [[2, "_CPPv4NK5cudaq15ExecutionResult9serializeEv"]], "cudaq::fermioniqbaseqpu (c++ class)": [[2, "_CPPv4N5cudaq16FermioniqBaseQPUE"]], "cudaq::kernelexecutiontask (c++ type)": [[2, "_CPPv4N5cudaq19KernelExecutionTaskE"]], "cudaq::kernelthunkresulttype (c++ struct)": [[2, "_CPPv4N5cudaq21KernelThunkResultTypeE"]], "cudaq::kernelthunktype (c++ type)": [[2, "_CPPv4N5cudaq15KernelThunkTypeE"]], "cudaq::orcaremoterestqpu (c++ class)": [[2, "_CPPv4N5cudaq17OrcaRemoteRESTQPUE"]], "cudaq::pasqalbaseqpu (c++ class)": [[2, "_CPPv4N5cudaq13PasqalBaseQPUE"]], "cudaq::qpu (c++ class)": [[2, "_CPPv4N5cudaq3QPUE"]], "cudaq::qpu::qpu (c++ function)": [[2, "_CPPv4N5cudaq3QPU3QPUENSt6size_tE"], [2, "_CPPv4N5cudaq3QPU3QPUERR3QPU"], [2, "_CPPv4N5cudaq3QPU3QPUEv"]], "cudaq::qpu::enqueue (c++ function)": [[2, "_CPPv4N5cudaq3QPU7enqueueER11QuantumTask"]], "cudaq::qpu::getconnectivity (c++ function)": [[2, "_CPPv4N5cudaq3QPU15getConnectivityEv"]], "cudaq::qpu::getexecutionthreadid (c++ function)": [[2, "_CPPv4NK5cudaq3QPU20getExecutionThreadIdEv"]], "cudaq::qpu::getnumqubits (c++ function)": [[2, "_CPPv4N5cudaq3QPU12getNumQubitsEv"]], "cudaq::qpu::getremotecapabilities (c++ function)": [[2, "_CPPv4NK5cudaq3QPU21getRemoteCapabilitiesEv"]], "cudaq::qpu::isemulated (c++ function)": [[2, "_CPPv4N5cudaq3QPU10isEmulatedEv"]], "cudaq::qpu::issimulator (c++ function)": [[2, "_CPPv4N5cudaq3QPU11isSimulatorEv"]], "cudaq::qpu::launchkernel (c++ function)": [[2, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE"], [2, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE"]], "cudaq::qpu::launchserializedcodeexecution (c++ function)": [[2, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE"]], "cudaq::qpu::onrandomseedset (c++ function)": [[2, "_CPPv4N5cudaq3QPU15onRandomSeedSetENSt6size_tE"]], "cudaq::qpu::resetexecutioncontext (c++ function)": [[2, "_CPPv4N5cudaq3QPU21resetExecutionContextEv"]], "cudaq::qpu::setexecutioncontext (c++ function)": [[2, "_CPPv4N5cudaq3QPU19setExecutionContextEP16ExecutionContext"]], "cudaq::qpu::setid (c++ function)": [[2, "_CPPv4N5cudaq3QPU5setIdENSt6size_tE"]], "cudaq::qpu::setshots (c++ function)": [[2, "_CPPv4N5cudaq3QPU8setShotsEi"]], "cudaq::qpu::supportsconditionalfeedback (c++ function)": [[2, "_CPPv4N5cudaq3QPU27supportsConditionalFeedbackEv"]], "cudaq::qpu::supportsexplicitmeasurements (c++ function)": [[2, "_CPPv4N5cudaq3QPU28supportsExplicitMeasurementsEv"]], "cudaq::qpu::~qpu (c++ function)": [[2, "_CPPv4N5cudaq3QPUD0Ev"]], "cudaq::querabaseqpu (c++ class)": [[2, "_CPPv4N5cudaq12QuEraBaseQPUE"]], "cudaq::quakevalue (c++ class)": [[2, "_CPPv4N5cudaq10QuakeValueE"]], "cudaq::quakevalue::quakevalue (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE"], [2, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd"]], "cudaq::quakevalue::canvalidatenumelements (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue22canValidateNumElementsEv"]], "cudaq::quakevalue::constantsize (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue12constantSizeEv"]], "cudaq::quakevalue::dump (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue4dumpERNSt7ostreamE"], [2, "_CPPv4N5cudaq10QuakeValue4dumpEv"]], "cudaq::quakevalue::getrequiredelements (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue19getRequiredElementsEv"]], "cudaq::quakevalue::getvalue (c++ function)": [[2, "_CPPv4NK5cudaq10QuakeValue8getValueEv"]], "cudaq::quakevalue::inverse (c++ function)": [[2, "_CPPv4NK5cudaq10QuakeValue7inverseEv"]], "cudaq::quakevalue::isstdvec (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue8isStdVecEv"]], "cudaq::quakevalue::operator* (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValuemlE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValuemlEKd"]], "cudaq::quakevalue::operator+ (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValueplE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValueplEKd"], [2, "_CPPv4N5cudaq10QuakeValueplEKi"]], "cudaq::quakevalue::operator- (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValuemiE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValuemiEKd"], [2, "_CPPv4N5cudaq10QuakeValuemiEKi"], [2, "_CPPv4NK5cudaq10QuakeValuemiEv"]], "cudaq::quakevalue::operator/ (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValuedvE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValuedvEKd"]], "cudaq::quakevalue::operator[] (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValueixEKNSt6size_tE"], [2, "_CPPv4N5cudaq10QuakeValueixERK10QuakeValue"]], "cudaq::quakevalue::size (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue4sizeEv"]], "cudaq::quakevalue::slice (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE"]], "cudaq::quantumtask (c++ type)": [[2, "_CPPv4N5cudaq11QuantumTaskE"]], "cudaq::qubitconnectivity (c++ type)": [[2, "_CPPv4N5cudaq17QubitConnectivityE"]], "cudaq::qubitedge (c++ type)": [[2, "_CPPv4N5cudaq9QubitEdgeE"]], "cudaq::remotecapabilities (c++ struct)": [[2, "_CPPv4N5cudaq18RemoteCapabilitiesE"]], "cudaq::remotecapabilities::remotecapabilities (c++ function)": [[2, "_CPPv4N5cudaq18RemoteCapabilities18RemoteCapabilitiesEb"]], "cudaq::remotecapabilities::isremotesimulator (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities17isRemoteSimulatorE"]], "cudaq::remotecapabilities::serializedcodeexec (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities18serializedCodeExecE"]], "cudaq::remotecapabilities::stateoverlap (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities12stateOverlapE"]], "cudaq::remotecapabilities::vqe (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities3vqeE"]], "cudaq::remotesimulationstate (c++ class)": [[2, "_CPPv4N5cudaq21RemoteSimulationStateE"]], "cudaq::resources (c++ class)": [[2, "_CPPv4N5cudaq9ResourcesE"]], "cudaq::serializedcodeexecutioncontext (c++ class)": [[2, "_CPPv4N5cudaq30SerializedCodeExecutionContextE"]], "cudaq::simulationstate (c++ class)": [[2, "_CPPv4N5cudaq15SimulationStateE"]], "cudaq::simulationstate::tensor (c++ struct)": [[2, "_CPPv4N5cudaq15SimulationState6TensorE"]], "cudaq::simulationstate::precision (c++ enum)": [[2, "_CPPv4N5cudaq15SimulationState9precisionE"]], "cudaq::simulationstate::precision::fp32 (c++ enumerator)": [[2, "_CPPv4N5cudaq15SimulationState9precision4fp32E"]], "cudaq::simulationstate::precision::fp64 (c++ enumerator)": [[2, "_CPPv4N5cudaq15SimulationState9precision4fp64E"]], "cudaq::tensorstatedata (c++ type)": [[2, "_CPPv4N5cudaq15TensorStateDataE"]], "cudaq::trace (c++ class)": [[2, "_CPPv4N5cudaq5TraceE"]], "cudaq::amplitude_damping (c++ class)": [[2, "_CPPv4N5cudaq17amplitude_dampingE"]], "cudaq::amplitude_damping_channel (c++ class)": [[2, "_CPPv4N5cudaq25amplitude_damping_channelE"]], "cudaq::async_result (c++ class)": [[2, "_CPPv4I0EN5cudaq12async_resultE"]], "cudaq::async_result::get (c++ function)": [[2, "_CPPv4N5cudaq12async_result3getEv"]], "cudaq::async_sample_result (c++ type)": [[2, "_CPPv4N5cudaq19async_sample_resultE"]], "cudaq::bit_flip_channel (c++ class)": [[2, "_CPPv4N5cudaq16bit_flip_channelE"]], "cudaq::complex (c++ type)": [[2, "_CPPv4N5cudaq7complexE"]], "cudaq::complex_matrix (c++ class)": [[2, "_CPPv4N5cudaq14complex_matrixE"]], "cudaq::complex_matrix::adjoint (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix7adjointEv"]], "cudaq::complex_matrix::dump (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix4dumpERNSt7ostreamE"], [2, "_CPPv4NK5cudaq14complex_matrix4dumpEv"]], "cudaq::complex_matrix::eigenvalues (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix11eigenvaluesEv"]], "cudaq::complex_matrix::eigenvectors (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix12eigenvectorsEv"]], "cudaq::complex_matrix::exponential (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix11exponentialEv"]], "cudaq::complex_matrix::identity (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix8identityEKNSt6size_tE"]], "cudaq::complex_matrix::kronecker (c++ function)": [[2, "_CPPv4I00EN5cudaq14complex_matrix9kroneckerE14complex_matrix8Iterable8Iterable"], [2, "_CPPv4N5cudaq14complex_matrix9kroneckerERK14complex_matrixRK14complex_matrix"]], "cudaq::complex_matrix::minimal_eigenvalue (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix18minimal_eigenvalueEv"]], "cudaq::complex_matrix::operator() (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrixclENSt6size_tENSt6size_tE"], [2, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE"]], "cudaq::complex_matrix::operator* (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrixmlEN14complex_matrix10value_typeERK14complex_matrix"], [2, "_CPPv4N5cudaq14complex_matrixmlERK14complex_matrixRK14complex_matrix"], [2, "_CPPv4N5cudaq14complex_matrixmlERK14complex_matrixRKNSt6vectorIN14complex_matrix10value_typeEEE"]], "cudaq::complex_matrix::operator+ (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrixplERK14complex_matrixRK14complex_matrix"]], "cudaq::complex_matrix::operator- (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrixmiERK14complex_matrixRK14complex_matrix"]], "cudaq::complex_matrix::operator[] (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrixixERKNSt6vectorINSt6size_tEEE"], [2, "_CPPv4NK5cudaq14complex_matrixixERKNSt6vectorINSt6size_tEEE"]], "cudaq::complex_matrix::power (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix5powerEi"]], "cudaq::complex_matrix::set_zero (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix8set_zeroEv"]], "cudaq::complex_matrix::to_string (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix9to_stringEv"]], "cudaq::complex_matrix::value_type (c++ type)": [[2, "_CPPv4N5cudaq14complex_matrix10value_typeE"]], "cudaq::depolarization1 (c++ class)": [[2, "_CPPv4N5cudaq15depolarization1E"]], "cudaq::depolarization2 (c++ class)": [[2, "_CPPv4N5cudaq15depolarization2E"]], "cudaq::depolarization2::depolarization2 (c++ function)": [[2, "_CPPv4N5cudaq15depolarization215depolarization2EK4real"]], "cudaq::depolarization_channel (c++ class)": [[2, "_CPPv4N5cudaq22depolarization_channelE"]], "cudaq::details (c++ type)": [[2, "_CPPv4N5cudaq7detailsE"]], "cudaq::details::kernelbuildertype (c++ class)": [[2, "_CPPv4N5cudaq7details17KernelBuilderTypeE"]], "cudaq::details::kernelbuildertype::kernelbuildertype (c++ function)": [[2, "_CPPv4N5cudaq7details17KernelBuilderType17KernelBuilderTypeERRNSt8functionIFN4mlir4TypeEPN4mlir11MLIRContextEEEE"]], "cudaq::details::kernelbuildertype::create (c++ function)": [[2, "_CPPv4N5cudaq7details17KernelBuilderType6createEPN4mlir11MLIRContextE"]], "cudaq::details::future (c++ class)": [[2, "_CPPv4N5cudaq7details6futureE"]], "cudaq::details::future::future (c++ function)": [[2, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE"], [2, "_CPPv4N5cudaq7details6future6futureERR6future"], [2, "_CPPv4N5cudaq7details6future6futureEv"]], "cudaq::details::kernel_builder_base (c++ class)": [[2, "_CPPv4N5cudaq7details19kernel_builder_baseE"]], "cudaq::details::kernel_builder_base::operator<< (c++ function)": [[2, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base"]], "cudaq::draw (c++ function)": [[2, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args"]], "cudaq::dyn (c++ member)": [[2, "_CPPv4N5cudaq3dynE"]], "cudaq::get_state (c++ function)": [[2, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args"]], "cudaq::gradient (c++ class)": [[2, "_CPPv4N5cudaq8gradientE"]], "cudaq::gradient::clone (c++ function)": [[2, "_CPPv4N5cudaq8gradient5cloneEv"]], "cudaq::gradient::compute (c++ function)": [[2, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradient::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq8gradient8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq8gradient8gradientEv"]], "cudaq::gradient::setargs (c++ function)": [[2, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args"]], "cudaq::gradient::setkernel (c++ function)": [[2, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel"]], "cudaq::gradients::central_difference (c++ class)": [[2, "_CPPv4N5cudaq9gradients18central_differenceE"]], "cudaq::gradients::central_difference::clone (c++ function)": [[2, "_CPPv4N5cudaq9gradients18central_difference5cloneEv"]], "cudaq::gradients::central_difference::compute (c++ function)": [[2, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradients::central_difference::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq9gradients18central_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq9gradients18central_difference8gradientEv"]], "cudaq::gradients::forward_difference (c++ class)": [[2, "_CPPv4N5cudaq9gradients18forward_differenceE"]], "cudaq::gradients::forward_difference::clone (c++ function)": [[2, "_CPPv4N5cudaq9gradients18forward_difference5cloneEv"]], "cudaq::gradients::forward_difference::compute (c++ function)": [[2, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradients::forward_difference::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq9gradients18forward_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq9gradients18forward_difference8gradientEv"]], "cudaq::gradients::parameter_shift (c++ class)": [[2, "_CPPv4N5cudaq9gradients15parameter_shiftE"]], "cudaq::gradients::parameter_shift::clone (c++ function)": [[2, "_CPPv4N5cudaq9gradients15parameter_shift5cloneEv"]], "cudaq::gradients::parameter_shift::compute (c++ function)": [[2, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradients::parameter_shift::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq9gradients15parameter_shift8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq9gradients15parameter_shift8gradientEv"]], "cudaq::kernel_builder (c++ class)": [[2, "_CPPv4IDpEN5cudaq14kernel_builderE"]], "cudaq::kernel_builder::constantval (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder11constantValEd"]], "cudaq::kernel_builder::getarguments (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder12getArgumentsEv"]], "cudaq::kernel_builder::getnumparams (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder12getNumParamsEv"]], "cudaq::kernel_builder::isargstdvec (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder11isArgStdVecENSt6size_tE"]], "cudaq::kernel_builder::kernel_builder (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder14kernel_builderERNSt6vectorIN7details17KernelBuilderTypeEEE"]], "cudaq::kernel_builder::name (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder4nameEv"]], "cudaq::kernel_builder::qalloc (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder6qallocE10QuakeValue"], [2, "_CPPv4N5cudaq14kernel_builder6qallocEKNSt6size_tE"], [2, "_CPPv4N5cudaq14kernel_builder6qallocERNSt6vectorINSt7complexIdEEEE"], [2, "_CPPv4N5cudaq14kernel_builder6qallocEv"]], "cudaq::kernel_builder::swap (c++ function)": [[2, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue"], [2, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue"], [2, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue"]], "cudaq::kraus_channel (c++ class)": [[2, "_CPPv4N5cudaq13kraus_channelE"]], "cudaq::kraus_channel::empty (c++ function)": [[2, "_CPPv4NK5cudaq13kraus_channel5emptyEv"]], "cudaq::kraus_channel::generateunitaryparameters (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channel25generateUnitaryParametersEv"]], "cudaq::kraus_channel::get_ops (c++ function)": [[2, "_CPPv4NK5cudaq13kraus_channel7get_opsEv"]], "cudaq::kraus_channel::is_unitary_mixture (c++ function)": [[2, "_CPPv4NK5cudaq13kraus_channel18is_unitary_mixtureEv"]], "cudaq::kraus_channel::kraus_channel (c++ function)": [[2, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelERK13kraus_channel"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelERKNSt6vectorI8kraus_opEE"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelERRNSt6vectorI8kraus_opEE"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelEv"]], "cudaq::kraus_channel::noise_type (c++ member)": [[2, "_CPPv4N5cudaq13kraus_channel10noise_typeE"]], "cudaq::kraus_channel::operator= (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channelaSERK13kraus_channel"]], "cudaq::kraus_channel::operator[] (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channelixEKNSt6size_tE"]], "cudaq::kraus_channel::parameters (c++ member)": [[2, "_CPPv4N5cudaq13kraus_channel10parametersE"]], "cudaq::kraus_channel::probabilities (c++ member)": [[2, "_CPPv4N5cudaq13kraus_channel13probabilitiesE"]], "cudaq::kraus_channel::push_back (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channel9push_backE8kraus_op"]], "cudaq::kraus_channel::size (c++ function)": [[2, "_CPPv4NK5cudaq13kraus_channel4sizeEv"]], "cudaq::kraus_channel::unitary_ops (c++ member)": [[2, "_CPPv4N5cudaq13kraus_channel11unitary_opsE"]], "cudaq::kraus_op (c++ struct)": [[2, "_CPPv4N5cudaq8kraus_opE"]], "cudaq::kraus_op::adjoint (c++ function)": [[2, "_CPPv4NK5cudaq8kraus_op7adjointEv"]], "cudaq::kraus_op::data (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op4dataE"]], "cudaq::kraus_op::kraus_op (c++ function)": [[2, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE"], [2, "_CPPv4N5cudaq8kraus_op8kraus_opENSt6vectorIN5cudaq7complexEEE"], [2, "_CPPv4N5cudaq8kraus_op8kraus_opERK8kraus_op"]], "cudaq::kraus_op::ncols (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op5nColsE"]], "cudaq::kraus_op::nrows (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op5nRowsE"]], "cudaq::kraus_op::operator= (c++ function)": [[2, "_CPPv4N5cudaq8kraus_opaSERK8kraus_op"]], "cudaq::kraus_op::precision (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op9precisionE"]], "cudaq::mpi (c++ type)": [[2, "_CPPv4N5cudaq3mpiE"]], "cudaq::mpi::all_gather (c++ function)": [[2, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE"], [2, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE"]], "cudaq::mpi::all_reduce (c++ function)": [[2, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction"], [2, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func"]], "cudaq::mpi::broadcast (c++ function)": [[2, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi"], [2, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi"]], "cudaq::mpi::finalize (c++ function)": [[2, "_CPPv4N5cudaq3mpi8finalizeEv"]], "cudaq::mpi::initialize (c++ function)": [[2, "_CPPv4N5cudaq3mpi10initializeEiPPc"], [2, "_CPPv4N5cudaq3mpi10initializeEv"]], "cudaq::mpi::is_initialized (c++ function)": [[2, "_CPPv4N5cudaq3mpi14is_initializedEv"]], "cudaq::mpi::num_ranks (c++ function)": [[2, "_CPPv4N5cudaq3mpi9num_ranksEv"]], "cudaq::mpi::rank (c++ function)": [[2, "_CPPv4N5cudaq3mpi4rankEv"]], "cudaq::noise_model (c++ class)": [[2, "_CPPv4N5cudaq11noise_modelE"]], "cudaq::noise_model::predicatefuncty (c++ type)": [[2, "_CPPv4N5cudaq11noise_model15PredicateFuncTyE"]], "cudaq::noise_model::add_all_qubit_channel (c++ function)": [[2, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli"], [2, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli"]], "cudaq::noise_model::add_channel (c++ function)": [[2, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy"], [2, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel"], [2, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy"], [2, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel"]], "cudaq::noise_model::empty (c++ function)": [[2, "_CPPv4NK5cudaq11noise_model5emptyEv"]], "cudaq::noise_model::get_channels (c++ function)": [[2, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE"], [2, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE"]], "cudaq::noise_model::noise_model (c++ function)": [[2, "_CPPv4N5cudaq11noise_model11noise_modelEv"]], "cudaq::noise_model_type (c++ enum)": [[2, "_CPPv4N5cudaq16noise_model_typeE"]], "cudaq::noise_model_type::amplitude_damping (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type17amplitude_dampingE"]], "cudaq::noise_model_type::amplitude_damping_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type25amplitude_damping_channelE"]], "cudaq::noise_model_type::bit_flip_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type16bit_flip_channelE"]], "cudaq::noise_model_type::depolarization1 (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type15depolarization1E"]], "cudaq::noise_model_type::depolarization2 (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type15depolarization2E"]], "cudaq::noise_model_type::depolarization_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type22depolarization_channelE"]], "cudaq::noise_model_type::pauli1 (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type6pauli1E"]], "cudaq::noise_model_type::pauli2 (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type6pauli2E"]], "cudaq::noise_model_type::phase_damping (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type13phase_dampingE"]], "cudaq::noise_model_type::phase_flip_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type18phase_flip_channelE"]], "cudaq::noise_model_type::unknown (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type7unknownE"]], "cudaq::noise_model_type::x_error (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type7x_errorE"]], "cudaq::noise_model_type::y_error (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type7y_errorE"]], "cudaq::noise_model_type::z_error (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type7z_errorE"]], "cudaq::num_available_gpus (c++ function)": [[2, "_CPPv4N5cudaq18num_available_gpusEv"]], "cudaq::observe (c++ function)": [[2, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args"]], "cudaq::observe_options (c++ struct)": [[2, "_CPPv4N5cudaq15observe_optionsE"]], "cudaq::observe_result (c++ class)": [[2, "_CPPv4N5cudaq14observe_resultE"]], "cudaq::observe_result::counts (c++ function)": [[2, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType"]], "cudaq::observe_result::dump (c++ function)": [[2, "_CPPv4N5cudaq14observe_result4dumpEv"]], "cudaq::observe_result::expectation (c++ function)": [[2, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType"], [2, "_CPPv4N5cudaq14observe_result11expectationEv"]], "cudaq::observe_result::id_coefficient (c++ function)": [[2, "_CPPv4N5cudaq14observe_result14id_coefficientEv"]], "cudaq::observe_result::observe_result (c++ function)": [[2, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op"], [2, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result"]], "cudaq::observe_result::operator double (c++ function)": [[2, "_CPPv4N5cudaq14observe_resultcvdEv"]], "cudaq::observe_result::raw_data (c++ function)": [[2, "_CPPv4N5cudaq14observe_result8raw_dataEv"]], "cudaq::optimizable_function (c++ class)": [[2, "_CPPv4N5cudaq20optimizable_functionE"]], "cudaq::optimization_result (c++ type)": [[2, "_CPPv4N5cudaq19optimization_resultE"]], "cudaq::optimizer (c++ class)": [[2, "_CPPv4N5cudaq9optimizerE"]], "cudaq::optimizer::optimize (c++ function)": [[2, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function"]], "cudaq::optimizer::requiresgradients (c++ function)": [[2, "_CPPv4N5cudaq9optimizer17requiresGradientsEv"]], "cudaq::orca (c++ type)": [[2, "_CPPv4N5cudaq4orcaE"]], "cudaq::orca::sample (c++ function)": [[2, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE"], [2, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE"]], "cudaq::orca::sample_async (c++ function)": [[2, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE"], [2, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE"]], "cudaq::pauli1 (c++ class)": [[2, "_CPPv4N5cudaq6pauli1E"]], "cudaq::pauli1::pauli1 (c++ function)": [[2, "_CPPv4N5cudaq6pauli16pauli1ERKNSt6vectorIN5cudaq4realEEE"]], "cudaq::pauli2 (c++ class)": [[2, "_CPPv4N5cudaq6pauli2E"]], "cudaq::pauli2::pauli2 (c++ function)": [[2, "_CPPv4N5cudaq6pauli26pauli2ERKNSt6vectorIN5cudaq4realEEE"]], "cudaq::phase_damping (c++ class)": [[2, "_CPPv4N5cudaq13phase_dampingE"]], "cudaq::phase_flip_channel (c++ class)": [[2, "_CPPv4N5cudaq18phase_flip_channelE"]], "cudaq::qreg (c++ class)": [[2, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE"]], "cudaq::qreg::back (c++ function)": [[2, "_CPPv4N5cudaq4qreg4backENSt6size_tE"], [2, "_CPPv4N5cudaq4qreg4backEv"]], "cudaq::qreg::begin (c++ function)": [[2, "_CPPv4N5cudaq4qreg5beginEv"]], "cudaq::qreg::clear (c++ function)": [[2, "_CPPv4N5cudaq4qreg5clearEv"]], "cudaq::qreg::front (c++ function)": [[2, "_CPPv4N5cudaq4qreg5frontENSt6size_tE"], [2, "_CPPv4N5cudaq4qreg5frontEv"]], "cudaq::qreg::operator[] (c++ function)": [[2, "_CPPv4N5cudaq4qregixEKNSt6size_tE"]], "cudaq::qreg::size (c++ function)": [[2, "_CPPv4NK5cudaq4qreg4sizeEv"]], "cudaq::qreg::slice (c++ function)": [[2, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE"]], "cudaq::qreg::value_type (c++ type)": [[2, "_CPPv4N5cudaq4qreg10value_typeE"]], "cudaq::qspan (c++ class)": [[2, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE"]], "cudaq::quantum_platform (c++ class)": [[2, "_CPPv4N5cudaq16quantum_platformE"]], "cudaq::quantum_platform::clear_shots (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform11clear_shotsEv"]], "cudaq::quantum_platform::connectivity (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12connectivityEv"]], "cudaq::quantum_platform::enqueueasynctask (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask"], [2, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE"]], "cudaq::quantum_platform::getlogstream (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12getLogStreamEv"]], "cudaq::quantum_platform::get_current_qpu (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform15get_current_qpuEv"]], "cudaq::quantum_platform::get_exec_ctx (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform12get_exec_ctxEv"]], "cudaq::quantum_platform::get_noise (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9get_noiseEv"]], "cudaq::quantum_platform::get_num_qubits (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsENSt6size_tE"], [2, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsEv"]], "cudaq::quantum_platform::get_remote_capabilities (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform23get_remote_capabilitiesEKNSt6size_tE"]], "cudaq::quantum_platform::get_shots (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9get_shotsEv"]], "cudaq::quantum_platform::is_emulated (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform11is_emulatedEKNSt6size_tE"]], "cudaq::quantum_platform::is_remote (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9is_remoteEKNSt6size_tE"]], "cudaq::quantum_platform::is_simulator (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform12is_simulatorEKNSt6size_tE"]], "cudaq::quantum_platform::launchvqe (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE"]], "cudaq::quantum_platform::list_platforms (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14list_platformsEv"]], "cudaq::quantum_platform::name (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform4nameEv"]], "cudaq::quantum_platform::num_qpus (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform8num_qpusEv"]], "cudaq::quantum_platform::onrandomseedset (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform15onRandomSeedSetENSt6size_tE"]], "cudaq::quantum_platform::resetlogstream (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14resetLogStreamEv"]], "cudaq::quantum_platform::reset_exec_ctx (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14reset_exec_ctxENSt6size_tE"]], "cudaq::quantum_platform::reset_noise (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform11reset_noiseEv"]], "cudaq::quantum_platform::setlogstream (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12setLogStreamERNSt7ostreamE"]], "cudaq::quantum_platform::settargetbackend (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform16setTargetBackendERKNSt6stringE"]], "cudaq::quantum_platform::set_current_qpu (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform15set_current_qpuEKNSt6size_tE"]], "cudaq::quantum_platform::set_exec_ctx (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE"]], "cudaq::quantum_platform::set_noise (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9set_noiseEPK11noise_model"]], "cudaq::quantum_platform::set_shots (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9set_shotsEi"]], "cudaq::quantum_platform::supports_conditional_feedback (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform29supports_conditional_feedbackEKNSt6size_tE"]], "cudaq::quantum_platform::supports_explicit_measurements (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform30supports_explicit_measurementsEKNSt6size_tE"]], "cudaq::quantum_platform::supports_task_distribution (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform26supports_task_distributionEv"]], "cudaq::qubit (c++ type)": [[2, "_CPPv4N5cudaq5qubitE"]], "cudaq::qudit (c++ class)": [[2, "_CPPv4I_NSt6size_tEEN5cudaq5quditE"]], "cudaq::qudit::qudit (c++ function)": [[2, "_CPPv4N5cudaq5qudit5quditEv"]], "cudaq::qvector (c++ class)": [[2, "_CPPv4I_NSt6size_tEEN5cudaq7qvectorE"]], "cudaq::qvector::back (c++ function)": [[2, "_CPPv4N5cudaq7qvector4backENSt6size_tE"], [2, "_CPPv4N5cudaq7qvector4backEv"]], "cudaq::qvector::begin (c++ function)": [[2, "_CPPv4N5cudaq7qvector5beginEv"]], "cudaq::qvector::clear (c++ function)": [[2, "_CPPv4N5cudaq7qvector5clearEv"]], "cudaq::qvector::end (c++ function)": [[2, "_CPPv4N5cudaq7qvector3endEv"]], "cudaq::qvector::front (c++ function)": [[2, "_CPPv4N5cudaq7qvector5frontENSt6size_tE"], [2, "_CPPv4N5cudaq7qvector5frontEv"]], "cudaq::qvector::operator= (c++ function)": [[2, "_CPPv4N5cudaq7qvectoraSERK7qvector"]], "cudaq::qvector::operator[] (c++ function)": [[2, "_CPPv4N5cudaq7qvectorixEKNSt6size_tE"]], "cudaq::qvector::qvector (c++ function)": [[2, "_CPPv4N5cudaq7qvector7qvectorENSt6size_tE"], [2, "_CPPv4N5cudaq7qvector7qvectorERK5state"], [2, "_CPPv4N5cudaq7qvector7qvectorERK7qvector"], [2, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb"], [2, "_CPPv4N5cudaq7qvector7qvectorERR7qvector"]], "cudaq::qvector::size (c++ function)": [[2, "_CPPv4NK5cudaq7qvector4sizeEv"]], "cudaq::qvector::slice (c++ function)": [[2, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE"]], "cudaq::qvector::value_type (c++ type)": [[2, "_CPPv4N5cudaq7qvector10value_typeE"]], "cudaq::qview (c++ class)": [[2, "_CPPv4I_NSt6size_tEEN5cudaq5qviewE"]], "cudaq::qview::value_type (c++ type)": [[2, "_CPPv4N5cudaq5qview10value_typeE"]], "cudaq::range (c++ function)": [[2, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType"], [2, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType"], [2, "_CPPv4N5cudaq5rangeENSt6size_tE"]], "cudaq::real (c++ type)": [[2, "_CPPv4N5cudaq4realE"]], "cudaq::registry (c++ type)": [[2, "_CPPv4N5cudaq8registryE"]], "cudaq::registry::registeredtype (c++ class)": [[2, "_CPPv4I0EN5cudaq8registry14RegisteredTypeE"]], "cudaq::sample (c++ function)": [[2, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args"]], "cudaq::sample_options (c++ struct)": [[2, "_CPPv4N5cudaq14sample_optionsE"]], "cudaq::sample_result (c++ class)": [[2, "_CPPv4N5cudaq13sample_resultE"]], "cudaq::sample_result::append (c++ function)": [[2, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResultb"]], "cudaq::sample_result::begin (c++ function)": [[2, "_CPPv4N5cudaq13sample_result5beginEv"], [2, "_CPPv4NK5cudaq13sample_result5beginEv"]], "cudaq::sample_result::cbegin (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result6cbeginEv"]], "cudaq::sample_result::cend (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result4cendEv"]], "cudaq::sample_result::clear (c++ function)": [[2, "_CPPv4N5cudaq13sample_result5clearEv"]], "cudaq::sample_result::count (c++ function)": [[2, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE"]], "cudaq::sample_result::deserialize (c++ function)": [[2, "_CPPv4N5cudaq13sample_result11deserializeERNSt6vectorINSt6size_tEEE"]], "cudaq::sample_result::dump (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result4dumpERNSt7ostreamE"], [2, "_CPPv4NK5cudaq13sample_result4dumpEv"]], "cudaq::sample_result::end (c++ function)": [[2, "_CPPv4N5cudaq13sample_result3endEv"], [2, "_CPPv4NK5cudaq13sample_result3endEv"]], "cudaq::sample_result::exp_val_z (c++ function)": [[2, "_CPPv4N5cudaq13sample_result9exp_val_zEKNSt11string_viewE"]], "cudaq::sample_result::expectation (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result11expectationEKNSt11string_viewE"]], "cudaq::sample_result::get_marginal (c++ function)": [[2, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE"], [2, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE"]], "cudaq::sample_result::get_total_shots (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result15get_total_shotsEv"]], "cudaq::sample_result::has_even_parity (c++ function)": [[2, "_CPPv4N5cudaq13sample_result15has_even_parityENSt11string_viewE"]], "cudaq::sample_result::has_expectation (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result15has_expectationEKNSt11string_viewE"]], "cudaq::sample_result::most_probable (c++ function)": [[2, "_CPPv4N5cudaq13sample_result13most_probableEKNSt11string_viewE"]], "cudaq::sample_result::operator+= (c++ function)": [[2, "_CPPv4N5cudaq13sample_resultpLERK13sample_result"]], "cudaq::sample_result::operator= (c++ function)": [[2, "_CPPv4N5cudaq13sample_resultaSER13sample_result"], [2, "_CPPv4N5cudaq13sample_resultaSERR13sample_result"]], "cudaq::sample_result::operator== (c++ function)": [[2, "_CPPv4NK5cudaq13sample_resulteqERK13sample_result"]], "cudaq::sample_result::probability (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE"]], "cudaq::sample_result::register_names (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result14register_namesEv"]], "cudaq::sample_result::reorder (c++ function)": [[2, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE"]], "cudaq::sample_result::sample_result (c++ function)": [[2, "_CPPv4N5cudaq13sample_result13sample_resultER15ExecutionResult"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERK13sample_result"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERNSt6vectorI15ExecutionResultEE"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERR13sample_result"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERR15ExecutionResult"], [2, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE"], [2, "_CPPv4N5cudaq13sample_result13sample_resultEv"]], "cudaq::sample_result::serialize (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result9serializeEv"]], "cudaq::sample_result::size (c++ function)": [[2, "_CPPv4N5cudaq13sample_result4sizeEKNSt11string_viewE"]], "cudaq::sample_result::to_map (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result6to_mapEKNSt11string_viewE"]], "cudaq::sample_result::~sample_result (c++ function)": [[2, "_CPPv4N5cudaq13sample_resultD0Ev"]], "cudaq::set_noise (c++ function)": [[2, "_CPPv4N5cudaq9set_noiseERKN5cudaq11noise_modelE"]], "cudaq::set_random_seed (c++ function)": [[2, "_CPPv4N5cudaq15set_random_seedENSt6size_tE"]], "cudaq::simulation_precision (c++ enum)": [[2, "_CPPv4N5cudaq20simulation_precisionE"]], "cudaq::simulation_precision::fp32 (c++ enumerator)": [[2, "_CPPv4N5cudaq20simulation_precision4fp32E"]], "cudaq::simulation_precision::fp64 (c++ enumerator)": [[2, "_CPPv4N5cudaq20simulation_precision4fp64E"]], "cudaq::spin_op (c++ class)": [[2, "_CPPv4N5cudaq7spin_opE"]], "cudaq::spin_op::begin (c++ function)": [[2, "_CPPv4N5cudaq7spin_op5beginEv"], [2, "_CPPv4NK5cudaq7spin_op5beginEv"]], "cudaq::spin_op::csr_spmatrix (c++ type)": [[2, "_CPPv4N5cudaq7spin_op12csr_spmatrixE"]], "cudaq::spin_op::distribute_terms (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op16distribute_termsENSt6size_tE"]], "cudaq::spin_op::dump (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op4dumpEv"]], "cudaq::spin_op::end (c++ function)": [[2, "_CPPv4N5cudaq7spin_op3endEv"], [2, "_CPPv4NK5cudaq7spin_op3endEv"]], "cudaq::spin_op::for_each_pauli (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op14for_each_pauliERRNSt8functionIFv5pauliNSt6size_tEEEE"]], "cudaq::spin_op::for_each_term (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op13for_each_termERRNSt8functionIFvR7spin_opEEE"]], "cudaq::spin_op::from_word (c++ function)": [[2, "_CPPv4N5cudaq7spin_op9from_wordERKNSt6stringE"]], "cudaq::spin_op::getdatarepresentation (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op21getDataRepresentationEv"]], "cudaq::spin_op::getdatatuple (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op12getDataTupleEv"]], "cudaq::spin_op::get_coefficient (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op15get_coefficientEv"]], "cudaq::spin_op::get_raw_data (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op12get_raw_dataEv"]], "cudaq::spin_op::is_identity (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op11is_identityEv"]], "cudaq::spin_op::iterator (c++ struct)": [[2, "_CPPv4I0EN5cudaq7spin_op8iteratorE"]], "cudaq::spin_op::num_qubits (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op10num_qubitsEv"]], "cudaq::spin_op::num_terms (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op9num_termsEv"]], "cudaq::spin_op::operator*= (c++ function)": [[2, "_CPPv4N5cudaq7spin_opmLEKNSt7complexIdEE"], [2, "_CPPv4N5cudaq7spin_opmLEKd"], [2, "_CPPv4N5cudaq7spin_opmLERK7spin_op"]], "cudaq::spin_op::operator+= (c++ function)": [[2, "_CPPv4N5cudaq7spin_oppLERK7spin_op"]], "cudaq::spin_op::operator-= (c++ function)": [[2, "_CPPv4N5cudaq7spin_opmIERK7spin_op"]], "cudaq::spin_op::operator= (c++ function)": [[2, "_CPPv4N5cudaq7spin_opaSERK7spin_op"]], "cudaq::spin_op::operator== (c++ function)": [[2, "_CPPv4NK5cudaq7spin_opeqERK7spin_op"]], "cudaq::spin_op::random (c++ function)": [[2, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj"]], "cudaq::spin_op::spin_op (c++ function)": [[2, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opENSt6size_tE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERK7spin_op"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt13unordered_mapI12spin_op_termNSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt4pairIK12spin_op_termNSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERNSt4pairIK12spin_op_termNSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opEv"]], "cudaq::spin_op::spin_op_term (c++ type)": [[2, "_CPPv4N5cudaq7spin_op12spin_op_termE"]], "cudaq::spin_op::to_matrix (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op9to_matrixEv"]], "cudaq::spin_op::to_sparse_matrix (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op16to_sparse_matrixEv"]], "cudaq::spin_op::to_string (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op9to_stringEb"]], "cudaq::spin_op::~spin_op (c++ function)": [[2, "_CPPv4N5cudaq7spin_opD0Ev"]], "cudaq::state (c++ class)": [[2, "_CPPv4N5cudaq5stateE"]], "cudaq::state::amplitude (c++ function)": [[2, "_CPPv4N5cudaq5state9amplitudeERKNSt6vectorIiEE"]], "cudaq::state::amplitudes (c++ function)": [[2, "_CPPv4N5cudaq5state10amplitudesERKNSt6vectorINSt6vectorIiEEEE"]], "cudaq::state::dump (c++ function)": [[2, "_CPPv4NK5cudaq5state4dumpERNSt7ostreamE"], [2, "_CPPv4NK5cudaq5state4dumpEv"]], "cudaq::state::from_data (c++ function)": [[2, "_CPPv4N5cudaq5state9from_dataERK10state_data"]], "cudaq::state::get_num_qubits (c++ function)": [[2, "_CPPv4NK5cudaq5state14get_num_qubitsEv"]], "cudaq::state::get_num_tensors (c++ function)": [[2, "_CPPv4NK5cudaq5state15get_num_tensorsEv"]], "cudaq::state::get_precision (c++ function)": [[2, "_CPPv4NK5cudaq5state13get_precisionEv"]], "cudaq::state::get_tensor (c++ function)": [[2, "_CPPv4NK5cudaq5state10get_tensorENSt6size_tE"]], "cudaq::state::get_tensors (c++ function)": [[2, "_CPPv4NK5cudaq5state11get_tensorsEv"]], "cudaq::state::is_on_gpu (c++ function)": [[2, "_CPPv4NK5cudaq5state9is_on_gpuEv"]], "cudaq::state::operator() (c++ function)": [[2, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE"], [2, "_CPPv4NK5cudaq5stateclERKNSt16initializer_listINSt6size_tEEENSt6size_tE"]], "cudaq::state::operator= (c++ function)": [[2, "_CPPv4N5cudaq5stateaSERR5state"]], "cudaq::state::operator[] (c++ function)": [[2, "_CPPv4NK5cudaq5stateixENSt6size_tE"]], "cudaq::state::overlap (c++ function)": [[2, "_CPPv4N5cudaq5state7overlapERK5state"]], "cudaq::state::state (c++ function)": [[2, "_CPPv4N5cudaq5state5stateEP15SimulationState"], [2, "_CPPv4N5cudaq5state5stateERK5state"]], "cudaq::state::to_host (c++ function)": [[2, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE"]], "cudaq::state_data (c++ type)": [[2, "_CPPv4N5cudaq10state_dataE"]], "cudaq::tensor (c++ type)": [[2, "_CPPv4N5cudaq6tensorE"]], "cudaq::unset_noise (c++ function)": [[2, "_CPPv4N5cudaq11unset_noiseEv"]], "cudaq::x_error (c++ class)": [[2, "_CPPv4N5cudaq7x_errorE"]], "cudaq::y_error (c++ class)": [[2, "_CPPv4N5cudaq7y_errorE"]], "cudaq::z_error (c++ class)": [[2, "_CPPv4N5cudaq7z_errorE"]], "nvqir::mpssimulationstate (c++ class)": [[2, "_CPPv4N5nvqir18MPSSimulationStateE"]], "nvqir::tensornetsimulationstate (c++ class)": [[2, "_CPPv4N5nvqir24TensorNetSimulationStateE"]], "amplitudedampingchannel (class in cudaq)": [[3, "cudaq.AmplitudeDampingChannel"]], "asyncevolveresult (class in cudaq)": [[3, "cudaq.AsyncEvolveResult"]], "asyncobserveresult (class in cudaq)": [[3, "cudaq.AsyncObserveResult"]], "asyncsampleresult (class in cudaq)": [[3, "cudaq.AsyncSampleResult"]], "asyncstateresult (class in cudaq)": [[3, "cudaq.AsyncStateResult"]], "baseintegrator (class in cudaq.operator.integrator)": [[3, "cudaq.operator.integrator.BaseIntegrator"]], "bitflipchannel (class in cudaq)": [[3, "cudaq.BitFlipChannel"]], "cobyla (class in cudaq.optimizers)": [[3, "cudaq.optimizers.COBYLA"]], "centraldifference (class in cudaq.gradients)": [[3, "cudaq.gradients.CentralDifference"]], "complexmatrix (class in cudaq)": [[3, "cudaq.ComplexMatrix"]], "cudensitymatstate (class in cudaq.operator.cudm_state)": [[3, "cudaq.operator.cudm_state.CuDensityMatState"]], "depolarization1 (class in cudaq)": [[3, "cudaq.Depolarization1"]], "depolarization2 (class in cudaq)": [[3, "cudaq.Depolarization2"]], "depolarizationchannel (class in cudaq)": [[3, "cudaq.DepolarizationChannel"]], "elementaryoperator (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.ElementaryOperator"]], "evolveresult (class in cudaq)": [[3, "cudaq.EvolveResult"]], "forwarddifference (class in cudaq.gradients)": [[3, "cudaq.gradients.ForwardDifference"]], "gradientdescent (class in cudaq.optimizers)": [[3, "cudaq.optimizers.GradientDescent"]], "initialstate (class in cudaq.operator.helpers)": [[3, "cudaq.operator.helpers.InitialState"]], "kernel (in module cudaq)": [[3, "cudaq.Kernel"]], "krauschannel (class in cudaq)": [[3, "cudaq.KrausChannel"]], "krausoperator (class in cudaq)": [[3, "cudaq.KrausOperator"]], "lbfgs (class in cudaq.optimizers)": [[3, "cudaq.optimizers.LBFGS"]], "neldermead (class in cudaq.optimizers)": [[3, "cudaq.optimizers.NelderMead"]], "noisemodel (class in cudaq)": [[3, "cudaq.NoiseModel"]], "observeresult (class in cudaq)": [[3, "cudaq.ObserveResult"]], "operatorsum (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.OperatorSum"]], "optimizationresult (class in cudaq)": [[3, "cudaq.OptimizationResult"]], "parametershift (class in cudaq.gradients)": [[3, "cudaq.gradients.ParameterShift"]], "pauli1 (class in cudaq)": [[3, "cudaq.Pauli1"]], "pauli2 (class in cudaq)": [[3, "cudaq.Pauli2"]], "phasedamping (class in cudaq)": [[3, "cudaq.PhaseDamping"]], "phaseflipchannel (class in cudaq)": [[3, "cudaq.PhaseFlipChannel"]], "productoperator (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.ProductOperator"]], "pykernel (class in cudaq)": [[3, "cudaq.PyKernel"]], "pykerneldecorator (class in cudaq)": [[3, "cudaq.PyKernelDecorator"]], "quakevalue (class in cudaq)": [[3, "cudaq.QuakeValue"]], "rydberghamiltonian (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.RydbergHamiltonian"]], "sampleresult (class in cudaq)": [[3, "cudaq.SampleResult"]], "scalaroperator (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.ScalarOperator"]], "schedule (class in cudaq)": [[3, "cudaq.Schedule"]], "simulationprecision (class in cudaq)": [[3, "cudaq.SimulationPrecision"]], "spinoperator (class in cudaq)": [[3, "cudaq.SpinOperator"]], "spinoperator (class in cudaq.operator.definitions)": [[3, "cudaq.operator.definitions.SpinOperator"]], "state (class in cudaq)": [[3, "cudaq.State"]], "target (class in cudaq)": [[3, "cudaq.Target"]], "tensor (class in cudaq)": [[3, "cudaq.Tensor"]], "xerror (class in cudaq)": [[3, "cudaq.XError"]], "yerror (class in cudaq)": [[3, "cudaq.YError"]], "zerror (class in cudaq)": [[3, "cudaq.ZError"]], "__add__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__add__"]], "__call__() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.__call__"]], "__getitem__() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.__getitem__"]], "__getitem__() (cudaq.krauschannel method)": [[3, "cudaq.KrausChannel.__getitem__"]], "__getitem__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__getitem__"]], "__getitem__() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.__getitem__"]], "__init__() (cudaq.amplitudedampingchannel method)": [[3, "cudaq.AmplitudeDampingChannel.__init__"]], "__init__() (cudaq.bitflipchannel method)": [[3, "cudaq.BitFlipChannel.__init__"]], "__init__() (cudaq.depolarizationchannel method)": [[3, "cudaq.DepolarizationChannel.__init__"]], "__init__() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.__init__"]], "__init__() (cudaq.phaseflipchannel method)": [[3, "cudaq.PhaseFlipChannel.__init__"]], "__init__() (cudaq.operator.expressions.rydberghamiltonian method)": [[3, "cudaq.operator.expressions.RydbergHamiltonian.__init__"]], "__iter__() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.__iter__"]], "__len__() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.__len__"]], "__mul__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__mul__"]], "__neg__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__neg__"]], "__radd__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__radd__"]], "__rmul__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__rmul__"]], "__rsub__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__rsub__"]], "__str__() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.__str__"]], "__str__() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.__str__"]], "__sub__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__sub__"]], "add_all_qubit_channel() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.add_all_qubit_channel"]], "add_channel() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.add_channel"]], "all_gather() (in module cudaq.mpi)": [[3, "cudaq.mpi.all_gather"]], "amplitude() (cudaq.state method)": [[3, "cudaq.State.amplitude"]], "amplitudes() (cudaq.state method)": [[3, "cudaq.State.amplitudes"]], "append() (cudaq.krauschannel method)": [[3, "cudaq.KrausChannel.append"]], "argument_count (cudaq.pykernel attribute)": [[3, "cudaq.PyKernel.argument_count"]], "arguments (cudaq.pykernel attribute)": [[3, "cudaq.PyKernel.arguments"]], "broadcast() (in module cudaq.mpi)": [[3, "cudaq.mpi.broadcast"]], "clear() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.clear"]], "col_count (cudaq.krausoperator property)": [[3, "cudaq.KrausOperator.col_count"]], "compile() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.compile"]], "compute() (cudaq.gradients.centraldifference method)": [[3, "cudaq.gradients.CentralDifference.compute"]], "compute() (cudaq.gradients.forwarddifference method)": [[3, "cudaq.gradients.ForwardDifference.compute"]], "compute() (cudaq.gradients.parametershift method)": [[3, "cudaq.gradients.ParameterShift.compute"]], "count() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.count"]], "counts() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.counts"]], "cudaq": [[3, "module-cudaq"]], "define() (cudaq.operator.expressions.elementaryoperator class method)": [[3, "cudaq.operator.expressions.ElementaryOperator.define"]], "description (cudaq.target property)": [[3, "cudaq.Target.description"]], "deserialize() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.deserialize"]], "draw() (in module cudaq)": [[3, "cudaq.draw"]], "dump() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.dump"]], "dump() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.dump"]], "dump() (cudaq.state method)": [[3, "cudaq.State.dump"]], "evolve() (in module cudaq)": [[3, "cudaq.evolve"]], "evolve_async() (in module cudaq)": [[3, "cudaq.evolve_async"]], "expectation() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.expectation"]], "expectation() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.expectation"]], "expectation_values() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.expectation_values"]], "expectation_z() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.expectation_z"]], "expectation_z() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.expectation_z"]], "extract_c_function_pointer() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.extract_c_function_pointer"]], "final_expectation_values() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.final_expectation_values"]], "final_state() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.final_state"]], "finalize() (in module cudaq.mpi)": [[3, "cudaq.mpi.finalize"]], "from_data() (cudaq.state static method)": [[3, "cudaq.State.from_data"]], "from_json() (cudaq.pykerneldecorator static method)": [[3, "cudaq.PyKernelDecorator.from_json"]], "from_json() (cudaq.gradients.centraldifference static method)": [[3, "cudaq.gradients.CentralDifference.from_json"]], "from_json() (cudaq.gradients.forwarddifference static method)": [[3, "cudaq.gradients.ForwardDifference.from_json"]], "from_json() (cudaq.gradients.parametershift static method)": [[3, "cudaq.gradients.ParameterShift.from_json"]], "from_json() (cudaq.optimizers.cobyla static method)": [[3, "cudaq.optimizers.COBYLA.from_json"]], "from_json() (cudaq.optimizers.gradientdescent static method)": [[3, "cudaq.optimizers.GradientDescent.from_json"]], "from_json() (cudaq.optimizers.lbfgs static method)": [[3, "cudaq.optimizers.LBFGS.from_json"]], "from_json() (cudaq.optimizers.neldermead static method)": [[3, "cudaq.optimizers.NelderMead.from_json"]], "get() (cudaq.asyncevolveresult method)": [[3, "cudaq.AsyncEvolveResult.get"]], "get() (cudaq.asyncobserveresult method)": [[3, "cudaq.AsyncObserveResult.get"]], "get() (cudaq.asyncsampleresult method)": [[3, "cudaq.AsyncSampleResult.get"]], "get() (cudaq.asyncstateresult method)": [[3, "cudaq.AsyncStateResult.get"]], "gettensor() (cudaq.state method)": [[3, "cudaq.State.getTensor"]], "gettensors() (cudaq.state method)": [[3, "cudaq.State.getTensors"]], "get_channels() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.get_channels"]], "get_marginal_counts() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_marginal_counts"]], "get_precision() (cudaq.target method)": [[3, "cudaq.Target.get_precision"]], "get_register_counts() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_register_counts"]], "get_sequential_data() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_sequential_data"]], "get_spin() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.get_spin"]], "get_state() (in module cudaq)": [[3, "cudaq.get_state"]], "get_state_async() (in module cudaq)": [[3, "cudaq.get_state_async"]], "get_target() (in module cudaq)": [[3, "cudaq.get_target"]], "get_targets() (in module cudaq)": [[3, "cudaq.get_targets"]], "get_total_shots() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_total_shots"]], "gradient (class in cudaq.gradients)": [[3, "cudaq.gradients.gradient"]], "has_target() (in module cudaq)": [[3, "cudaq.has_target"]], "initial_parameters (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.initial_parameters"]], "initial_parameters (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.initial_parameters"]], "initial_parameters (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.initial_parameters"]], "initial_parameters (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.initial_parameters"]], "initialize() (in module cudaq.mpi)": [[3, "cudaq.mpi.initialize"]], "initialize_cudaq() (in module cudaq)": [[3, "cudaq.initialize_cudaq"]], "intermediate_states() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.intermediate_states"]], "is_emulated() (cudaq.target method)": [[3, "cudaq.Target.is_emulated"]], "is_initialized() (in module cudaq.mpi)": [[3, "cudaq.mpi.is_initialized"]], "is_on_gpu() (cudaq.state method)": [[3, "cudaq.State.is_on_gpu"]], "is_remote() (cudaq.target method)": [[3, "cudaq.Target.is_remote"]], "items() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.items"]], "kernel() (in module cudaq)": [[3, "cudaq.kernel"]], "lower_bounds (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.lower_bounds"]], "lower_bounds (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.lower_bounds"]], "lower_bounds (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.lower_bounds"]], "lower_bounds (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.lower_bounds"]], "make_kernel() (in module cudaq)": [[3, "cudaq.make_kernel"]], "max_iterations (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.max_iterations"]], "max_iterations (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.max_iterations"]], "max_iterations (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.max_iterations"]], "max_iterations (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.max_iterations"]], "merge_kernel() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.merge_kernel"]], "minimal_eigenvalue() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.minimal_eigenvalue"]], "module": [[3, "module-cudaq"]], "most_probable() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.most_probable"]], "name (cudaq.pykernel attribute)": [[3, "cudaq.PyKernel.name"]], "name (cudaq.simulationprecision property)": [[3, "cudaq.SimulationPrecision.name"]], "name (cudaq.target property)": [[3, "cudaq.Target.name"]], "num_available_gpus() (in module cudaq)": [[3, "cudaq.num_available_gpus"]], "num_columns() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.num_columns"]], "num_qpus() (cudaq.target method)": [[3, "cudaq.Target.num_qpus"]], "num_qubits() (cudaq.state method)": [[3, "cudaq.State.num_qubits"]], "num_ranks() (in module cudaq.mpi)": [[3, "cudaq.mpi.num_ranks"]], "num_rows() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.num_rows"]], "observe() (in module cudaq)": [[3, "cudaq.observe"]], "observe_async() (in module cudaq)": [[3, "cudaq.observe_async"]], "optimize() (cudaq.optimizers.cobyla method)": [[3, "cudaq.optimizers.COBYLA.optimize"]], "optimize() (cudaq.optimizers.gradientdescent method)": [[3, "cudaq.optimizers.GradientDescent.optimize"]], "optimize() (cudaq.optimizers.lbfgs method)": [[3, "cudaq.optimizers.LBFGS.optimize"]], "optimize() (cudaq.optimizers.neldermead method)": [[3, "cudaq.optimizers.NelderMead.optimize"]], "optimizer (class in cudaq.optimizers)": [[3, "cudaq.optimizers.optimizer"]], "overlap() (cudaq.state method)": [[3, "cudaq.State.overlap"]], "platform (cudaq.target property)": [[3, "cudaq.Target.platform"]], "probability() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.probability"]], "qreg (in module cudaq)": [[3, "cudaq.qreg"]], "qubit (class in cudaq)": [[3, "cudaq.qubit"]], "qvector (class in cudaq)": [[3, "cudaq.qvector"]], "rank() (in module cudaq.mpi)": [[3, "cudaq.mpi.rank"]], "register_names (cudaq.sampleresult attribute)": [[3, "cudaq.SampleResult.register_names"]], "requires_gradients() (cudaq.optimizers.cobyla method)": [[3, "cudaq.optimizers.COBYLA.requires_gradients"]], "requires_gradients() (cudaq.optimizers.gradientdescent method)": [[3, "cudaq.optimizers.GradientDescent.requires_gradients"]], "requires_gradients() (cudaq.optimizers.lbfgs method)": [[3, "cudaq.optimizers.LBFGS.requires_gradients"]], "requires_gradients() (cudaq.optimizers.neldermead method)": [[3, "cudaq.optimizers.NelderMead.requires_gradients"]], "reset_target() (in module cudaq)": [[3, "cudaq.reset_target"]], "row_count (cudaq.krausoperator property)": [[3, "cudaq.KrausOperator.row_count"]], "sample() (in module cudaq)": [[3, "cudaq.sample"]], "sample() (in module cudaq.orca)": [[3, "cudaq.orca.sample"]], "sample_async() (in module cudaq)": [[3, "cudaq.sample_async"]], "serialize() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.serialize"]], "set_noise() (in module cudaq)": [[3, "cudaq.set_noise"]], "set_random_seed() (in module cudaq)": [[3, "cudaq.set_random_seed"]], "set_target() (in module cudaq)": [[3, "cudaq.set_target"]], "simulator (cudaq.target property)": [[3, "cudaq.Target.simulator"]], "slice() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.slice"]], "spin.i() (in module cudaq)": [[3, "cudaq.spin.i"]], "spin.x() (in module cudaq)": [[3, "cudaq.spin.x"]], "spin.y() (in module cudaq)": [[3, "cudaq.spin.y"]], "spin.z() (in module cudaq)": [[3, "cudaq.spin.z"]], "synthesize_callable_arguments() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.synthesize_callable_arguments"]], "to_cupy_array() (in module cudaq.operator.cudm_state)": [[3, "cudaq.operator.cudm_state.to_cupy_array"]], "to_json() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.to_json"]], "to_json() (cudaq.gradients.centraldifference method)": [[3, "cudaq.gradients.CentralDifference.to_json"]], "to_json() (cudaq.gradients.forwarddifference method)": [[3, "cudaq.gradients.ForwardDifference.to_json"]], "to_json() (cudaq.gradients.parametershift method)": [[3, "cudaq.gradients.ParameterShift.to_json"]], "to_json() (cudaq.optimizers.cobyla method)": [[3, "cudaq.optimizers.COBYLA.to_json"]], "to_json() (cudaq.optimizers.gradientdescent method)": [[3, "cudaq.optimizers.GradientDescent.to_json"]], "to_json() (cudaq.optimizers.lbfgs method)": [[3, "cudaq.optimizers.LBFGS.to_json"]], "to_json() (cudaq.optimizers.neldermead method)": [[3, "cudaq.optimizers.NelderMead.to_json"]], "to_numpy() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.to_numpy"]], "translate() (in module cudaq)": [[3, "cudaq.translate"]], "try_init_state() (cudaq.operator.cudm_state.cudensitymatstate method)": [[3, "cudaq.operator.cudm_state.CuDensityMatState.try_init_state"]], "type_to_str() (cudaq.pykerneldecorator static method)": [[3, "cudaq.PyKernelDecorator.type_to_str"]], "unset_noise() (in module cudaq)": [[3, "cudaq.unset_noise"]], "upper_bounds (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.upper_bounds"]], "upper_bounds (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.upper_bounds"]], "upper_bounds (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.upper_bounds"]], "upper_bounds (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.upper_bounds"]], "values() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.values"]], "vqe() (in module cudaq)": [[3, "cudaq.vqe"]]}})