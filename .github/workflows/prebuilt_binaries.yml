on:
  workflow_call:
    inputs:
      platform:
        type: string
        required: false
        default: linux/amd64
      build_cache:
        type: string
        required: false
      environment:
        type: string
        required: false
  
name: Pre-built binaries

jobs:
  build_installer:
    name: Build CUDA Quantum installer
    runs-on: ${{ (contains(inputs.platform, 'arm') && 'linux-arm64-cpu8') || 'linux-amd64-cpu8' }}
    permissions:
      contents: read

    outputs:
      artifact_name: ${{ steps.prereqs.outputs.artifact_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure build
        id: config
        run: |
          if ${{ github.ref_type == 'tag' || startsWith(github.ref_name, 'releases/') }}; then
            cudaq_version=`echo ${{ github.ref_name }} | egrep -o "([0-9]{1,}\.)+[0-9]{1,}"`
          else
            cudaq_version=0.0.0
          fi

          echo "cudaq_version=$cudaq_version" >> $GITHUB_OUTPUT
          echo "docker_output=type=local,dest=/tmp/install" >> $GITHUB_OUTPUT

      - name: Set up context for buildx
        run: |
          docker context create builder_context

      - name: Set up buildx runner
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builder_context

      - name: Build installer
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/release/cudaq.archive.Dockerfile
          build-args: |
            release_version=${{ steps.config.outputs.cudaq_version }}
          cache-from: |
            ${{ inputs.build_cache }}
          outputs: ${{ steps.config.outputs.docker_output }}

      - name: Upload installer
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prereqs.outputs.artifact_name }}
          path: /tmp/wheels
          retention-days: 5
          if-no-files-found: error
