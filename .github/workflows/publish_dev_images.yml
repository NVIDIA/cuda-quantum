on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'releases/*'
  pull_request:
    branches:
      - 'main'
      - 'releases/*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

name: Create and publish image for dev environment

env:
  REGISTRY: ghcr.io
  # ${{ github.repository }} is causing issue because NVIDIA is capitalized
  IMAGE_NAME: nvidia/cuda-quantum-devdeps
  TOOLCHAIN: gcc11

jobs:
  build-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the GitHub container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for image
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
            prefix=${{ env.TOOLCHAIN }}-,onlatest=true
          tags: |
            # workflow dispatch is covered by these
            type=schedule,enable=true,pattern=nightly
            type=ref,enable=true,event=branch
            type=ref,enable=true,prefix=${{ env.TOOLCHAIN }}-pr-,event=pr
            type=ref,enable=true,event=tag

      - name: Set up buildx runner
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/build/devenv.Dockerfile
          build-args: |
              toolchain=${{ env.TOOLCHAIN }}
          #push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64
          #cache-from: type=registry,ref=user/app:buildcache
          #cache-to: type=registry,ref=user/app:buildcache,mode=max
          # The GitHub Cache API supports a maximum of 10 GB for the entire repository
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/devdeps.tar

      - name: Upload image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: devdeps
          path: /tmp/devdeps.tar

  test-image:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: devdeps
          path: /tmp

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create dev environment container
        run: |
          docker load --input /tmp/devdeps.tar
          docker build -t cuda-quantum-devenv -f .devcontainer/Dockerfile . --build-arg environment=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TOOLCHAIN }}-latest --build-arg workspace=. --build-arg destination=workspaces/cuda-quantum

      - name: Build CUDA Quantum and run tests
        uses: addnab/docker-run-action@v3
        with:
            image: cuda-quantum-devenv
            options: -v ${{ github.workspace }}:/var/www
            run: |
                cd /workspaces/cuda-quantum
                bash scripts/build_cudaq.sh
                ctest --output-on-failure --test-dir build -E ctest-nvqpp
                /opt/llvm/bin/llvm-lit -v --param nvqpp_site_config=build/test/lit.site.cfg.py build/test