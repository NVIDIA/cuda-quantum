on:
  workflow_dispatch:
  # We need write permissions for packages to update the build caches of GHCR.
  # Make sure no external code is checked out as part of this workflow.
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'
      - 'releases/*'
  # We update the build caches during the pull_request_target event, 
  # and deploy the images during pushes to branches with deployment permissions.
  push:
    branches:
      - 'main'
      - 'releases/*'

name: Push dev images and update caches

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.base.ref || github.event.ref_name }}
  cancel-in-progress: false

jobs:
  doxygen:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    uses: ./.github/workflows/dev_environment.yml
    with:
      dockerfile: build/devdeps.Dockerfile
      build_target: doxygenbuild
      registry_cache_update_only: true

  devdeps:
    if: github.event_name != 'pull_request_target' || github.event.pull_request.merged == true
    needs: doxygen
    strategy:
      matrix:
        toolchain: [clang16, gcc12]
      fail-fast: false
    uses: ./.github/workflows/dev_environment.yml
    with:
      dockerfile: build/devdeps.Dockerfile
      additional_build_caches: |
        ${{ needs.doxygen.outputs.build_cache }}
      toolchain: ${{ matrix.toolchain }}
      matrix_key: ${{ matrix.toolchain }}
      registry_cache_update_only: ${{ github.event.pull_request.merged == true }}
      environment: ghcr-deployment

  # split out so that it is not required to finish to proceed with other jobs
  devdeps_llvm:
    if: github.event_name != 'pull_request_target' || github.event.pull_request.merged == true
    needs: doxygen
    uses: ./.github/workflows/dev_environment.yml
    with:
      dockerfile: build/devdeps.Dockerfile
      additional_build_caches: |
        ${{ needs.doxygen.outputs.build_cache }}
      toolchain: llvm
      registry_cache_update_only: ${{ github.event.pull_request.merged == true }}
      environment: ghcr-deployment

  # This job is needed only when using the cloudposse GitHub action to read
  # the output of a matrix job. This is a workaround due to current GitHub
  # limitations that may not be needed if the work started here concludes:
  # https://github.com/actions/runner/pull/2477
  config:
    if: github.event_name != 'pull_request_target'
    name: Configure build
    runs-on: ubuntu-latest
    needs: devdeps

    outputs:
      json: "${{ steps.read_json.outputs.result }}"
      base_image: ${{ steps.package_config.outputs.base_image }}

    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@0.1.1
        id: read_json
        with:
          matrix-step-name: dev_environment

      - id: package_config
        run: |
          gcc12_image_name=${{ fromJson(steps.read_json.outputs.result).image_name.gcc12 }}
          gcc12_digests=${{ fromJson(steps.read_json.outputs.result).digests.gcc12 }}
          if [ "$gcc12_image_name" != "" ] && [ "$gcc12_digests" != "" ]; then
            base_image=${gcc12_image_name}@$(echo $gcc12_digests | cut -d ";" -f 1)
            echo "base_image=$base_image" >> $GITHUB_OUTPUT
          fi

  extdevdeps:
    if: github.event_name != 'pull_request_target'
    uses: ./.github/workflows/dev_environment.yml
    needs: config
    with:
      dockerfile: build/devdeps.ext.Dockerfile
      toolchain: gcc12
      base_image: ${{ needs.config.outputs.base_image }}
      environment: ghcr-deployment

  docker_image:
    name: Create Packages
    needs: extdevdeps
    uses: ./.github/workflows/build_packages.yml
    with:
      devdeps_cache: ${{ needs.extdevdeps.outputs.cache_key }}
      devdeps_archive: ${{ needs.extdevdeps.outputs.tar_archive }}
      environment: ghcr-deployment
