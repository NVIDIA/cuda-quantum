on:
  workflow_dispatch:
  pull_request:

name: "Basic content checks"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  links:
    runs-on: ubuntu-latest
    name: "Check links"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Markdown files
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-verbose-mode: "yes"
          config-file: ".github/workflows/config/mlc_config.json"        

  license_headers:
    name: Check license headers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: apache/skywalking-eyes/header@v0.4.0
        with:
          config: .licenserc.yaml
          token: '' # with the appropriate permission license eye can add comments on the PR

  files:
    name: Filter files to check
    runs-on: ubuntu-latest

    outputs:
      cxx_files: ${{ steps.files.outputs.cxx_files }}
      md_files: ${{ steps.files.outputs.md_files }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ (github.event_name == 'pull_request' && '0') || '1' }}

      - id: files
        run: |
          if false; then
            diff_base=${{ github.event.pull_request.base.sha }}
            git rev-list HEAD..$diff_base # fails the step if something went wrong
            list_files="git diff --diff-filter=d --name-only $diff_base --"

            echo "## Changed Files" >> $GITHUB_STEP_SUMMARY
            echo "The following files contain changes:" >> $GITHUB_STEP_SUMMARY
            for file in `$list_files`; do 
              echo "$file" >> $GITHUB_STEP_SUMMARY
            done
          else
            list_files="git ls-files"
          fi

          function create_output {
            files=`echo $2 | xargs $list_files`
            echo "$1_files=$(echo $files | tr ' ' ';')" >> $GITHUB_OUTPUT
          }

          create_output cxx '*.cpp *.h *.hpp :!:test :!:tpls :!:nlopt-src'
          create_output md '*.md :!:tpls'

  formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    needs: files

    steps:
      - uses: actions/checkout@v3
      - name: C++
        run: |
          files=(`echo '${{ needs.files.outputs.cxx_files }}' | tr ';' ' '`)

          echo "## C++ Formatting" >> $GITHUB_STEP_SUMMARY
          echo "Checking the following files:" >> $GITHUB_STEP_SUMMARY
          for file in $files; do 
            echo "$file" >> $GITHUB_STEP_SUMMARY
          done

          if [ -n "$files" ]; then 
            wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
            sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-16 main"
            sudo apt-get update && sudo apt-get install -y --no-install-recommends clang-format-16
            echo $files | xargs clang-format-16 -i
            git diff --diff-filter=d -- > /tmp/clang-format.patch
          fi

          if [ -s clang-format.patch ]; then
            echo "The following formatting changes need to be applied:" >> $GITHUB_STEP_SUMMARY
            echo '```text' >> $GITHUB_STEP_SUMMARY
            cat /tmp/clang-format.patch >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "All files are formatted as expected." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Markdown
        uses: nosborn/github-action-markdown-cli@v3.2.0
        with:
          files: .
          config_file: '.github/workflows/config/md_lint_config.yml'

  spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    needs: files

    steps:
      - uses: actions/checkout@v3

      - name: "Determine files to check"
        id: files
        run: |
          all_files=

      - name: "Markdown files"
        uses: rojopolis/spellcheck-github-actions@0.30.0
        with:
          config_path: '.github/workflows/config/spellcheck_config.yml'
          output_file: /tmp/spellcheck_output.txt
          task_name: markdown
  
      - name: "Check spelling in changed files"
        uses: streetsidesoftware/cspell-action@v2
        with:
          config: '.github/workflows/config/spelling_allowlist.json'
          inline: error
          strict: true
          files: |
            '*.{md,txt,h,py,rst}'
            '**/*.{md,txt,h,py,rst}'
            'docs/sphinx/examples/**/*.{md,txt,cpp,h,py,rst}'
            '.github/ISSUE_TEMPLATE/*'
            '!tpls/**/*'
          incremental_files_only: true
          verbose: true
