on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: 'The version that the documentation corresponds to.'
      download_url:
        required: true
        type: string
        description: 'The url from which to download the built documentation.'
  workflow_run:
    workflows:
      - Deployments
    types:
      - completed

name: Docs publishing

concurrency:
    group: ${{ github.workflow }}
    cancel-in-progress: false

jobs:
  publish_docs:
    name: Publish documentation in a subfolder
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
  
    environment:
      name: github-pages
      url: 'https://nvidia.github.io/cuda-quantum/preview'
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: 'gh-pages'

      - name: Download docs artifact
        id: artifacts
        run: |
          target_folder=`echo ${{ github.event.workflow_run.head_branch }} | tr / -`
          actor=${{ github.event.workflow_run.actor }}
          triggering_actor=${{ github.event.workflow_run.triggering_actor }}
          sha=${{ github.event.workflow_run.head_sha }}

          artifacts_url=${{ github.event.workflow_run.artifacts_url }}
          artifacts=$(gh api $artifacts_url -q '.artifacts[] | {name: .name, url: .archive_download_url}')

          status=1
          for artifact in `echo "$artifacts"`; do
            name=`echo $artifact | jq -r '.name'`
            if [ "$name" == "cuda_quantum_docs" ]; then
              url=`echo $artifact | jq -r '.url'`
              gh api $url > cuda_quantum_docs.zip
              echo "download_url=$url" >> $GITHUB_OUTPUT

              rm -rf ${{ inputs.version }}
              unzip -d ${{ inputs.version }} cuda_quantum_docs.zip # FIXME
              rm -rf cuda_quantum_docs.zip

              git config --global user.name "Docs Bot"
              git config --global user.email "${{ github.event.workflow_run.actor.email }}"  # "${actor}@users.noreply.github.com"
              git add ${{ inputs.version }}
              git commit --allow-empty -m "..." # FIXME
              git push

              status=0
            fi
          done
          exit $status
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Setup Pages
        uses: actions/configure-pages@v2
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          name: docs_pages
          path: .
          retention-days: 1
        
      - name: Deploy docs
        id: docs_deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: docs_pages
        
