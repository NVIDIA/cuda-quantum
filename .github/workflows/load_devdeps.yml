on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      cache_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      container_registry:
        required: false
        type: string

name: Load or build the dev environment image

jobs:
  devdeps:
    name: Create or load dev environment image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up buildx runner
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata for dev environment
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.container_registry || 'ghcr.io' }}/${{ inputs.image_name }}
          flavor: |
            latest=true
            prefix=${{ inputs.toolchain }}-,onlatest=true
          tags: |
            # workflow dispatch is covered by these
            type=schedule,enable=true,pattern=nightly
            type=ref,enable=true,event=branch
            type=ref,enable=true,prefix=${{ inputs.toolchain }}-pr-,event=pr
            type=ref,enable=true,event=tag

      - name: Log in to the container registry
        uses: docker/login-action@v2
        if: inputs.container_registry != ''
        with:
          registry: ${{ inputs.container_registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build dev environment image and push if requested
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/build/devdeps.Dockerfile
          build-args: |
              toolchain=${{ inputs.toolchain }}
          push: ${{ inputs.container_registry != '' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64
          cache-from: |
            type=gha,scope=${{ inputs.cache_name }}
            type=gha,scope=cuda-quantum-devdeps-${{ inputs.toolchain }}
          cache-to: |
            type=gha,mode=max,scope=${{ inputs.cache_name }}
          outputs: type=docker,dest=/tmp/devdeps.tar      
          
      - name: Cache dev environment image
        uses: actions/cache/save@v3
        with:
          path: /tmp/devdeps.tar
          key: tar-devdeps-${{ inputs.toolchain }}-${{ github.sha }}
