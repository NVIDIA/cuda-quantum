name: Main Branch Coverage Report

on:
  push:
    branches:
      - main

jobs:
  metadata:
    name: Retrieve PR info
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  devdeps:
    name: Load dependencies
    needs: metadata
    strategy:
      matrix:
        platform: [amd64]
        toolchain: [clang16]
      fail-fast: false
    uses: ./.github/workflows/dev_environment.yml
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_READONLY_TOKEN: ${{ secrets.DOCKERHUB_READONLY_TOKEN }}
    with:
      platforms: linux/${{ matrix.platform }}
      dockerfile: build/devdeps.Dockerfile
      build_config_id: ${{ matrix.toolchain }}
      build_args: |
        toolchain=${{ matrix.toolchain }}
      checkout_submodules: true
      # needed only for the cloudposse GitHub action
      matrix_key: ${{ matrix.platform }}-${{ matrix.toolchain }}

  config:
    name: Configure build
    runs-on: ubuntu-latest
    needs: devdeps

    outputs:
      json: "${{ steps.read_json.outputs.result }}"

    steps:
      - uses: cloudposse/github-action-matrix-outputs-read@1.0.0
        id: read_json
        with:
          matrix-step-name: dev_environment

  coverage:
    name: Gen code coverage for main branch
    needs: config
    strategy:
      matrix:
        platform: [amd64]
        toolchain: [clang16]
    uses: ./.github/workflows/generate_cc.yml
    with:
      platform: linux/${{ matrix.platform }}
      devdeps_image: ${{ fromJson(needs.config.outputs.json).image_hash[format('{0}-{1}', matrix.platform, matrix.toolchain)] }}
      devdeps_cache: ${{ fromJson(needs.config.outputs.json).cache_key[format('{0}-{1}', matrix.platform, matrix.toolchain)] }}
      devdeps_archive: ${{ fromJson(needs.config.outputs.json).tar_archive[format('{0}-{1}', matrix.platform, matrix.toolchain)] }}
      export_environment: false
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
