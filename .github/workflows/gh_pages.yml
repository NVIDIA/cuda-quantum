jobs:
  build:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
      with:
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    - name: Install dependencies
      run: |
        sudo apt-get update;
        sudo apt-get install pandoc
        python -m pip install --upgrade pip
        pip install .[doc]
    - name: Build and Commit
      uses: sphinx-notes/pages@master
      with:
        documentation_path: doc/source
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages

-----------------------

      - name: Deploy to PR preview
        uses: actions/deploy-pages@v2
        with:
          artifact_name: cuda_quantum_docs
          token: ${{ github.token }} # ...

      - name: Comment on PR
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: "Creating docs preview ..."


https://htmlpreview.github.io/?https://github.com/NVIDIA/cuda-quantum/blob/live/docs/index.html

  docs:
    name: ...
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.docs_deployment.outputs.page_url }}

    steps:

      - name: Deploy docs
        id: docs_deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: cuda_quantum_docs

      - name: Create job summary
        run: |
          echo "## Documentation" >> $GITHUB_STEP_SUMMARY
          echo "Documentation has been deployed to ${{ steps.docs_deployment.outputs.page_url }}." >> $GITHUB_STEP_SUMMARY

-----------------------

on:
  # The idea for now is to have the docs uploaded to a "staging area"
  # when main and release branches are updated, and trigger the actual 
  # publishing manually after confirming all looks good.
  workflow_dispatch:
    inputs:
      source:
        type: string
        description: The staging directory on the live/docs branch.
  push:
    branches:
      - 'main'
      - 'releases/*'

name: Docs preview and deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PR_PATH: pull/${{github.event.number}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set env variables
        run: |
          echo "BASE_URL=https://${{ github.actor }}.github.io/${{ github.event.repository.name }}/${{ env.PR_PATH }}/" >> $GITHUB_ENV

      - name: Deploy to PR preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          destination_dir: ${{ env.PR_PATH }} # TODO you need to set this if you're using a custom domain. Otherwise you can remove it.

      - name: Update comment
        uses: hasura/comment-progress@v2.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: deploy-preview
          message: "A preview of ${{ github.event.after }} is uploaded and can be seen here:\n\n ${{ env.BASE_URL }} \n\nChanges may take a few minutes to propagate. The source is here: https://github.com/${{ github.repository }}/tree/live/docs/${{ env.PR_PATH }}/"