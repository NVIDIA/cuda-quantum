Search.setIndex({"docnames": ["api/api", "api/default_ops", "api/languages/cpp_api", "api/languages/python_api", "applications/python/afqmc", "applications/python/bernstein_vazirani", "applications/python/cost_minimization", "applications/python/deutschs_algorithm", "applications/python/digitized_counterdiabatic_qaoa", "applications/python/divisive_clustering_coresets", "applications/python/hadamard_test", "applications/python/hybrid_qnns", "applications/python/krylov", "applications/python/logical_aim_sqale", "applications/python/qaoa", "applications/python/quantum_fourier_transform", "applications/python/quantum_teleportation", "applications/python/quantum_volume", "applications/python/readout_error_mitigation", "applications/python/shors", "applications/python/trotter", "applications/python/unitary_compilation_diffusion_models", "applications/python/vqe", "applications/python/vqe_advanced", "examples/python/executing_kernels", "examples/python/executing_photonic_kernels", "examples/python/measuring_kernels", "examples/python/noisy_simulations", "examples/python/operators", "examples/python/optimizers_gradients", "examples/python/performance_optimizations", "examples/python/visualization", "index", "releases", "specification/cudaq", "specification/cudaq/algorithmic_primitives", "specification/cudaq/control_flow", "specification/cudaq/dynamic_kernels", "specification/cudaq/examples", "specification/cudaq/kernels", "specification/cudaq/machine_model", "specification/cudaq/namespace", "specification/cudaq/operations", "specification/cudaq/operators", "specification/cudaq/patterns", "specification/cudaq/platform", "specification/cudaq/synthesis", "specification/cudaq/types", "specification/index", "specification/quake-dialect", "using/applications", "using/backends/backends", "using/backends/dynamics", "using/backends/hardware", "using/backends/nvqc", "using/backends/platform", "using/backends/simulators", "using/basics/basics", "using/basics/build_kernel", "using/basics/kernel_intro", "using/basics/run_kernel", "using/basics/troubleshooting", "using/examples/building_kernels", "using/examples/examples", "using/examples/expectation_values", "using/examples/hardware_providers", "using/examples/introduction", "using/examples/multi_control", "using/examples/multi_gpu_workflows", "using/examples/photonic_operations", "using/examples/quantum_operations", "using/extending/cudaq_ir", "using/extending/extending", "using/extending/mlir_pass", "using/extending/nvqir_simulator", "using/install/data_center_install", "using/install/install", "using/install/local_installation", "using/integration/cmake_app", "using/integration/cuda_gpu", "using/integration/integration", "using/integration/libraries", "using/quick_start", "versions"], "filenames": ["api/api.rst", "api/default_ops.rst", "api/languages/cpp_api.rst", "api/languages/python_api.rst", "applications/python/afqmc.ipynb", "applications/python/bernstein_vazirani.ipynb", "applications/python/cost_minimization.ipynb", "applications/python/deutschs_algorithm.ipynb", "applications/python/digitized_counterdiabatic_qaoa.ipynb", "applications/python/divisive_clustering_coresets.ipynb", "applications/python/hadamard_test.ipynb", "applications/python/hybrid_qnns.ipynb", "applications/python/krylov.ipynb", "applications/python/logical_aim_sqale.ipynb", "applications/python/qaoa.ipynb", "applications/python/quantum_fourier_transform.ipynb", "applications/python/quantum_teleportation.ipynb", "applications/python/quantum_volume.ipynb", "applications/python/readout_error_mitigation.ipynb", "applications/python/shors.ipynb", "applications/python/trotter.ipynb", "applications/python/unitary_compilation_diffusion_models.ipynb", "applications/python/vqe.ipynb", "applications/python/vqe_advanced.ipynb", "examples/python/executing_kernels.ipynb", "examples/python/executing_photonic_kernels.ipynb", "examples/python/measuring_kernels.ipynb", "examples/python/noisy_simulations.ipynb", "examples/python/operators.ipynb", "examples/python/optimizers_gradients.ipynb", "examples/python/performance_optimizations.ipynb", "examples/python/visualization.ipynb", "index.rst", "releases.rst", "specification/cudaq.rst", "specification/cudaq/algorithmic_primitives.rst", "specification/cudaq/control_flow.rst", "specification/cudaq/dynamic_kernels.rst", "specification/cudaq/examples.rst", "specification/cudaq/kernels.rst", "specification/cudaq/machine_model.rst", "specification/cudaq/namespace.rst", "specification/cudaq/operations.rst", "specification/cudaq/operators.rst", "specification/cudaq/patterns.rst", "specification/cudaq/platform.rst", "specification/cudaq/synthesis.rst", "specification/cudaq/types.rst", "specification/index.rst", "specification/quake-dialect.md", "using/applications.rst", "using/backends/backends.rst", "using/backends/dynamics.rst", "using/backends/hardware.rst", "using/backends/nvqc.rst", "using/backends/platform.rst", "using/backends/simulators.rst", "using/basics/basics.rst", "using/basics/build_kernel.rst", "using/basics/kernel_intro.rst", "using/basics/run_kernel.rst", "using/basics/troubleshooting.rst", "using/examples/building_kernels.rst", "using/examples/examples.rst", "using/examples/expectation_values.rst", "using/examples/hardware_providers.rst", "using/examples/introduction.rst", "using/examples/multi_control.rst", "using/examples/multi_gpu_workflows.rst", "using/examples/photonic_operations.rst", "using/examples/quantum_operations.rst", "using/extending/cudaq_ir.rst", "using/extending/extending.rst", "using/extending/mlir_pass.rst", "using/extending/nvqir_simulator.rst", "using/install/data_center_install.rst", "using/install/install.rst", "using/install/local_installation.rst", "using/integration/cmake_app.rst", "using/integration/cuda_gpu.rst", "using/integration/integration.rst", "using/integration/libraries.rst", "using/quick_start.rst", "versions.rst"], "titles": ["Code documentation", "Quantum Operations", "CUDA-Q C++ API", "CUDA-Q Python API", "Quantum Enhanced Auxiliary Field Quantum Monte Carlo", "Bernstein-Vazirani Algorithm", "Cost Minimization", "Deutsch\u2019s Algorithm", "Molecular docking via DC-QAOA", "Divisive Clustering With Coresets Using CUDA-Q", "Using the Hadamard Test to Determine Quantum Krylov Subspace Decomposition Matrix Elements", "Hybrid Quantum Neural Networks", "Multi-reference Quantum Krylov Algorithm - <span class=\"math notranslate nohighlight\">\\(H_2\\)</span> Molecule", "Anderson Impurity Model ground state solver on Infleqtion\u2019s Sqale", "Max-Cut with QAOA", "Quantum Fourier Transform", "Quantum Teleporation", "Quantum Volume", "Readout Error Mitigation", "Factoring Integers With Shor\u2019s Algorithm", "Computing Magnetization With The Suzuki-Trotter Approximation", "Compiling Unitaries Using Diffusion Models", "Variational Quantum Eigensolver", "VQE with gradients, active spaces, and gate fusion", "Executing Quantum Circuits", "Executing Quantum Photonic Circuits", "Measurements", "Noisy Simulation", "Operators", "Optimizers and Gradients", "Optimizing Performance", "Visualization", "CUDA-Q", "CUDA-Q Releases", "Language Specification", "<span class=\"section-number\">12. </span>Quantum Algorithmic Primitives", "<span class=\"section-number\">8. </span>Control Flow", "<span class=\"section-number\">9. </span>Just-in-Time Kernel Creation", "<span class=\"section-number\">13. </span>Example Programs", "<span class=\"section-number\">6. </span>Quantum Kernels", "<span class=\"section-number\">1. </span>Machine Model", "<span class=\"section-number\">2. </span>Namespace and Standard", "<span class=\"section-number\">5. </span>Quantum Intrinsic Operations", "<span class=\"section-number\">4. </span>Quantum Operators", "<span class=\"section-number\">10. </span>Common Quantum Programming Patterns", "<span class=\"section-number\">11. </span>Quantum Platform", "<span class=\"section-number\">7. </span>Sub-circuit Synthesis", "<span class=\"section-number\">3. </span>Quantum Types", "Specifications", "Quake Dialect", "CUDA-Q Applications", "CUDA-Q Backends", "CUDA-Q Dynamics", "CUDA-Q Hardware Backends", "NVIDIA Quantum Cloud", "Multi-Processor Platforms", "CUDA-Q Simulation Backends", "CUDA-Q Basics", "Building your first CUDA-Q Program", "What is a CUDA-Q kernel?", "Running your first CUDA-Q Program", "Troubleshooting", "Building Kernels", "CUDA-Q by Example", "Computing Expectation Values", "Using Quantum Hardware Providers", "Introduction", "Multi-control Synthesis", "Multi-GPU Workflows", "Photonics 101", "Quantum Computing 101", "Working with the CUDA-Q IR", "Extending CUDA-Q", "Create your own CUDA-Q Compiler Pass", "Extending CUDA-Q with a new Simulator", "Installation from Source", "Installation Guide", "Local Installation", "CUDA-Q and CMake", "Using CUDA and CUDA-Q in a Project", "Integration with other Software Tools", "Integrating with Third-Party Libraries", "Quick Start", "CUDA-Q Versions"], "terms": {"c": [0, 1, 3, 4, 9, 12, 14, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 77, 78, 79, 82, 83], "python": [0, 1, 2, 9, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 50, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 74, 81, 82, 83], "quantum": [0, 3, 8, 14, 18, 20, 21, 23, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 40, 46, 48, 49, 51, 52, 53, 56, 58, 59, 60, 62, 63, 64, 66, 68, 71, 74, 75, 77, 78, 79, 81, 82, 83], "oper": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 44, 46, 47, 48, 49, 53, 54, 56, 58, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 82, 83], "cuda": [1, 6, 7, 10, 11, 12, 14, 15, 17, 20, 24, 25, 27, 30, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 62, 64, 65, 66, 67, 68, 69, 70, 80], "q": [1, 6, 7, 10, 11, 12, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 30, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 55, 61, 62, 64, 65, 66, 67, 68, 69, 70, 80], "provid": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 15, 18, 19, 20, 21, 22, 27, 28, 29, 32, 34, 35, 37, 40, 42, 43, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 63, 64, 66, 67, 69, 71, 73, 74, 75, 77, 78, 81], "default": [1, 2, 3, 20, 23, 24, 26, 31, 35, 39, 42, 47, 52, 53, 54, 55, 60, 65, 66, 71, 74, 75, 77, 79, 81, 82], "set": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 17, 18, 21, 23, 24, 30, 31, 32, 35, 37, 39, 42, 49, 52, 54, 55, 56, 58, 60, 65, 75, 77, 81, 82], "These": [1, 2, 8, 12, 13, 14, 17, 19, 21, 23, 27, 29, 34, 39, 42, 46, 47, 49, 51, 54, 55, 56, 71, 75, 77], "can": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83], "us": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 49, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 78, 81, 82, 83], "kernel": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 56, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 79, 81, 82, 83], "librari": [1, 2, 8, 11, 13, 19, 22, 25, 31, 32, 33, 34, 38, 39, 41, 46, 47, 52, 56, 64, 71, 73, 74, 77, 79, 80, 83], "sinc": [1, 2, 4, 5, 7, 13, 14, 15, 16, 18, 19, 21, 24, 47, 51, 55, 56, 59, 64, 65, 68, 71, 77, 78, 81], "intrins": [1, 39, 46, 47, 49], "nativ": [1, 34, 40, 42, 43, 78], "support": [1, 2, 3, 4, 18, 24, 31, 32, 33, 34, 39, 40, 42, 44, 47, 52, 53, 59, 60, 65, 66, 69, 70, 73, 81, 82, 83], "specif": [1, 2, 3, 9, 12, 21, 26, 32, 35, 39, 41, 42, 43, 44, 47, 49, 52, 53, 54, 55, 56, 59, 60, 62, 66, 70, 71, 74, 75, 77, 79, 81], "target": [1, 2, 3, 7, 8, 9, 10, 11, 12, 14, 23, 24, 25, 27, 30, 31, 33, 35, 42, 45, 49, 52, 53, 54, 55, 56, 60, 62, 64, 65, 67, 70, 71, 73, 74, 75, 77, 82, 83], "depend": [1, 3, 7, 9, 12, 14, 16, 19, 20, 21, 26, 30, 32, 35, 40, 49, 54, 55, 56, 81, 82], "backend": [1, 2, 5, 6, 8, 9, 10, 13, 17, 23, 29, 30, 32, 33, 35, 52, 55, 60, 65, 68, 71, 74, 75, 77, 81, 82, 83], "architectur": [1, 2, 11, 32, 34, 40, 49, 53, 55, 65, 68, 70, 74, 75, 77, 82], "nvq": [1, 33, 35, 38, 53, 54, 55, 56, 60, 64, 65, 66, 67, 71, 74, 77, 78, 79, 81, 82, 83], "compil": [1, 2, 3, 9, 13, 32, 33, 34, 35, 38, 39, 40, 44, 46, 47, 53, 54, 55, 56, 60, 64, 65, 66, 67, 71, 74, 75, 77, 78, 79, 82, 83], "automat": [1, 3, 13, 23, 40, 53, 55, 56, 65, 75, 77, 81], "decompos": [1, 4, 17, 21], "appropri": [1, 2, 7, 8, 9, 15, 16, 34, 42, 55, 62, 75, 77], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 60, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 79, 81, 82, 83], "section": [1, 7, 8, 10, 13, 15, 19, 21, 23, 28, 30, 37, 55, 56, 62, 75, 77, 81, 82], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 31, 33, 35, 39, 51, 52, 53, 54, 56, 62, 65, 68, 69, 70, 75, 77, 81, 82, 83], "implement": [1, 2, 3, 4, 7, 10, 12, 14, 15, 16, 17, 19, 20, 21, 27, 34, 35, 40, 41, 42, 44, 46, 47, 49, 53, 56, 65, 66, 69, 71, 73, 74, 75, 77, 81], "transform": [1, 4, 7, 11, 12, 21, 23, 32, 34, 38, 71, 73], "state": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 31, 32, 33, 35, 39, 40, 42, 47, 49, 52, 53, 54, 58, 60, 62, 64, 65, 66, 68, 74, 75, 81, 82, 83], "ar": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 81, 82, 83], "templat": [1, 2, 22, 35, 37, 38, 39, 42, 46, 47, 66, 71, 73, 74, 79, 81], "argument": [1, 2, 3, 7, 9, 14, 16, 18, 24, 26, 31, 35, 37, 39, 46, 47, 52, 53, 58, 60, 64, 67, 68, 71, 74, 77, 81], "allow": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 20, 21, 23, 24, 29, 33, 35, 37, 39, 40, 52, 56, 58, 59, 60, 67, 68, 69, 70, 71, 73, 77, 78, 83], "invok": [1, 2, 3, 35, 37, 39, 44, 53, 56, 66, 71, 81], "version": [1, 3, 4, 5, 11, 13, 14, 15, 19, 21, 24, 25, 32, 33, 35, 44, 51, 52, 53, 54, 55, 56, 60, 71, 74, 75, 77, 78, 81, 82], "see": [1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 17, 19, 21, 23, 30, 31, 33, 35, 37, 39, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 66, 68, 69, 70, 71, 73, 75, 77, 78, 79, 81, 82, 83], "addition": [1, 19, 33, 53, 77, 83], "overload": [1, 2, 3, 35, 42, 43, 47, 49], "broadcast": [1, 2, 3, 12, 14, 42], "singl": [1, 2, 3, 4, 5, 9, 12, 13, 15, 16, 17, 20, 22, 23, 30, 31, 35, 38, 39, 40, 42, 47, 52, 53, 54, 55, 60, 62, 64, 65, 66, 68, 69, 70, 71, 81], "across": [1, 2, 3, 7, 10, 21, 23, 33, 42, 54, 55, 56, 65, 75, 77, 83], "vector": [1, 2, 3, 4, 6, 9, 10, 11, 12, 16, 17, 21, 31, 35, 37, 38, 39, 42, 45, 47, 49, 53, 54, 55, 62, 65, 66, 67, 68, 74, 75], "For": [1, 2, 3, 4, 5, 7, 9, 10, 13, 14, 15, 17, 18, 19, 21, 28, 31, 33, 35, 37, 42, 49, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 74, 75, 77, 79, 81, 82, 83], "exampl": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 42, 48, 49, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 69, 70, 73, 74, 75, 77, 78, 79, 81, 82, 83], "cudaq": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 39, 41, 44, 45, 46, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82], "qvector": [1, 2, 3, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 35, 38, 39, 42, 46, 54, 55, 56, 58, 60, 62, 64, 65, 67, 68, 70, 71, 81, 82], "flip": [1, 2, 3, 6, 13, 17, 18, 27, 56, 70], "each": [1, 2, 3, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 29, 31, 33, 35, 37, 40, 45, 49, 52, 53, 54, 55, 56, 60, 65, 68, 70, 71, 75, 77, 81, 82, 83], "thi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 47, 49, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 77, 78, 79, 81, 82, 83], "pauli": [1, 2, 3, 8, 9, 10, 12, 14, 16, 20, 24, 35, 43, 52, 60, 70], "matrix": [1, 2, 3, 4, 13, 14, 16, 17, 20, 21, 24, 25, 27, 31, 32, 33, 51, 52, 54, 62, 70, 74, 83], "It": [1, 2, 4, 7, 9, 15, 16, 17, 18, 20, 23, 32, 33, 35, 42, 47, 49, 52, 55, 60, 62, 65, 69, 70, 71, 74, 77, 79, 82, 83], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83], "also": [1, 2, 3, 7, 9, 13, 15, 18, 19, 21, 22, 24, 27, 29, 31, 33, 35, 39, 43, 52, 53, 54, 55, 56, 58, 59, 60, 62, 65, 68, 70, 71, 73, 74, 75, 77, 79, 82, 83], "known": [1, 2, 19, 21, 23, 39, 66, 71], "NOT": [1, 35, 42, 70], "gate": [1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 32, 33, 42, 46, 47, 49, 53, 56, 58, 62, 66, 67, 74, 83], "appli": [1, 2, 3, 5, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 35, 38, 39, 42, 46, 49, 54, 55, 56, 58, 62, 65, 66, 67, 69, 70, 71, 74], "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 39, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 81, 82, 83], "1": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 81, 82, 83], "rotat": [1, 3, 9, 10, 13, 14, 15, 18, 19, 27, 31, 42, 43, 58, 64, 74], "\u03c0": 1, "about": [1, 2, 3, 7, 9, 18, 19, 20, 21, 22, 31, 33, 35, 49, 52, 53, 54, 55, 56, 59, 60, 65, 68, 75, 77, 79, 80, 81, 82, 83], "axi": [1, 11, 21, 22, 31], "enabl": [1, 2, 3, 5, 9, 13, 15, 24, 25, 34, 35, 37, 39, 40, 42, 44, 45, 46, 47, 51, 52, 53, 55, 56, 59, 60, 64, 65, 68, 71, 74, 75, 77, 81, 82], "one": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 31, 33, 35, 37, 38, 40, 42, 45, 49, 52, 53, 54, 55, 56, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 81, 82, 83], "superposit": [1, 5, 7, 14, 31, 35, 38, 47, 55, 58, 60, 69, 70], "comput": [1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 45, 47, 49, 54, 55, 56, 59, 60, 63, 68, 69, 74, 75, 79, 81, 82, 83], "basi": [1, 2, 3, 4, 10, 12, 13, 15, 18, 21, 23, 24, 26, 27, 47, 54, 55, 69, 70], "sqrt": [1, 3, 5, 7, 10, 12, 13, 15, 16, 18, 27, 31, 38, 52, 56, 65, 70, 82], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 60, 62, 64, 65, 67, 68, 69, 70, 71, 75, 77, 79, 81, 82, 83], "an": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 40, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 82, 83], "arbitrari": [1, 2, 3, 21, 33, 52, 53, 67, 81, 83], "\u03bb": 1, "exp": [1, 2, 12, 19, 38, 43, 52, 69], "i\u03bb": 1, "math": [1, 4, 7, 19, 54, 69], "pi": [1, 8, 9, 11, 14, 15, 17, 19, 20, 22, 23, 25, 29, 31, 38, 39, 44, 46, 52, 53, 54, 65, 69], "std": [1, 2, 3, 35, 37, 38, 39, 42, 43, 45, 46, 47, 54, 55, 56, 60, 65, 66, 68, 73, 74, 79, 81], "number": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 31, 35, 38, 43, 45, 47, 49, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 74, 77, 82], "\u03b8": 1, "co": [1, 15, 20, 31, 52, 69], "isin": 1, "sin": [1, 15, 31], "its": [1, 2, 3, 4, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 27, 33, 34, 35, 45, 47, 49, 50, 54, 55, 56, 60, 62, 65, 66, 70, 71, 74, 75, 77, 81, 82, 83], "4": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 62, 65, 68, 69, 71, 75, 77, 81, 83], "i\u03c0": 1, "two": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 29, 31, 40, 49, 52, 53, 55, 56, 60, 62, 64, 65, 67, 69, 70, 77, 81], "qubit_1": [1, 7, 14, 62], "qubit_2": [1, 16], "univers": [1, 2, 9, 16, 21, 54, 70], "three": [1, 10, 18, 19, 21, 23, 40, 53, 54, 64, 69], "paramet": [1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 17, 19, 21, 22, 24, 35, 39, 42, 47, 52, 53, 54, 56, 58, 62, 64, 65, 66, 68, 74, 75], "euler": [1, 52], "angl": [1, 2, 3, 6, 10, 13, 15, 18, 19, 29, 31, 38, 39, 42, 55, 58, 64, 65, 69], "theta": [1, 8, 9, 10, 11, 14, 15, 22, 23, 27, 29, 31, 35, 37, 38, 54, 55, 62, 64, 69], "phi": [1, 3, 4, 10, 35, 37, 53, 65, 69, 71], "\u03c6": 1, "lambda": [1, 2, 8, 9, 12, 13, 14, 18, 19, 20, 23, 29, 35, 38, 39, 44, 52, 65, 67, 68, 71], "i\u03c6": 1, "np": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 38, 39, 44, 46, 52, 53, 55, 56, 62, 65, 68, 75], "m_pi": [1, 38, 46, 65], "m_pi_2": [1, 38, 39, 54], "adj": [1, 42, 62], "method": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 28, 29, 35, 37, 42, 47, 52, 53, 55, 56, 60, 62, 65, 66], "ani": [1, 2, 3, 9, 12, 14, 19, 20, 21, 23, 24, 27, 29, 31, 35, 39, 41, 42, 44, 46, 47, 52, 53, 54, 56, 58, 60, 61, 62, 65, 66, 67, 74, 75, 77, 81, 82], "alloc": [1, 2, 3, 6, 14, 21, 35, 37, 38, 39, 40, 47, 55, 56, 58, 60, 66, 67, 74], "now": [1, 4, 5, 7, 9, 13, 14, 15, 16, 19, 21, 22, 23, 33, 49, 53, 60, 65, 66, 67, 68, 77, 82, 83], "again": [1, 5, 23, 24, 35, 49, 77, 79], "initi": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 19, 20, 22, 23, 29, 35, 52, 53, 55, 62, 65, 68, 69, 70, 75, 77], "ctrl": [1, 2, 5, 7, 14, 17, 19, 24, 29, 31, 35, 37, 38, 42, 54, 55, 58, 62, 64, 65, 66, 67, 70, 71, 77, 82], "condit": [1, 2, 15, 16, 21, 27, 35, 36, 37, 39, 40, 56, 59, 70, 71], "more": [1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 19, 21, 23, 28, 31, 33, 37, 40, 42, 43, 49, 53, 54, 55, 56, 59, 60, 62, 65, 68, 70, 75, 77, 79, 81, 82, 83], "wikipedia": [1, 52], "entri": [1, 3, 12, 35, 39, 55, 62, 65, 71, 77, 81], "ctrl_1": 1, "ctrl_2": 1, "00": [1, 4, 9, 13, 16, 24, 25, 27, 29, 56, 60, 68, 69, 70, 81, 82], "11": [1, 3, 4, 9, 11, 13, 16, 17, 18, 20, 21, 23, 24, 25, 27, 29, 31, 35, 56, 60, 68, 69, 70, 71, 75, 77, 81, 82], "onli": [1, 2, 3, 5, 7, 9, 16, 18, 19, 21, 23, 24, 26, 31, 33, 35, 39, 40, 44, 47, 49, 52, 53, 54, 55, 59, 65, 70, 71, 73, 75, 77, 81, 82, 83], "both": [1, 3, 4, 5, 7, 11, 13, 19, 40, 49, 53, 55, 56, 70, 75, 77, 79], "000": [1, 15, 16, 18, 19, 54, 60], "111": [1, 9, 15, 16, 18, 19], "follow": [1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 33, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83], "common": [1, 3, 9, 10, 18, 19, 21, 22, 23, 35, 39, 42, 43, 71, 75], "convent": [1, 8, 11, 14, 24, 25], "all": [1, 2, 3, 9, 13, 16, 17, 18, 19, 20, 21, 23, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 49, 53, 54, 55, 56, 60, 62, 64, 65, 68, 69, 70, 71, 75, 77, 78, 79, 81, 82, 83], "howev": [1, 4, 9, 13, 15, 16, 18, 21, 23, 24, 33, 49, 52, 53, 55, 81, 83], "behavior": [1, 2, 3, 9, 23, 33, 56, 83], "chang": [1, 2, 5, 9, 13, 15, 19, 30, 33, 35, 39, 52, 60, 77, 82, 83], "instead": [1, 2, 4, 9, 27, 41, 44, 53, 55, 56, 60, 75, 77, 81], "when": [1, 2, 3, 9, 12, 13, 14, 18, 19, 21, 33, 35, 40, 47, 49, 54, 55, 56, 60, 64, 65, 66, 71, 74, 75, 77, 81, 82, 83], "negat": [1, 2, 3, 42, 46, 47], "polar": [1, 42, 46, 56], "syntax": [1, 9, 33, 34, 39, 40, 42, 44, 53, 62, 65, 79, 83], "preced": [1, 42, 53], "01": [1, 4, 7, 13, 16, 21, 27, 29, 56, 69, 70], "10": [1, 4, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 27, 29, 31, 35, 38, 39, 56, 60, 62, 65, 66, 68, 69, 70, 71, 75, 77, 79], "notat": [1, 16, 69, 70], "context": [1, 2, 11, 40, 55, 56, 74], "valid": [1, 2, 3, 32, 39, 53, 56, 62, 65, 75, 77, 81], "either": [1, 7, 11, 14, 19, 40, 53, 55, 56, 65, 69, 70, 75, 77, 82], "similarli": [1, 7, 23, 55, 61, 70], "condition": 1, "respect": [1, 2, 3, 4, 8, 13, 14, 19, 23, 29, 35, 52, 53, 55, 60, 64, 68, 69, 70, 75, 77, 82], "e": [1, 2, 3, 4, 7, 8, 9, 10, 12, 14, 15, 16, 18, 19, 20, 21, 22, 28, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 49, 52, 53, 54, 55, 56, 65, 71, 74, 75, 77, 81, 82], "project": [1, 56, 74, 75, 77, 78, 81], "onto": [1, 70], "eigenvector": [1, 2, 10, 12], "non": [1, 2, 3, 8, 10, 12, 18, 19, 33, 35, 39, 40, 47, 55, 56, 60, 64, 66, 83], "linear": [1, 5, 9, 11, 12, 15, 22, 27, 54, 60, 65, 69, 70], "avail": [1, 2, 3, 8, 9, 10, 21, 23, 29, 32, 33, 34, 35, 39, 40, 42, 45, 46, 47, 48, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 71, 75, 77, 82, 83], "first": [1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 31, 32, 35, 47, 53, 54, 55, 56, 57, 62, 64, 65, 66, 67, 71, 77, 82], "api": [1, 13, 24, 28, 31, 32, 33, 35, 37, 41, 42, 45, 47, 52, 53, 54, 55, 56, 60, 62, 65, 66, 74, 75, 77, 79, 81, 83], "regist": [1, 2, 3, 5, 10, 13, 15, 19, 22, 26, 35, 38, 40, 47, 53, 55, 62, 65, 66, 67, 71, 74], "outsid": [1, 9, 33, 77, 81, 83], "Then": [1, 7, 18, 21, 26, 53, 65, 73, 74], "within": [1, 2, 3, 13, 22, 33, 35, 39, 41, 43, 47, 53, 55, 56, 59, 60, 62, 65, 66, 70, 73, 75, 77, 78, 79, 81, 82, 83], "like": [1, 2, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 29, 30, 33, 35, 39, 47, 53, 55, 60, 62, 65, 66, 68, 69, 70, 71, 75, 77, 78, 81, 82, 83], "built": [1, 2, 4, 6, 8, 9, 12, 15, 23, 24, 27, 33, 53, 56, 59, 60, 75, 81, 82, 83], "abov": [1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 35, 37, 42, 52, 53, 54, 55, 56, 60, 62, 64, 65, 67, 69, 70, 71, 74, 75, 77, 79, 81, 82], "level": [1, 2, 3, 13, 23, 25, 30, 33, 34, 35, 40, 42, 52, 53, 54, 55, 56, 69, 71, 74, 78, 83], "register_oper": [1, 13, 62], "accept": [1, 2, 3, 23, 24, 58, 75, 77, 82], "identifi": [1, 2, 3, 4, 13, 14, 19, 21, 75, 77], "string": [1, 2, 3, 5, 19, 25, 28, 31, 35, 37, 38, 45, 52, 56, 60, 66, 71, 77, 81], "numpi": [1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 38, 52, 62, 65, 68, 75], "arrai": [1, 2, 3, 4, 7, 10, 12, 13, 15, 16, 17, 18, 21, 24, 25, 27, 29, 47, 49, 52, 53, 55, 56, 62, 65, 66, 68, 71], "complex": [1, 2, 3, 4, 7, 8, 12, 16, 20, 27, 43, 49, 52, 55, 60, 62, 68, 69, 70, 81], "A": [1, 2, 3, 4, 7, 8, 9, 10, 12, 14, 16, 17, 18, 19, 20, 22, 29, 30, 31, 35, 38, 39, 42, 49, 52, 53, 60, 62, 65, 67, 68, 69, 70, 73, 74, 75, 77], "1d": [1, 2], "interpret": [1, 8, 59, 65, 75], "row": [1, 2, 3, 31, 62], "major": [1, 75], "import": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 43, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 69, 70, 71, 75, 81, 82], "custom_h": 1, "custom_x": [1, 62], "def": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 38, 39, 44, 46, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 77, 82], "bell": [1, 13, 16, 35, 81], "sampl": [1, 2, 3, 5, 7, 8, 9, 13, 14, 17, 18, 19, 21, 27, 37, 53, 54, 55, 56, 57, 59, 62, 65, 66, 67, 68, 69, 70, 74, 77, 81, 82], "dump": [1, 2, 3, 27, 35, 38, 54, 55, 56, 60, 65, 66, 68, 81, 82], "macro": [1, 74], "cudaq_register_oper": 1, "uniqu": [1, 2, 3, 9, 14, 18, 21, 35, 40, 42, 47, 55, 79], "name": [1, 2, 3, 9, 13, 14, 16, 19, 35, 37, 42, 45, 51, 52, 53, 54, 55, 56, 64, 68, 70, 71, 74, 75, 77, 78, 81, 82], "represent": [1, 2, 3, 15, 16, 21, 24, 25, 31, 35, 39, 49, 52, 56, 71, 73, 74], "includ": [1, 2, 3, 4, 12, 13, 14, 17, 23, 33, 35, 38, 47, 52, 54, 56, 58, 59, 60, 62, 64, 65, 66, 67, 71, 73, 74, 75, 77, 79, 81, 82, 83], "m_sqrt1_2": 1, "__qpu__": [1, 2, 35, 38, 39, 46, 54, 55, 56, 58, 60, 64, 65, 66, 67, 71, 81, 82], "void": [1, 2, 3, 35, 37, 38, 39, 42, 43, 45, 46, 47, 56, 58, 60, 65, 67, 71, 73, 74, 79, 81, 82], "bell_pair": [1, 2, 3], "r": [1, 4, 13, 18, 19, 42, 47, 53, 54, 55, 56, 64, 65, 71, 77], "int": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 35, 38, 39, 46, 47, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 67, 68, 71, 74, 75, 79, 81, 82], "main": [1, 4, 5, 9, 19, 21, 33, 35, 38, 49, 54, 56, 60, 64, 65, 66, 67, 71, 75, 77, 79, 81, 82, 83], "auto": [1, 2, 35, 37, 38, 39, 43, 46, 47, 54, 55, 56, 58, 60, 64, 65, 66, 67, 71, 73, 81, 82], "count": [1, 2, 3, 5, 8, 9, 10, 12, 13, 14, 18, 19, 24, 25, 35, 37, 38, 47, 53, 54, 55, 56, 60, 65, 66, 67, 68, 71, 74], "bit": [1, 2, 3, 4, 5, 7, 13, 16, 17, 18, 19, 24, 25, 27, 35, 38, 40, 47, 49, 55, 56, 65, 66, 67, 69, 70, 74], "printf": [1, 35, 38, 47, 55, 64, 66, 67, 75], "n": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 35, 37, 38, 39, 42, 43, 46, 54, 55, 56, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 79, 82], "data": [1, 2, 8, 11, 12, 13, 14, 15, 22, 32, 35, 39, 41, 43, 49, 55, 56, 64, 66, 67, 71, 74, 76, 77, 79, 81], "multi": [1, 4, 15, 16, 24, 25, 31, 32, 33, 34, 37, 40, 42, 46, 51, 52, 53, 54, 60, 62, 63, 64, 69, 70, 74, 75, 81, 82, 83], "msb": 1, "order": [1, 2, 3, 4, 9, 12, 13, 14, 16, 31, 35, 43, 52, 53, 56, 60, 64], "big": [1, 8, 17, 24], "endian": [1, 17, 24, 25], "show": [1, 8, 9, 11, 13, 14, 15, 16, 18, 21, 22, 23, 31, 52, 55, 62, 64, 65, 75, 77], "differ": [1, 2, 3, 7, 9, 10, 11, 12, 13, 15, 16, 18, 19, 23, 24, 29, 31, 49, 53, 54, 55, 59, 60, 65, 68, 75, 77, 79, 82], "test": [1, 9, 11, 12, 17, 18, 19, 23, 32, 37, 68, 75, 77], "cnot": [1, 5, 9, 42, 58, 62, 70, 81], "my_cnot": 1, "print": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 35, 38, 47, 52, 54, 55, 56, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 81, 82], "500": [1, 23, 70, 82], "exact": [1, 9, 10, 13, 17, 21, 56], "random": [1, 2, 3, 4, 5, 8, 9, 13, 14, 16, 17, 18, 19, 21, 22, 23, 29, 31, 55, 56, 68], "construct": [1, 2, 8, 9, 10, 12, 17, 18, 20, 23, 29, 31, 32, 33, 35, 36, 37, 39, 47, 49, 52, 55, 58, 59, 60, 62, 63, 66, 71, 83], "second": [1, 2, 3, 4, 7, 8, 9, 12, 14, 18, 20, 47, 52, 54, 56, 60, 62, 65], "1j": [1, 12, 13], "xy": [1, 31], "kron": [1, 18], "my_xi": 1, "custom_xy_test": 1, "undo": 1, "prior": [1, 56, 65, 69, 70, 75, 77, 82], "1000": [1, 3, 9, 11, 13, 17, 18, 21, 24, 25, 27, 35, 53, 56, 60, 66, 68, 69, 70, 82], "mycnot": 1, "myxi": 1, "hardwar": [1, 9, 15, 19, 21, 24, 32, 33, 51, 56, 60, 63, 81, 83], "synthes": [1, 3, 21, 42, 46, 71], "current": [1, 2, 3, 9, 31, 33, 35, 45, 53, 55, 56, 74, 77, 81, 83], "orca": [1, 2, 25, 33, 51, 56, 69, 83], "which": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 29, 31, 33, 35, 37, 40, 43, 47, 49, 52, 53, 55, 56, 62, 64, 65, 66, 68, 69, 70, 71, 74, 75, 77, 78, 81, 83], "doe": [1, 2, 3, 7, 9, 15, 16, 21, 31, 33, 35, 39, 47, 52, 54, 55, 75, 77, 79, 81, 82, 83], "increment": [1, 2, 68], "qumod": [1, 25, 69], "up": [1, 2, 3, 7, 9, 14, 15, 17, 21, 31, 37, 43, 52, 53, 56, 59, 64, 65, 68, 69, 71, 74, 77], "maximum": [1, 3, 8, 9, 21, 56, 69], "valu": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 29, 31, 32, 35, 37, 39, 43, 47, 49, 52, 54, 55, 56, 60, 63, 65, 68, 69, 70, 71, 75, 81, 82], "repres": [1, 2, 3, 4, 7, 8, 9, 14, 15, 16, 21, 27, 31, 35, 49, 52, 53, 56, 65, 69, 70, 71], "If": [1, 2, 3, 5, 7, 9, 11, 15, 16, 17, 18, 19, 20, 24, 26, 31, 35, 49, 52, 53, 54, 56, 60, 65, 68, 70, 75, 77, 81, 82], "where": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 30, 31, 34, 40, 42, 43, 47, 49, 52, 53, 56, 60, 62, 65, 68, 69, 70, 74, 75, 77, 79, 82], "alreadi": [1, 2, 3, 13, 19, 31, 69, 75, 77, 82], "ha": [1, 2, 3, 4, 5, 7, 9, 13, 14, 16, 17, 18, 19, 21, 24, 27, 29, 35, 42, 49, 53, 54, 56, 59, 60, 65, 68, 69, 70, 75, 77, 81], "effect": [1, 13, 21, 49, 56, 60, 68, 69, 70, 82], "rangl": [1, 4, 15, 18, 19, 21, 35, 82], "3": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 60, 62, 65, 67, 68, 69, 71, 74, 75, 77, 78, 82, 83], "cdot": [1, 5, 9, 12, 19], "d": [1, 2, 3, 9, 12, 16, 38, 39, 40, 47, 53, 65, 69, 75, 77], "reduc": [1, 2, 10, 13, 18, 19, 56], "minimum": [1, 14, 22, 54, 56, 69], "vacuum": [1, 65], "phase": [1, 2, 3, 5, 12, 15, 21, 42, 53, 65, 69], "shifter": [1, 65, 69], "add": [1, 2, 3, 9, 12, 14, 22, 27, 31, 33, 44, 52, 56, 65, 66, 69, 71, 73, 74, 75, 77, 83], "a_1": [1, 18, 19, 69], "creation": [1, 2, 4, 9, 34, 48, 52, 69, 74], "dagger": [1, 4, 10, 12, 21, 27, 44, 52, 69, 70], "shift": [1, 11, 54, 69, 77], "p": [1, 4, 8, 9, 10, 18, 27, 69, 75, 77], "left": [1, 2, 4, 5, 7, 10, 12, 13, 14, 15, 16, 24, 65, 69, 74, 77], "right": [1, 4, 10, 13, 14, 15, 25, 69], "17": [1, 9, 13, 16, 17, 18, 21, 31, 62, 71, 79], "beam": [1, 53, 65, 69], "splitter": [1, 53, 65, 69], "act": [1, 2, 3, 6, 7, 9, 14, 28, 49, 52, 69, 70], "togeth": [1, 18, 32, 56, 69, 71, 82], "parameter": [1, 2, 3, 8, 9, 10, 13, 14, 20, 22, 23, 35, 37, 39, 42, 52, 54, 59, 62, 64, 66, 68, 69], "relat": [1, 2, 9, 14, 19, 21, 69, 71], "reflect": [1, 38, 56], "a_2": [1, 19, 69], "b": [1, 9, 23, 29, 35, 62, 65, 69], "_": [1, 4, 7, 11, 13, 18, 19, 21, 25, 31, 52, 69], "rang": [1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 33, 38, 39, 46, 47, 52, 54, 55, 58, 62, 68, 69, 77, 82, 83], "34": [1, 9, 18], "return": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 29, 31, 35, 37, 38, 39, 42, 47, 49, 52, 54, 55, 56, 60, 64, 65, 66, 68, 69, 71, 73, 74, 75, 79, 81], "result": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 40, 49, 52, 53, 54, 55, 56, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 77, 81, 82], "input": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 16, 21, 23, 28, 29, 35, 37, 38, 39, 46, 47, 55, 60, 62, 64, 65, 68], "class": [2, 3, 4, 9, 11, 21, 35, 37, 39, 43, 45, 47, 55, 56, 73, 74], "spin_op": [2, 8, 28, 35, 38, 42, 54, 55, 60, 64], "gener": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 22, 24, 25, 28, 31, 35, 37, 38, 39, 40, 42, 43, 46, 48, 53, 54, 56, 59, 64, 65, 66, 67, 70, 71, 73, 77, 81], "sum": [2, 3, 4, 11, 12, 13, 14, 17, 18, 21, 28, 43, 47, 65, 69, 70], "tensor": [2, 3, 11, 18, 28, 33, 43, 54, 55, 74, 83], "product": [2, 3, 5, 18, 28, 32, 33, 43, 54, 82, 83], "expos": [2, 3, 9, 13, 35, 37, 43, 45, 49, 55, 74], "typic": [2, 21, 35, 47, 54, 58, 59, 64, 71, 78, 79], "algebra": [2, 43, 64, 70], "programm": [2, 3, 35, 36, 37, 39, 40, 42, 44, 45, 47, 53, 55, 66], "defin": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 52, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 74, 75, 77, 79, 81, 83], "primit": [2, 14, 34, 37, 40, 43, 47, 48, 55, 59, 81], "them": [2, 3, 8, 9, 10, 13, 16, 18, 21, 31, 33, 49, 52, 58, 70, 71, 75, 77, 79, 81, 82, 83], "compos": [2, 3, 11, 14, 21, 39, 40, 53, 65, 71], "larger": [2, 3, 7, 9, 10, 14, 21, 54, 56], "thereof": [2, 40, 43], "public": [2, 9, 35, 37, 43, 45, 47, 55, 73, 74, 77], "type": [2, 4, 5, 6, 7, 9, 13, 14, 15, 18, 20, 28, 34, 35, 37, 39, 40, 42, 43, 48, 52, 53, 55, 56, 58, 62, 64, 66, 70, 71, 74, 77, 81], "spin_op_term": 2, "bool": [2, 3, 13, 35, 39, 42, 43, 45, 55, 74, 81], "we": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 27, 31, 33, 35, 38, 42, 44, 49, 52, 53, 55, 56, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83], "term": [2, 3, 4, 5, 8, 12, 13, 14, 16, 19, 20, 23, 24, 35, 42, 52, 53, 55, 60, 64, 77], "binari": [2, 3, 5, 9, 11, 14, 15, 19, 24, 33, 53, 75, 79, 82, 83], "symplect": 2, "form": [2, 3, 9, 21, 23, 24, 31, 33, 35, 42, 47, 49, 52, 56, 71, 83], "size": [2, 3, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 35, 37, 38, 39, 40, 47, 54, 55, 56, 65, 66, 68, 77, 81], "nqubit": [2, 37, 38, 74], "element": [2, 3, 4, 15, 18, 19, 21, 29, 32, 35, 47, 55, 70], "x": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 35, 37, 38, 39, 42, 43, 44, 46, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 67, 70, 71, 75, 77, 79, 82], "next": [2, 4, 5, 8, 9, 10, 12, 13, 17, 19, 20, 21, 23, 29, 31, 49, 65, 66, 71, 75], "z": [2, 3, 6, 8, 9, 11, 12, 13, 14, 16, 20, 21, 22, 24, 26, 27, 28, 29, 31, 35, 38, 42, 43, 52, 54, 55, 56, 60, 64, 66, 68, 75], "y": [2, 3, 5, 7, 8, 9, 11, 12, 13, 15, 18, 19, 20, 24, 26, 28, 29, 31, 35, 38, 42, 43, 52, 54, 55, 60, 64, 66, 75, 77, 79, 82], "site": [2, 3, 8, 13, 65, 82], "csr_spmatrix": 2, "tupl": [2, 3, 9, 13, 29, 35, 39, 65], "doubl": [2, 3, 22, 23, 35, 37, 38, 39, 42, 43, 46, 54, 55, 56, 60, 64, 65, 74, 75, 77], "size_t": [2, 35, 37, 39, 43, 45, 47, 55, 65, 66, 74, 79, 81], "typedef": 2, "zero": [2, 3, 5, 6, 10, 11, 12, 18, 19, 21, 40, 52, 55, 60, 69, 70], "spars": 2, "function": [2, 3, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 33, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 60, 64, 66, 68, 69, 71, 74, 79, 81, 83], "pair": [2, 3, 8, 12, 14, 16, 17, 39, 45, 49, 77], "const": [2, 35, 37, 38, 39, 42, 43, 45, 47, 54, 56, 65, 73, 74, 79, 81], "termdata": 2, "constructor": [2, 3], "take": [2, 3, 4, 5, 7, 9, 12, 13, 14, 15, 17, 18, 20, 23, 29, 30, 33, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 49, 53, 56, 59, 60, 62, 64, 65, 66, 67, 68, 71, 75, 77, 82, 83], "coeffici": [2, 3, 8, 12, 20, 28, 52, 69, 70], "constant": [2, 7, 20, 47, 49, 71], "id": [2, 3, 35, 45, 47, 53, 55, 56, 75, 77], "coeff": 2, "qubit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 37, 38, 39, 40, 43, 45, 46, 49, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 77, 82], "unordered_map": [2, 35], "_term": 2, "full": [2, 3, 4, 13, 19, 30, 33, 54, 55, 56, 68, 69, 70, 71, 73, 75, 77, 78, 83], "composit": [2, 52], "spin": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 27, 29, 35, 38, 43, 49, 52, 54, 55, 56, 60, 64, 65, 68, 71], "op": [2, 3, 12, 13, 20, 49, 64, 71], "map": [2, 3, 5, 7, 8, 9, 13, 18, 21, 23, 27, 35, 47, 52, 71, 77], "individu": [2, 3, 40, 47, 55, 62], "bsf": 2, "from": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 28, 29, 31, 33, 35, 36, 38, 39, 40, 43, 47, 49, 52, 54, 55, 56, 59, 60, 62, 64, 65, 68, 71, 74, 77, 78, 79, 82, 83], "creat": [2, 3, 5, 8, 9, 13, 14, 15, 16, 18, 19, 21, 22, 25, 27, 31, 32, 35, 37, 43, 46, 52, 53, 54, 55, 59, 60, 65, 66, 68, 69, 71, 72, 74, 75, 77, 78, 79, 81, 82], "ident": [2, 12, 13, 14, 18, 19, 21, 49, 52, 64, 69], "numqubit": [2, 38], "given": [2, 3, 4, 7, 8, 9, 10, 14, 18, 19, 20, 21, 23, 24, 25, 35, 47, 52, 53, 55, 56, 60, 64, 69, 74], "o": [2, 9, 10, 13, 15, 23, 38, 53, 54, 55, 56, 64, 65, 66, 67, 71, 75, 77, 79, 81, 82], "copi": [2, 16, 21, 31, 47, 49, 75, 77], "data_rep": 2, "serial": [2, 3, 12], "encod": [2, 3, 5, 9, 14, 19, 21, 35, 43, 55, 66, 70, 74], "via": [2, 3, 4, 5, 11, 13, 16, 21, 24, 27, 32, 34, 35, 37, 40, 42, 44, 46, 47, 49, 52, 53, 55, 56, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75], "real": [2, 8, 10, 12, 13, 15, 17, 20, 21, 31, 59], "imaginari": [2, 4, 12], "part": [2, 3, 4, 12, 17, 19, 23, 35, 47, 71, 73, 75, 77], "append": [2, 3, 6, 8, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 29, 31, 39, 53, 55, 56, 62, 65, 68], "larg": [2, 4, 5, 12, 18, 23, 30, 33, 42, 55, 56, 59, 69, 70, 83], "end": [2, 3, 4, 7, 10, 13, 15, 16, 17, 18, 20, 21, 24, 25, 27, 31, 35, 47, 53, 55, 56, 60, 62, 65, 69, 70, 75, 77], "total": [2, 3, 4, 8, 9, 11, 12, 13, 15, 21, 23, 54, 55, 56, 60, 65, 68, 77], "destructor": 2, "iter": [2, 3, 4, 9, 12, 19, 21, 23, 24, 28, 29, 35, 47], "begin": [2, 3, 4, 7, 9, 10, 12, 13, 15, 16, 18, 19, 21, 22, 24, 25, 27, 31, 35, 47, 58, 65, 66, 69, 70], "start": [2, 3, 4, 6, 13, 15, 16, 19, 21, 24, 32, 33, 42, 47, 53, 55, 60, 62, 65, 71, 73, 79, 83], "equal": [2, 10, 21, 24, 31, 49, 55, 56, 60, 70], "v": [2, 3, 4, 8, 10, 12, 13, 14, 19, 35, 38, 39, 44, 49, 54, 68, 71, 75], "noexcept": [2, 42], "subtract": 2, "multipli": [2, 12, 13, 19], "true": [2, 3, 4, 5, 9, 11, 12, 13, 16, 17, 18, 19, 21, 23, 29, 35, 39, 52, 53, 56, 68, 75, 77, 82], "here": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 18, 19, 21, 22, 23, 27, 28, 32, 33, 35, 37, 38, 39, 42, 44, 52, 53, 54, 55, 62, 64, 65, 66, 67, 71, 73, 75, 77, 81, 82, 83], "consid": [2, 4, 5, 7, 9, 13, 17, 18, 19, 20, 21, 38, 40, 49, 54, 55, 71, 77], "num_qubit": [2, 3, 13, 20, 43, 54], "num_term": [2, 43], "get_coeffici": [2, 8, 12, 20, 43], "get": [2, 3, 10, 12, 13, 15, 17, 18, 19, 21, 23, 27, 29, 31, 33, 35, 37, 38, 47, 53, 54, 55, 56, 60, 64, 65, 68, 74, 75, 79, 82, 83], "throw": [2, 31], "except": [2, 3, 9, 12, 13, 21, 31, 81], "get_raw_data": 2, "is_ident": [2, 43], "standard": [2, 3, 10, 21, 23, 29, 34, 35, 36, 37, 39, 42, 48, 55, 58, 59, 71, 73, 75, 77, 79, 81], "out": [2, 3, 7, 8, 9, 11, 12, 14, 15, 16, 19, 21, 23, 27, 29, 33, 35, 40, 47, 49, 55, 56, 60, 61, 62, 64, 65, 74, 77, 78, 81, 83], "to_str": [2, 8, 12, 20, 60], "printcoeffici": 2, "getdatarepresent": 2, "getdatatupl": 2, "fulli": [2, 3, 9, 11, 13, 21, 33, 34, 53, 55, 66, 71, 75, 77, 81, 83], "distribute_term": 2, "numchunk": 2, "distribut": [2, 10, 17, 18, 21, 23, 24, 27, 33, 40, 54, 56, 60, 64, 66, 75, 81, 82, 83], "chunk": [2, 40], "for_each_term": [2, 8, 12, 20, 43], "give": [2, 14, 15, 18, 24, 25, 33, 35, 50, 55, 56, 75, 77, 83], "functor": 2, "reduct": 2, "captur": [2, 14, 19, 23, 31, 33, 39, 52, 62, 83], "variabl": [2, 9, 12, 14, 16, 19, 23, 30, 33, 39, 40, 52, 53, 54, 55, 61, 65, 68, 75, 77, 82, 83], "for_each_pauli": [2, 43], "thrown": [2, 81], "than": [2, 3, 12, 13, 14, 15, 16, 17, 19, 20, 23, 24, 26, 31, 42, 49, 54, 56, 60, 62, 70, 75, 77, 81], "user": [2, 3, 4, 5, 8, 9, 13, 18, 21, 30, 33, 35, 37, 38, 40, 41, 44, 47, 52, 53, 54, 55, 56, 65, 68, 71, 74, 75, 77, 83], "should": [2, 3, 13, 15, 19, 20, 23, 34, 35, 40, 42, 43, 45, 47, 53, 55, 56, 60, 74, 75, 77, 81, 82], "pass": [2, 3, 8, 9, 11, 12, 13, 17, 20, 23, 31, 32, 33, 35, 39, 40, 43, 47, 53, 55, 56, 62, 65, 67, 71, 72, 77, 81, 83], "index": [2, 3, 5, 9, 11, 12, 17, 43, 45, 47, 49, 52, 55, 56, 74], "complex_matrix": 2, "to_matrix": [2, 10, 12, 52], "dens": 2, "to_sparse_matrix": 2, "col": 2, "static": [2, 3, 35, 42, 47, 52, 71, 75, 81], "nterm": 2, "unsign": 2, "seed": [2, 3, 4, 8, 9, 13, 14, 18, 21, 22, 23, 31, 68], "random_devic": 2, "specifi": [2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 26, 28, 29, 31, 35, 38, 39, 40, 42, 43, 44, 45, 47, 52, 53, 54, 55, 56, 60, 62, 65, 66, 68, 71, 74, 75, 77], "overrid": [2, 3, 35, 56, 73, 75], "repeat": [2, 17, 18, 19, 23, 35], "from_word": 2, "pauliword": 2, "word": [2, 3, 8, 12, 19, 20], "g": [2, 3, 9, 14, 19, 20, 21, 28, 34, 35, 36, 39, 40, 41, 42, 43, 49, 52, 53, 54, 55, 56, 65, 71, 74, 75, 77, 78, 81, 82], "xyx": 2, "3rd": 2, "typenam": [2, 35, 37, 38, 39, 42, 46, 47, 79, 81], "qualifiedspinop": 2, "struct": [2, 35, 37, 38, 39, 42, 46, 54, 55, 56, 64, 65, 66, 67, 71, 73, 81], "constexpr": [2, 37, 47, 54], "dyn": [2, 47], "qudit": [2, 25, 36, 40, 42, 69], "system": [2, 3, 4, 9, 12, 13, 16, 20, 22, 23, 24, 25, 30, 33, 35, 40, 45, 47, 49, 52, 53, 55, 56, 59, 60, 64, 65, 68, 69, 70, 73, 75, 78, 79, 81, 82, 83], "inlin": [2, 35, 71], "new": [2, 3, 4, 8, 9, 12, 15, 21, 32, 33, 35, 37, 49, 59, 71, 72, 75, 77, 81, 82, 83], "enable_if_t": 2, "qreg": [2, 3, 12, 14, 54], "contain": [2, 3, 4, 9, 10, 13, 14, 18, 21, 32, 33, 35, 40, 42, 45, 49, 54, 56, 59, 60, 64, 65, 71, 74, 75, 81, 82, 83], "dynam": [2, 13, 32, 33, 37, 39, 40, 47, 53, 56, 58, 59, 71, 81, 83], "time": [2, 3, 4, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 38, 40, 47, 48, 53, 54, 55, 56, 60, 65, 66, 68, 69, 70, 71, 75, 77, 82, 83], "By": [2, 9, 10, 23, 30, 35, 42, 52, 53, 54, 55, 56, 60, 65, 79], "value_typ": 2, "indic": [2, 3, 4, 8, 21, 39, 42, 43, 47, 52, 74], "underli": [2, 3, 9, 23, 35, 45, 47, 53, 55, 74], "interfac": [2, 3, 47, 56, 74, 75, 77, 79], "idx": [2, 3, 11, 13, 19, 21, 47, 52, 55], "qspan": 2, "front": [2, 38, 46, 47, 67], "back": [2, 21, 38, 47, 49, 55, 65, 66, 77], "last": [2, 18, 19, 21, 38, 47, 55, 62, 64], "slice": [2, 3, 47], "clear": [2, 3, 16, 35, 47, 74], "destroi": [2, 47], "postcondit": [2, 47], "own": [2, 3, 9, 18, 27, 40, 45, 47, 56, 71, 74, 75, 77, 81], "semant": [2, 3, 34, 39, 40, 41, 44, 46, 47, 49, 71], "held": 2, "explicit": [2, 10, 35, 46, 52, 56, 65, 81], "determin": [2, 4, 5, 7, 8, 9, 17, 20, 23, 32, 56, 60], "check": [2, 9, 19, 21, 33, 53, 54, 65, 70, 75, 77, 82, 83], "norm": [2, 18], "pre": [2, 3, 13, 21, 33, 35, 53, 56, 65, 67, 75, 81, 83], "exist": [2, 3, 8, 16, 21, 31, 33, 34, 35, 40, 41, 60, 73, 75, 77, 81, 82, 83], "could": [2, 9, 10, 12, 19, 23, 31, 33, 54, 58, 70, 75, 83], "from_data": [2, 3, 52], "retriev": [2, 3, 13, 24, 35, 52, 55, 65], "get_stat": [2, 3, 10, 15, 16, 17, 20, 21, 24, 25, 31, 55, 62], "delet": [2, 47, 53, 77, 81], "cannot": [2, 3, 15, 25, 31, 38, 39, 47, 49, 70, 77], "move": [2, 11, 47, 73, 75, 77, 82], "assign": [2, 9, 14, 45, 55, 56, 75], "qview": [2, 5, 10, 12, 15, 19, 38, 39, 46], "observe_result": [2, 3, 12, 35, 64], "encapsul": [2, 11, 35, 47, 55, 81], "observ": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 18, 20, 22, 23, 27, 29, 38, 52, 53, 55, 56, 57, 59, 64, 66, 67, 68, 69, 70, 74, 82], "call": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 27, 29, 31, 37, 38, 39, 42, 46, 52, 55, 56, 59, 60, 62, 65, 66, 67, 68, 70, 71, 74, 75, 77, 79], "measur": [2, 3, 5, 7, 9, 10, 11, 12, 13, 15, 16, 18, 23, 24, 25, 27, 32, 35, 36, 38, 39, 40, 42, 49, 52, 53, 55, 56, 58, 59, 60, 63, 65, 66, 71, 74, 82], "execut": [2, 4, 9, 13, 15, 21, 31, 32, 33, 34, 35, 37, 39, 40, 45, 46, 52, 53, 55, 56, 59, 60, 61, 63, 64, 65, 66, 68, 71, 74, 77, 78, 79, 81, 82, 83], "ansatz": [2, 4, 6, 9, 13, 14, 22, 23, 35, 38, 54, 55, 64], "circuit": [2, 3, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 29, 34, 35, 39, 40, 43, 44, 48, 49, 53, 54, 55, 56, 59, 60, 62, 64, 65, 71, 73], "global": [2, 3, 9, 14, 21, 35, 39, 54, 60, 65, 75], "expect": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 18, 20, 21, 22, 23, 24, 27, 29, 32, 35, 52, 54, 55, 56, 60, 63, 68, 75, 77, 81, 82], "h": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 29, 31, 35, 37, 38, 42, 43, 44, 46, 47, 49, 52, 53, 54, 55, 56, 58, 60, 62, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 79, 81, 82], "precomput": 2, "psi": [2, 6, 7, 10, 12, 16, 24, 31, 35, 38, 60, 69, 70], "sample_result": [2, 3, 19, 24, 35, 65, 81], "wa": [2, 3, 4, 7, 9, 12, 21, 35, 55, 56, 66, 71, 75, 78, 82], "shot": [2, 3, 8, 9, 10, 17, 18, 19, 24, 35, 38, 53, 56, 60, 65, 66, 69, 70, 74], "base": [2, 3, 8, 9, 11, 13, 15, 18, 19, 21, 23, 28, 33, 34, 35, 37, 41, 42, 47, 52, 53, 54, 55, 56, 60, 68, 71, 74, 75, 77, 79, 83], "raw_data": [2, 9, 35], "raw": [2, 3, 9], "convers": [2, 35], "simpli": [2, 31, 70, 77, 82], "ignor": [2, 9, 19, 56], "fine": [2, 35, 66, 67, 70], "grain": [2, 35, 66, 67], "explicitli": [2, 9, 10, 49, 53, 56, 71, 79, 81], "request": [2, 3, 35, 53, 54, 55, 56, 65, 77], "oppos": [2, 81], "observe_data": 2, "spinoptyp": [2, 35], "sub": [2, 3, 34, 35, 38, 39, 47, 48, 52, 77], "id_coeffici": [2, 35], "observe_opt": [2, 35], "option": [2, 3, 4, 7, 9, 10, 12, 13, 17, 18, 22, 23, 24, 29, 30, 35, 37, 42, 45, 52, 53, 54, 55, 60, 64, 65, 67, 68, 74, 75, 77], "async_observ": 2, "param": [2, 4, 13, 14, 17, 38, 39, 42, 54, 68], "run": [2, 3, 5, 7, 8, 9, 11, 12, 17, 18, 23, 24, 32, 33, 34, 35, 38, 52, 53, 54, 55, 56, 57, 59, 64, 65, 66, 67, 68, 71, 74, 75, 77, 78, 81, 82, 83], "applic": [2, 4, 5, 7, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 28, 32, 35, 42, 46, 53, 56, 59, 60, 62, 63, 77, 78, 81, 82], "num_trajectori": [2, 3, 56], "trajectori": [2, 3], "presenc": 2, "simul": [2, 4, 6, 8, 10, 12, 17, 18, 19, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 51, 52, 53, 57, 59, 60, 63, 65, 66, 68, 69, 71, 72, 75, 82, 83], "noisi": [2, 17, 18, 21, 32, 63, 65], "quantumkernel": [2, 35, 46], "arg": [2, 3, 9, 11, 15, 18, 35, 37, 42, 46, 52, 55, 60, 71, 77], "is_invocable_r_v": 2, "member": [2, 3, 14, 39], "conveni": [2, 15, 28, 43, 49, 75, 77], "what": [2, 3, 4, 8, 9, 10, 14, 16, 18, 19, 23, 31, 32, 33, 57, 68, 74, 81, 83], "": [2, 3, 4, 5, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 29, 31, 32, 33, 35, 42, 45, 49, 52, 53, 54, 55, 56, 58, 59, 60, 64, 65, 66, 67, 68, 71, 73, 75, 77, 78, 79, 82, 83], "spinopcontain": 2, "termlist": 2, "everi": [2, 3, 14, 17, 18, 20, 33, 54, 55, 59, 60, 65, 66, 75, 82, 83], "concept": [2, 34, 35, 39, 41], "executioncontext": 2, "abstract": [2, 3, 28, 34, 35, 37, 42, 43, 45, 47, 55, 59], "how": [2, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 28, 29, 31, 33, 35, 37, 42, 52, 54, 55, 56, 59, 60, 62, 63, 65, 66, 67, 68, 71, 74, 75, 77, 78, 81, 82, 83], "shots_": 2, "basic": [2, 6, 32, 54, 62, 77, 82], "invoc": [2, 3, 37, 39, 45, 47, 55, 56, 74], "expectationvalu": 2, "nullopt": 2, "optimization_result": [2, 35], "optresult": 2, "optim": [2, 4, 6, 8, 9, 11, 12, 13, 14, 18, 19, 23, 32, 33, 34, 44, 47, 49, 52, 53, 54, 56, 63, 71, 73, 75, 77, 83], "hasconditionalsonmeasureresult": 2, "fals": [2, 3, 4, 8, 9, 12, 13, 16, 17, 19, 20, 21, 75, 77], "being": [2, 3, 5, 6, 16, 27, 34, 35, 49, 56, 65, 81], "statement": [2, 7, 26, 35, 36, 59], "noise_model": [2, 3, 13, 17, 18, 27, 56], "noisemodel": [2, 3, 13, 17, 18, 27, 56], "nullptr": 2, "canhandleobserv": 2, "flag": [2, 13, 33, 39, 52, 53, 55, 56, 65, 71, 73, 77, 81, 83], "handl": [2, 3, 7, 9, 20, 53, 54, 55, 56, 65, 74, 77, 81], "task": [2, 5, 9, 13, 21, 24, 25, 31, 35, 43, 55, 56, 60, 71, 74], "under": [2, 3, 13, 18, 21, 33, 52, 53, 73, 74, 75, 77, 81, 83], "asyncexec": 2, "occur": [2, 3, 7, 9, 12, 18, 26, 35, 40, 65, 70, 77], "asynchron": [2, 3, 10, 12, 13, 24, 35, 45, 55, 60, 65, 68], "detail": [2, 3, 4, 8, 10, 13, 14, 17, 33, 34, 40, 52, 53, 54, 56, 74, 75, 77, 82, 83], "futur": [2, 3, 35, 51, 53, 55, 56, 65, 75, 77], "futureresult": 2, "store": [2, 3, 4, 12, 13, 16, 20, 40, 47, 55, 60, 65, 68, 69, 70, 71], "async_result": [2, 65], "asyncresult": [2, 68], "async_sample_result": [2, 35, 55], "so": [2, 5, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 25, 29, 31, 33, 35, 52, 53, 55, 56, 66, 70, 71, 73, 74, 75, 77, 81, 82, 83], "boundari": [2, 11], "unique_ptr": 2, "simulationst": 2, "pointer": [2, 3, 81], "amplitudemap": 2, "amplitud": [2, 3, 5, 15, 17, 21, 52, 53, 55, 62, 65, 68, 69, 70], "overlapcomputest": 2, "overlap": [2, 3, 12, 55], "overlapresult": 2, "trace": [2, 3, 16, 21, 27, 54], "kerneltrac": 2, "tracer": 2, "persist": [2, 35, 40, 54, 77], "resourc": [2, 4, 19, 23, 29, 45, 54, 55, 56, 60, 75, 77], "kernelnam": [2, 3], "batchiter": 2, "batch": [2, 29, 40, 56], "observe_n": 2, "sample_n": 2, "totaliter": 2, "registernam": [2, 35], "mid": [2, 3, 56], "mode": [2, 3, 9, 24, 33, 38, 40, 52, 53, 65, 71, 75, 83], "keep": [2, 5, 18, 35, 56], "track": [2, 35, 56, 69, 70], "reorderidx": 2, "inform": [2, 3, 5, 7, 9, 12, 13, 16, 19, 21, 23, 28, 33, 35, 40, 42, 45, 47, 53, 54, 55, 56, 60, 65, 68, 69, 70, 71, 75, 77, 79, 80, 82, 83], "reorder": 2, "after": [2, 3, 4, 7, 9, 13, 16, 31, 35, 53, 60, 62, 65, 71, 75, 77], "empti": [2, 3, 12, 37, 43, 56, 65, 77], "mean": [2, 3, 5, 13, 15, 16, 17, 21, 23, 42, 49, 56, 65, 68, 77, 82], "char": [2, 38, 55, 60, 75, 81, 82], "invocationresultbuff": 2, "buffer": [2, 55, 81], "note": [2, 3, 9, 10, 14, 16, 18, 19, 20, 21, 24, 31, 33, 38, 40, 49, 53, 54, 55, 60, 62, 65, 69, 70, 71, 75, 77, 81, 83], "need": [2, 3, 4, 5, 9, 13, 14, 15, 18, 19, 23, 24, 25, 27, 31, 49, 52, 53, 54, 55, 56, 60, 64, 65, 68, 74, 75, 77, 78, 81], "abl": [2, 9, 13, 24, 35, 53, 54, 55, 60, 77, 81, 82], "numbertrajectori": 2, "calcul": [2, 3, 5, 6, 7, 9, 11, 16, 19, 21, 24, 29, 54, 55, 56, 60, 65, 68], "job": [2, 13, 14, 35, 53, 54, 55, 65, 77], "qpu": [2, 3, 10, 12, 13, 23, 24, 25, 29, 32, 33, 34, 35, 40, 45, 53, 55, 56, 59, 60, 64, 65, 68, 74, 81, 82, 83], "extra": [2, 11, 12, 42, 49, 53], "configur": [2, 8, 9, 13, 22, 45, 53, 54, 55, 56, 65, 68, 71, 74, 75, 77, 78, 81, 82], "later": [2, 7, 9, 12, 13, 16, 17, 35, 39, 55, 65, 75, 77], "server": [2, 53, 55, 65, 77], "file": [2, 4, 9, 13, 25, 35, 42, 53, 54, 55, 60, 61, 65, 68, 71, 73, 74, 75, 77, 78, 79, 81, 82], "read": [2, 3, 13, 14, 19, 62, 65], "wrap": [2, 35, 37, 49, 52], "t": [2, 3, 4, 7, 10, 15, 20, 21, 31, 33, 35, 38, 39, 42, 43, 52, 54, 56, 62, 65, 66, 69, 70, 75, 77, 83], "case": [2, 3, 7, 8, 9, 12, 14, 15, 16, 17, 18, 23, 26, 27, 29, 35, 49, 52, 56, 58, 62, 64, 69, 75, 79, 81], "must": [2, 3, 7, 13, 17, 18, 19, 23, 24, 34, 35, 39, 41, 44, 47, 49, 52, 53, 56, 65, 70, 73, 74, 75, 77, 81, 82], "some": [2, 4, 8, 9, 11, 13, 15, 16, 17, 19, 20, 23, 25, 26, 30, 33, 35, 49, 54, 55, 56, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83], "point": [2, 3, 9, 15, 31, 35, 39, 42, 55, 56, 71, 74, 75, 77], "same": [2, 3, 7, 9, 12, 13, 14, 15, 16, 17, 18, 21, 23, 29, 31, 35, 49, 53, 55, 60, 65, 67, 68, 71, 74, 75, 77, 81], "runtim": [2, 9, 34, 35, 37, 40, 53, 54, 55, 56, 64, 71, 74, 77, 79], "_job": 2, "qpunamein": 2, "config": [2, 4, 56, 74, 75, 77, 82], "info": [2, 21, 54, 56, 61, 71], "requir": [2, 3, 4, 7, 8, 9, 10, 11, 13, 15, 16, 19, 21, 23, 29, 31, 35, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 55, 56, 65, 68, 69, 70, 75, 78, 82], "date": 2, "even": [2, 7, 9, 14, 17, 19, 24, 33, 56, 75, 77, 81, 83], "face": [2, 21, 41], "itself": [2, 46, 49, 55, 75, 77], "collect": [2, 3, 4, 8, 12, 13, 16, 60], "pertin": [2, 35, 41, 46, 47], "remot": [2, 3, 35, 40, 51, 54, 56, 61, 68], "rest": [2, 3, 5, 13, 16, 17, 34, 53, 55, 56, 65, 75, 77, 81], "wait": [2, 3, 9, 13, 24, 54, 55, 60, 65], "until": [2, 3, 9, 13, 17, 21, 24, 60, 65], "readi": [2, 19, 22, 65, 77], "executionresult": 2, "correspond": [2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 20, 21, 23, 28, 29, 35, 53, 65, 66, 75, 77, 79], "well": [2, 3, 5, 10, 12, 13, 18, 19, 20, 28, 33, 35, 38, 40, 52, 56, 74, 77, 78, 81, 83], "integ": [2, 3, 12, 14, 17, 24, 25, 32, 39, 45, 55, 56, 60, 62, 68], "1st": [2, 16, 27], "bitstr": [2, 3, 5, 9, 14, 17, 35], "m": [2, 4, 8, 9, 10, 12, 18, 31, 38, 43, 55, 56, 65, 68, 71, 75, 77, 81, 82], "tripl": [2, 71], "long": [2, 24, 35, 38, 60, 75, 77, 81, 82], "length": [2, 5, 18, 65], "deseri": [2, 3], "discuss": [2, 9, 16, 29, 73], "brief": [2, 74], "countsdictionari": [2, 35], "assum": [2, 3, 7, 8, 9, 13, 14, 16, 17, 18, 19, 40, 42, 47, 52, 55, 56, 60, 65, 74, 75, 77, 79], "expval": [2, 35], "other": [2, 3, 4, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 27, 31, 32, 34, 37, 39, 42, 47, 49, 52, 53, 54, 55, 56, 58, 59, 60, 65, 75, 77, 81, 82], "appendresult": 2, "globalregisternam": [2, 35], "classic": [2, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 22, 23, 34, 36, 39, 40, 42, 43, 47, 49, 55, 59, 60, 65, 69, 70, 71, 74, 75, 78, 81], "sequentialdata": 2, "sequenti": [2, 3, 35, 54, 56, 60], "collat": [2, 3], "holist": 2, "nullari": 2, "precomputedexp": 2, "__global__": [2, 3, 35, 54, 65, 79], "has_expect": 2, "string_view": [2, 35, 74], "anoth": [2, 5, 9, 16, 17, 19, 38, 39, 49, 56, 62, 65, 67, 75], "register_nam": [2, 3, 35], "tandem": [2, 68], "to_map": [2, 35], "regnam": 2, "merg": [2, 3, 71], "necessari": [2, 12, 19, 53, 55, 56, 65, 71, 75, 77, 81], "document": [2, 3, 23, 31, 32, 33, 34, 42, 51, 53, 54, 56, 73, 74, 75, 77, 81, 83], "exp_val_z": 2, "deprec": [2, 3, 23, 51, 55, 56], "probabl": [2, 3, 17, 18, 19, 27, 35, 56, 60, 69, 70, 81], "most_prob": [2, 3, 5, 8, 19, 38, 60, 70], "most": [2, 3, 8, 9, 13, 14, 16, 19, 23, 24, 25, 33, 35, 49, 54, 60, 62, 65, 71, 75, 77, 78, 81, 83], "ostream": [2, 81], "output": [2, 3, 4, 7, 11, 16, 19, 21, 31, 39, 52, 53, 57, 60, 71, 77, 81, 82], "stream": [2, 9, 40], "extract": [2, 3, 4, 7, 9, 10, 12, 16, 19, 28, 35, 37, 38, 47, 49, 60, 71, 75, 77], "unord": 2, "get_margin": [2, 35], "marginalindic": [2, 35], "margin": [2, 18], "those": [2, 19, 33, 35, 39, 49, 52, 55, 56, 71, 83], "subset": [2, 3, 9, 11, 21, 35, 39, 47, 49], "rvalu": 2, "refer": [2, 13, 14, 16, 19, 23, 32, 35, 39, 40, 47, 49, 53, 54, 55, 56, 65, 75, 77], "newbitstr": 2, "oldbitstr": 2, "process": [2, 3, 9, 10, 15, 17, 21, 23, 24, 25, 26, 33, 34, 35, 40, 45, 53, 54, 55, 56, 59, 65, 68, 69, 70, 71, 75, 81, 83], "const_iter": 2, "cbegin": 2, "cend": 2, "has_even_par": 2, "pariti": [2, 52], "sample_opt": [2, 35], "async_sampl": 2, "express": [2, 3, 13, 16, 21, 29, 33, 35, 36, 37, 38, 40, 43, 52, 55, 59, 66, 67, 71, 81, 83], "final": [2, 3, 4, 6, 9, 12, 13, 16, 20, 23, 29, 52, 55, 64, 66, 68, 71, 74, 75], "variad": [2, 35], "concret": [2, 3, 14, 35, 60, 64], "evalu": [2, 3, 7, 9, 12, 23, 29, 35, 54, 55, 56, 64], "dictionari": [2, 3, 13, 18, 35, 60, 66], "extens": [2, 31, 34, 35, 41, 47, 51, 74, 77, 79, 82], "describ": [2, 3, 5, 10, 12, 13, 16, 18, 19, 27, 45, 47, 52, 53, 67, 70, 74, 75, 77, 81], "effici": [2, 9, 13, 19, 21, 23, 30, 56], "manner": [2, 35, 55, 74], "client": [2, 35, 54, 75], "remain": [2, 3, 4, 46, 65, 75], "gpu": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 20, 21, 23, 24, 29, 32, 33, 34, 40, 52, 55, 57, 59, 63, 74, 75, 79, 81, 82, 83], "devic": [2, 3, 9, 11, 13, 17, 18, 21, 23, 24, 27, 29, 35, 38, 39, 42, 46, 53, 54, 55, 56, 60, 65, 71, 74, 77], "cpu": [2, 4, 5, 9, 11, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 27, 31, 32, 51, 54, 55, 59, 60, 68, 71, 75, 77, 81, 82], "memori": [2, 9, 11, 20, 21, 36, 39, 40, 47, 49, 54, 55, 56, 59, 68, 71, 77], "primari": [2, 3, 5, 8, 35, 47, 74], "goal": [2, 5, 7, 9, 14, 19, 20, 23], "minim": [2, 8, 9, 13, 14, 18, 21, 22, 23, 29, 31, 32, 75, 77, 82], "transfer": [2, 55, 56], "subclass": [2, 35, 74], "cusvstat": 2, "scalartyp": [2, 81], "remotesimulationst": 2, "nvqir": [2, 32, 71, 72, 74], "mpssimulationst": 2, "tensornetsimulationst": 2, "made": [2, 14, 19, 20, 60, 77], "extent": [2, 3, 56], "enum": [2, 4], "precis": [2, 3, 15, 22, 23, 54, 56, 62, 70], "enumer": [2, 3, 5, 13, 18, 21, 38], "fp32": [2, 3, 23, 54, 55, 56], "fp64": [2, 3, 12, 13, 22, 30, 51, 54, 55, 56], "simulation_precis": 2, "possibl": [2, 7, 8, 9, 13, 16, 17, 18, 21, 25, 31, 34, 49, 69, 70, 77, 79, 81], "float": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 28, 29, 35, 38, 39, 42, 46, 54, 55, 56, 62, 64, 74], "tensorstatedata": 2, "dimens": [2, 3, 6, 8, 9, 12, 14, 16, 21, 29, 35, 52, 56], "state_data": 2, "variant": [2, 13, 42], "custatevec": [2, 54, 55, 56, 74], "attempt": [2, 19, 81], "care": [2, 35, 81], "taken": [2, 9], "ensur": [2, 3, 12, 13, 71, 73, 75, 77, 81], "comparison": [2, 7], "compat": [2, 3, 41, 56, 75], "registeredtyp": 2, "declar": [2, 13, 35, 39, 40, 42, 71, 74, 79, 81], "themselv": [2, 53, 58], "plugin": [2, 33, 73, 75, 77, 83], "myinterfac": 2, "column": [2, 3, 31], "upon": [2, 6, 16, 24, 25, 49, 60, 65, 69, 70, 77], "destruct": 2, "rawdata": 2, "intern": [2, 3, 55], "modifi": [2, 38, 39, 42, 46, 49, 56, 77], "correct": [2, 5, 15, 16, 18, 21, 38, 59, 65, 75, 77], "j": [2, 3, 8, 9, 10, 12, 14, 15, 18, 19, 20, 21, 24, 25, 38, 39, 43, 68, 75], "minimal_eigenvalu": [2, 3], "eigenvalu": [2, 3, 10, 12, 14, 56], "thei": [2, 3, 4, 6, 9, 12, 13, 14, 16, 17, 19, 33, 39, 47, 49, 59, 69, 70, 75, 77, 83], "set_zero": 2, "seen": [2, 7, 13, 19, 21], "manag": [2, 4, 53, 54, 55, 75, 77], "instruct": [2, 13, 19, 21, 33, 40, 42, 44, 49, 53, 54, 56, 65, 66, 71, 75, 77, 81, 82, 83], "control": [2, 3, 10, 12, 14, 15, 19, 32, 33, 34, 37, 38, 39, 40, 42, 44, 46, 47, 48, 49, 52, 53, 55, 56, 58, 59, 62, 63, 65, 66, 70, 71, 74, 77, 83], "flow": [2, 11, 34, 35, 39, 48, 56, 59, 71], "path": [2, 3, 31, 53, 71, 74, 75, 77], "thu": [2, 13, 16, 52, 54, 55, 56, 70, 71], "might": [2, 4, 7, 9, 12, 17, 21, 37, 42, 49, 51, 54, 55, 67], "produc": [2, 3, 4, 5, 8, 9, 10, 12, 14, 17, 19, 24, 29, 35, 38, 43, 44, 49, 58, 60, 66, 71, 74, 81], "elementtyp": 2, "is_integral_v": 2, "is_signed_v": 2, "exclus": [2, 7], "stop": [2, 13, 60, 77], "step": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 29, 38, 52, 65, 71, 75, 79, 82], "reach": [2, 17, 21, 68], "is_invocable_v": 2, "draw": [2, 3, 5, 6, 7, 9, 15, 18, 19, 21, 24, 27, 31, 60], "utf": [2, 3], "8": [2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 33, 35, 38, 39, 40, 51, 52, 53, 54, 55, 56, 65, 68, 69, 71, 75, 77, 82, 83], "usag": [2, 3, 55, 68], "iostream": [2, 54, 58, 60, 65, 81], "mz": [2, 3, 5, 7, 10, 13, 16, 18, 19, 24, 25, 26, 35, 37, 38, 49, 53, 54, 55, 56, 58, 60, 62, 65, 66, 67, 68, 69, 70, 71, 81, 82], "cout": [2, 54, 56, 60, 65, 81], "q0": [2, 3, 5, 6, 7, 9, 15, 17, 19, 21, 24, 27, 31, 49], "q1": [2, 3, 5, 7, 9, 15, 17, 19, 21, 24, 27, 31, 49], "ry": [2, 3, 6, 8, 9, 10, 11, 16, 29, 35, 38, 39, 42, 44, 54, 55, 62, 64], "59": [2, 3, 14, 35, 38, 55, 64], "callabl": [2, 3, 34, 35, 37, 38, 39, 58, 64, 66], "trivial": [2, 9, 17, 19, 35, 55, 64, 78], "signatur": [2, 3, 35, 37, 39, 67, 71], "without": [2, 3, 12, 21, 23, 35, 39, 46, 53, 56, 65, 75, 77, 81, 82], "regard": 2, "depth": [2, 9, 50], "etc": [2, 3, 39, 40, 52, 55, 56, 59, 65, 74, 75, 77, 82], "kraus_op": 2, "krau": [2, 3, 27, 56], "initializer_list": 2, "initlist": 2, "adjoint": [2, 15, 19, 37, 38, 42, 46, 49, 62, 71], "flatten": [2, 21, 81], "nrow": [2, 11, 31], "ncol": [2, 31], "kraus_channel": [2, 13], "channel": [2, 3, 13, 16, 18, 27, 56, 77], "action": [2, 4, 35, 38, 39, 77], "matric": [2, 3, 4, 12, 56], "amplitude_damping_channel": 2, "bit_flip_channel": [2, 56], "depolarization_channel": [2, 27], "phase_flip_channel": 2, "inputlist": 2, "inop": 2, "lvalu": 2, "make": [2, 3, 7, 8, 13, 15, 16, 23, 31, 35, 55, 56, 71, 74, 75, 77, 79, 82], "get_op": 2, "push_back": [2, 39], "noise_model_typ": 2, "noise_typ": 2, "unknown": [2, 16, 71, 77], "autom": [2, 74], "damp": 2, "error": [2, 9, 10, 13, 17, 27, 31, 32, 33, 42, 49, 53, 54, 56, 59, 65, 75, 77, 81, 83], "depolar": [2, 3, 13, 27], "densiti": [2, 3, 13, 16, 17, 18, 27, 31, 51, 54, 56], "predicatefuncti": 2, "callback": [2, 3, 22, 23], "operand": [2, 3, 42, 55], "add_channel": [2, 3, 17, 18, 27], "quantumop": 2, "pred": [2, 71], "add_all_qubit_channel": [2, 3, 13, 56], "numcontrol": 2, "get_channel": [2, 3], "targetqubit": 2, "controlqubit": 2, "relev": [2, 4, 6, 9, 11, 18, 45, 56], "downstream": [2, 32, 74, 78, 80], "object": [2, 3, 4, 8, 9, 13, 14, 18, 20, 24, 25, 29, 31, 35, 49, 55, 60, 71], "logic": [2, 7, 45, 47, 55], "kernel_build": [2, 37], "kernel_builder_bas": 2, "kernelbuildertyp": 2, "mlir": [2, 3, 13, 32, 55, 71, 72, 73, 75], "getargu": [2, 37, 73], "quakevalu": [2, 3, 37], "isargstdvec": 2, "otherwis": [2, 3, 7, 16, 17, 19, 56, 60], "getnumparam": [2, 37], "qalloc": [2, 3, 13, 37, 53, 54, 55, 68], "qvec": [2, 49, 53], "veq": [2, 3, 49, 71], "blockargu": 2, "simplic": [2, 4, 13, 17], "impli": [2, 3, 56], "goe": [2, 40], "scope": [2, 39, 40, 47, 71, 73], "befor": [2, 10, 13, 14, 20, 31, 53, 61, 65, 75, 77], "mai": [2, 3, 7, 9, 12, 13, 14, 18, 33, 35, 37, 39, 40, 42, 46, 47, 52, 53, 54, 55, 56, 59, 60, 61, 65, 67, 75, 77, 79, 81, 82, 83], "garbag": 2, "constantv": 2, "val": [2, 13, 18], "swap": [2, 4, 8, 19, 21, 31, 38, 65], "mod": [2, 5, 19, 42], "is_same_v": 2, "perform": [2, 3, 4, 5, 7, 9, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 26, 32, 33, 35, 38, 52, 53, 55, 56, 60, 62, 63, 65, 67, 68, 70, 73, 74, 75, 77, 81, 82, 83], "fredkin": 2, "between": [2, 3, 5, 7, 8, 9, 10, 14, 16, 17, 18, 19, 21, 22, 24, 25, 31, 39, 49, 52, 54, 58, 59, 60, 65, 68, 77, 79], "meant": [2, 34], "thin": [2, 3], "wrapper": [2, 3, 55], "around": [2, 3, 4, 5, 7, 18, 20, 35, 82], "instanc": [2, 3, 7, 9, 16, 21, 35, 37, 42, 47, 54, 55, 56, 59, 77], "quak": [2, 3, 14, 32, 48, 71, 73], "dialect": [2, 3, 71, 73], "arithmet": [2, 39, 40], "getvalu": 2, "actual": [2, 18, 21, 35, 60, 74], "implicitlocopbuild": 2, "arith": [2, 49, 71], "constantfloatop": 2, "canvalidatenumel": 2, "stdvectyp": 2, "do": [2, 3, 4, 9, 13, 15, 16, 18, 19, 21, 33, 42, 44, 47, 49, 54, 55, 56, 58, 59, 62, 66, 70, 71, 75, 77, 78, 79, 82, 83], "loop": [2, 4, 5, 8, 9, 12, 14, 17, 20, 29, 36, 47, 58, 65, 68, 71], "know": [2, 4, 5, 16, 19, 31, 33, 49, 83], "bound": [2, 3, 8, 16, 18], "startidx": [2, 3], "subscript": [2, 3, 53, 54], "stdvec": [2, 49, 71], "constants": 2, "isstdvec": 2, "getrequiredel": 2, "veqtyp": 2, "divid": [2, 14, 19], "invers": [2, 15, 21, 38, 52], "friend": [2, 16], "write": [2, 3, 13, 61, 65, 70, 73, 77, 79], "u": [2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21, 22, 24, 25, 31, 38, 39, 43, 44, 52, 53, 58, 59, 60, 65, 67, 68, 69, 70, 71], "wai": [2, 3, 7, 12, 19, 23, 24, 25, 29, 35, 46, 49, 52, 53, 60, 62, 75], "code": [2, 3, 5, 7, 8, 9, 10, 13, 14, 15, 16, 19, 22, 23, 28, 29, 31, 33, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 49, 52, 53, 54, 55, 56, 60, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 78, 79, 81, 82, 83], "mlircontext": 2, "ctx": [2, 11, 73], "f": [2, 5, 7, 9, 13, 16, 18, 19, 20, 21, 29, 38, 39, 52, 75, 82], "high": [2, 13, 18, 53, 68, 71, 81], "serv": [2, 3, 9, 39, 47, 54, 73, 75], "work": [2, 4, 7, 8, 9, 10, 12, 15, 18, 19, 21, 23, 32, 35, 54, 55, 68, 72, 75, 77, 78, 81, 82], "subtyp": 2, "possibli": [2, 4, 39], "deleg": [2, 54, 74, 77], "third": [2, 32, 80], "parti": [2, 16, 32, 80], "immut": 2, "mutabl": [2, 35], "gradient": [2, 6, 11, 32, 54, 63], "df": [2, 18], "dx_i": 2, "scalar": [2, 3, 35], "queri": [2, 3, 5, 7, 35, 45, 55, 64], "whether": [2, 3, 7, 19, 21, 33, 75, 77, 83], "strategi": [2, 35, 40, 46, 74], "thing": [2, 67], "max": [2, 7, 9, 13, 21, 32, 54, 56], "cobyla": [2, 3, 6, 9, 22, 23, 29, 35], "opt": [2, 39, 71, 73, 75, 77], "assert": [2, 5, 13, 19, 21, 23, 38, 39], "requiresgradi": [2, 35], "algo": 2, "opt_val": [2, 54], "opt_param": [2, 13, 35, 54], "dx": [2, 35], "virtual": [2, 4, 33, 35, 54, 55, 60, 64, 68, 74, 75, 83], "achiev": [2, 4, 13, 14, 15, 19, 35, 53, 54, 67], "dim": [2, 3, 21, 54, 56], "optimizable_funct": [2, 35], "opt_funct": [2, 35, 54], "variat": [2, 4, 6, 9, 11, 12, 14, 23, 24, 29, 32, 35], "custom": [2, 3, 13, 23, 27, 33, 35, 39, 52, 55, 56, 62, 66, 73, 75, 77, 80, 81, 83], "ptrtoown": 2, "jdx": 2, "tensoridx": 2, "get_tensor": 2, "just": [2, 7, 9, 13, 14, 19, 24, 34, 48, 55, 60, 61, 66, 69, 70, 71, 77], "rank": [2, 3, 55, 66, 68], "get_num_tensor": 2, "get_num_qubit": [2, 45], "get_precis": [2, 3], "is_on_gpu": [2, 3], "to_host": 2, "hostptr": 2, "numel": 2, "pure": [2, 27, 38, 39, 46], "basisst": 2, "host": [2, 36, 38, 39, 40, 43, 47, 54, 55, 56, 64, 81, 82], "leverag": [2, 3, 9, 12, 21, 35, 37, 39, 42, 46, 47, 56, 66, 71, 74, 78], "separ": [2, 9, 21, 56, 75, 77], "mapper": 2, "inherit": [2, 36, 40, 55], "updat": [2, 9, 23, 33, 35, 53, 65, 75, 82, 83], "protect": [2, 47, 74], "getexpectedvalu": 2, "central_differ": [2, 35], "forward_differ": 2, "parameter_shift": 2, "prescrib": 2, "kernelt": 2, "argsmapp": [2, 35], "setarg": 2, "save": [2, 3, 10, 11, 16, 17, 20, 29, 52, 54, 55, 60, 68, 71, 77, 79], "nvqc": [2, 51, 54], "setkernel": 2, "been": [2, 3, 16, 19, 21, 31, 53, 54, 59, 60, 65, 75, 77], "have": [2, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 30, 31, 33, 35, 49, 52, 54, 55, 56, 60, 65, 68, 69, 70, 73, 75, 77, 78, 79, 81, 82, 83], "funcatx": [2, 3], "func": [2, 35, 49, 71, 73], "clone": [2, 11, 16, 47, 73, 75], "deriv": [2, 7, 9, 10, 19, 35, 69, 70], "exp_h": [2, 35], "forward": [2, 11, 23, 29], "approxim": [2, 8, 9, 12, 13, 14, 17, 23, 32, 56, 60], "registri": [2, 77], "unit": [2, 3, 13, 24, 25, 31, 34, 39, 40, 42, 45, 47, 53, 59, 70], "certain": [2, 3, 7, 8, 13, 21, 26, 30, 47, 54, 55, 56, 74, 77], "connect": [2, 9, 11, 14, 33, 40, 45, 47, 49, 65, 75, 83], "queue": [2, 13, 35, 54, 65], "enqueu": 2, "quantum_platform": [2, 3, 45, 55, 64, 71], "baseremoterestqpu": 2, "baseremotesimulatorqpu": 2, "orcaremoterestqpu": 2, "_qpuid": 2, "setid": 2, "thread": [2, 3, 40, 55, 56, 64, 65, 68, 74], "getexecutionthreadid": 2, "getnumqubit": 2, "getconnect": 2, "issimul": 2, "supportsconditionalfeedback": 2, "feedback": [2, 40, 59, 77], "remotecap": 2, "getremotecap": 2, "capabl": [2, 19, 20, 21, 54, 56, 68, 75, 77], "setshot": 2, "_nshot": 2, "noth": [2, 16], "wish": [2, 9, 54, 55, 64, 77], "isemul": 2, "local": [2, 3, 4, 13, 25, 32, 53, 54, 55, 60, 65, 71, 75, 76, 78], "emul": [2, 3, 13, 24, 25, 53, 56, 65], "quantumtask": 2, "setexecutioncontext": 2, "resetexecutioncontext": 2, "reset": [2, 3, 35, 38, 40, 56, 74], "kernelthunkresulttyp": 2, "launchkernel": 2, "kernelthunktyp": 2, "kernelfunc": 2, "uint64_t": 2, "rawarg": 2, "launch": [2, 35, 55, 56, 77, 82], "pack": [2, 81], "launchserializedcodeexecut": 2, "serializedcodeexecutioncontext": 2, "serializecodeexecutionobject": 2, "onrandomseedset": 2, "notifi": 2, "let": [2, 5, 7, 10, 13, 14, 15, 16, 18, 19, 21, 22, 27, 31, 42, 49, 52, 56, 58, 59, 60, 64, 66, 67, 68, 70, 71, 77, 78, 79, 82], "fermioniqbaseqpu": 2, "querabaseqpu": 2, "basenvcfsimulatorqpu": 2, "submit": [2, 3, 13, 53, 54, 56, 65, 77], "nvcf": 2, "servic": [2, 53, 54, 55, 65, 77], "interact": [2, 3, 4, 8, 13, 45, 52, 77], "enough": [2, 5, 9], "moreov": [2, 16, 35, 40, 53, 55, 59, 74], "synchron": [2, 13, 39, 55, 65], "realiz": [2, 4, 20, 21, 70], "intend": [2, 34, 35, 37, 75, 79], "popul": [2, 3, 12], "platformqpu": 2, "qubitconnect": [2, 45], "fetch": [2, 9], "supports_task_distribut": 2, "multipl": [2, 3, 9, 10, 12, 18, 19, 23, 24, 25, 29, 31, 33, 42, 52, 53, 55, 56, 59, 60, 65, 67, 69, 70, 77, 83], "parallel": [2, 10, 12, 34, 40, 56, 60, 77, 82], "qpu_id": [2, 3, 10, 12, 23, 24, 29, 35, 45, 54, 55, 60, 68], "get_shot": 2, "getter": 2, "onc": [2, 4, 9, 12, 15, 18, 21, 24, 37, 52, 53, 54, 59, 60, 65, 69, 75, 77, 79, 82], "set_shot": 2, "clear_shot": 2, "remov": [2, 9, 21, 49, 51, 54, 55, 56, 77], "numshot": 2, "setter": 2, "set_exec_ctx": 2, "get_exec_ctx": 2, "reset_exec_ctx": 2, "num_qpu": [2, 3, 10, 23, 29, 45, 54, 55, 64], "is_simul": [2, 45], "supports_conditional_feedback": 2, "get_current_qpu": [2, 45], "set_current_qpu": [2, 45], "device_id": [2, 45], "is_remot": [2, 3, 45], "qpuid": [2, 45, 55], "is_emul": [2, 3, 45], "set_nois": [2, 3], "get_remote_cap": 2, "reset_nois": 2, "turn": [2, 11, 15, 54, 61, 74], "off": [2, 3, 9, 11, 12, 15, 19, 54, 55, 75], "enqueueasynctask": 2, "kernelexecutiontask": 2, "launchvq": 2, "kernelarg": 2, "n_param": 2, "vqe": [2, 3, 9, 14, 22, 29, 30, 32, 54, 62], "settargetbackend": 2, "resetlogstream": 2, "log": [2, 3, 33, 54, 75, 77, 83], "getlogstream": 2, "setlogstream": 2, "logstream": 2, "list_platform": 2, "structur": [2, 3, 4, 8, 9, 11, 14, 21, 23, 35, 37, 41, 43, 45, 47, 55, 56, 71, 73, 74, 79], "boolean": [2, 19, 37], "field": [2, 13, 14, 32, 52, 53, 55], "initvalu": 2, "stateoverlap": 2, "serializedcodeexec": 2, "command": [2, 8, 9, 10, 12, 23, 24, 25, 29, 30, 52, 53, 54, 55, 56, 60, 64, 65, 68, 74, 75, 77, 78, 79, 81, 82], "entir": [2, 5, 13, 17, 26, 31, 49, 66, 74], "forth": [2, 55], "commun": [2, 16, 35, 53, 55, 56, 75], "isremotesimul": 2, "ir": [2, 32, 37, 61, 72, 73, 74], "synthesi": [2, 21, 32, 34, 37, 43, 47, 48, 63, 71], "ultim": [2, 71, 74], "ad": [2, 4, 18, 23, 33, 35, 53, 54, 62, 66, 71, 75, 77, 79, 82, 83], "promis": [2, 5, 7, 12], "qubitedg": [2, 45], "thunk": 2, "num_available_gpu": [2, 3, 13, 60, 68], "set_random_se": [2, 3, 8, 11, 14, 16, 18, 19], "caller": [2, 39], "unset_nois": [2, 3], "dealloc": [2, 40, 47, 74], "mpi": [2, 33, 55, 56, 66, 68, 82, 83], "against": [2, 3, 13, 33, 53, 75, 77, 79, 83], "argc": [2, 38, 60, 75, 82], "argv": [2, 38, 60, 75, 82], "program": [2, 10, 23, 24, 32, 34, 37, 39, 42, 47, 48, 53, 54, 55, 56, 57, 59, 65, 66, 68, 71, 75, 77, 79, 82], "is_initi": [2, 3, 66], "num_rank": [2, 3, 68], "all_gath": [2, 3], "gather": [2, 3, 16, 24, 25, 38, 60, 69, 70], "fit": [2, 75], "come": [2, 4, 16, 40, 54, 65, 81], "all_reduc": 2, "binaryfunct": 2, "localvalu": 2, "rootrank": [2, 3], "input_st": [2, 3, 15, 21, 53, 65], "loop_length": [2, 3, 53, 65], "bs_angl": [2, 3, 53, 65], "n_sampl": [2, 3, 65], "10000": [2, 3, 14, 19, 53, 60, 65, 68], "ps_angl": [2, 3, 65], "sample_async": [2, 3, 10, 13, 24, 35, 55, 60, 65], "make_kernel": [3, 13, 37, 53, 54, 55, 68], "els": [3, 9, 11, 12, 13, 17, 19, 21, 31, 37, 55, 56, 60, 65, 75, 79, 82], "int_valu": 3, "float_valu": 3, "pykernel": 3, "argtypelist": 3, "programmat": 3, "str": [3, 5, 8, 9, 12, 13, 17, 18, 19, 20, 53, 55, 60, 65, 70, 81], "argument_count": 3, "alia": [3, 47], "pykerneldecor": 3, "verbos": [3, 4, 57, 71, 75, 78], "modul": [3, 4, 11, 52, 56, 60, 71, 75], "none": [3, 11, 13, 16, 19, 21, 38, 39, 52, 56], "funcsrc": 3, "locat": [3, 53, 55, 75, 77, 81], "overrideglobalscopedvar": 3, "decor": [3, 9, 39, 58], "lower": [3, 13, 23, 52, 71, 74], "ast": 3, "jit": [3, 9], "executionengin": 3, "__call__": 3, "__str__": 3, "extract_c_function_point": 3, "from_json": 3, "jstr": 3, "overridedict": 3, "convert": [3, 4, 9, 10, 12, 17, 19, 23, 28, 35, 52, 64, 71], "json": [3, 53, 55, 65, 77], "merge_kernel": 3, "othermod": 3, "moduleop": 3, "synthesize_callable_argu": 3, "funcnam": 3, "block": [3, 4, 8, 14, 19, 44, 62], "awai": [3, 13, 16, 49], "funcop": [3, 73], "to_json": 3, "self": [3, 9, 11, 14, 75, 77], "reconstruct": 3, "elsewher": [3, 21], "type_to_str": 3, "clean": [3, 4, 21], "kwarg": [3, 9], "languag": [3, 21, 32, 33, 36, 39, 40, 41, 42, 47, 48, 55, 59, 66, 70, 71, 74, 78, 83], "attribut": [3, 39, 66, 71], "coprocessor": [3, 35, 39], "shots_count": [3, 7, 8, 9, 10, 13, 17, 18, 19, 24, 25, 27, 53, 56, 60, 65, 66, 68], "over": [3, 5, 12, 13, 16, 17, 23, 24, 27, 29, 35, 47, 53, 60, 65, 74, 77], "ndarrai": [3, 11, 16, 27, 31, 52], "leav": [3, 16, 27, 53, 65, 69, 77], "doesn": 3, "firstfloat": 3, "secondfloat": 3, "kei": [3, 8, 10, 13, 14, 15, 18, 19, 20, 21, 23, 30, 44, 52, 53, 54, 74, 77, 82], "nois": [3, 9, 13, 17, 21, 27, 35, 45, 53, 56, 65], "model": [3, 9, 17, 20, 23, 27, 32, 33, 34, 35, 37, 39, 42, 47, 48, 49, 52, 53, 55, 56, 65, 71, 74, 77, 82, 83], "sampleresult": [3, 9, 60, 66, 74], "_mlir_lib": [3, 13], "_quakedialect": [3, 13], "cudaq_runtim": [3, 13], "asyncsampleresult": [3, 13, 65], "platform": [3, 13, 23, 24, 32, 33, 34, 42, 48, 51, 52, 53, 54, 56, 60, 64, 68, 71, 74, 75, 77, 83], "Will": [3, 44, 60], "whose": [3, 4, 11, 14, 19, 22, 35, 40, 52, 54, 55, 64, 70], "identif": 3, "spin_oper": [3, 14, 60], "spinoper": [3, 8, 9, 11, 12, 13, 14, 20, 23, 60, 68], "nest": [3, 12, 55], "hermitian": [3, 12], "observeresult": [3, 60], "observe_async": [3, 12, 23, 24, 29, 35, 54, 68], "asyncobserveresult": 3, "arg0": [3, 71], "prepar": [3, 5, 9, 10, 11, 12, 13, 15, 18, 20, 22, 24, 29, 62, 64, 66, 68], "select": [3, 8, 9, 11, 12, 13, 17, 19, 20, 21, 22, 23, 30, 56, 60, 64, 77, 81], "get_state_async": [3, 55], "asyncstateresult": 3, "parameter_count": [3, 8, 9, 14, 22, 23, 68], "argument_mapp": [3, 14], "gradient_strategi": [3, 29], "arg1": 3, "format": [3, 11, 19, 21, 31, 35, 38, 47, 75], "ascii": [3, 31], "latex": [3, 31], "cx": [3, 9, 13, 16, 18, 21, 37, 53, 54, 68, 82], "translat": [3, 16, 19, 21, 24, 25, 35, 70, 71], "qir": [3, 71, 74], "adapt": [3, 14, 21, 33, 83], "openqasm2": 3, "openqasm": 3, "moduleid": [3, 71], "llvmdialectmodul": [3, 71], "source_filenam": [3, 71], "opaqu": [3, 47, 71], "__nvqpp__mlirgen__function_variable_qreg": 3, "_z13variable_qregv": 3, "local_unnamed_addr": [3, 71], "tail": [3, 71], "__quantum__rt__qubit_allocate_arrai": [3, 71], "i64": [3, 71], "__quantum__qis__mz": [3, 71], "9": [3, 4, 8, 9, 10, 11, 12, 13, 17, 18, 20, 21, 23, 24, 29, 33, 35, 39, 40, 56, 65, 71, 75, 77, 83], "7": [3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 29, 33, 35, 39, 40, 42, 47, 55, 65, 68, 71, 75, 77, 83], "__quantum__rt__qubit_release_arrai": [3, 71], "ret": [3, 71], "evolv": [3, 4, 16, 40, 52, 53, 70], "hamiltonian": [3, 6, 8, 9, 10, 11, 12, 13, 14, 20, 22, 23, 24, 27, 29, 38, 52, 53, 54, 55, 56, 60, 64], "operatorsum": 3, "productoper": 3, "elementaryoper": [3, 52], "scalaroper": [3, 52, 65], "schedul": [3, 14, 21, 52, 53, 60, 65], "initial_st": [3, 52], "union": [3, 18], "sequenc": [3, 7, 13, 14, 19, 21, 49, 52, 59], "collapse_oper": [3, 52], "store_intermediate_result": [3, 52], "integr": [3, 4, 13, 23, 32, 34, 40, 47, 53, 55, 77, 78], "baseintegr": 3, "evolveresult": 3, "evolut": [3, 4, 16, 20, 31, 33, 38, 40, 49, 52, 65, 74, 83], "degre": [3, 8, 23, 30, 52], "freedom": [3, 8, 52], "keyword": [3, 13], "access": [3, 4, 5, 7, 10, 12, 13, 15, 20, 23, 24, 25, 29, 33, 35, 40, 53, 54, 56, 66, 67, 68, 70, 74, 83], "properti": [3, 4, 7, 9, 13, 19, 49], "influenc": [3, 13, 30, 40], "dure": [3, 4, 6, 20, 21, 27, 35, 53, 56, 75, 77, 81], "evolve_async": [3, 53, 65], "asyncevolveresult": 3, "has_target": 3, "get_target": [3, 10, 23, 54, 55, 64, 82], "rais": [3, 12, 13, 52], "set_target": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 31, 52, 53, 54, 55, 56, 60, 64, 65, 68, 69, 74], "reset_target": [3, 13], "initialize_cudaq": 3, "environ": [3, 4, 9, 13, 23, 27, 30, 33, 53, 54, 55, 61, 65, 73, 75, 77, 82, 83], "detect": [3, 13, 60, 68, 75, 77, 81], "simulationprecis": 3, "underyl": 3, "noindex": 3, "infrastructur": [3, 33, 55, 73, 75, 83], "descript": [3, 21, 52, 54, 56, 74, 75, 77], "featur": [3, 4, 9, 15, 30, 33, 39, 75, 77, 81, 82, 83], "activ": [3, 4, 8, 11, 32, 55, 56, 75, 77, 82], "consist": [3, 4, 9, 17, 19, 21, 23, 29, 52, 60, 62], "physic": [3, 4, 13, 14, 16, 21, 23, 33, 34, 40, 47, 49, 53, 55, 56, 65, 70, 83], "0101": [3, 13, 17], "1010": [3, 13, 17], "consol": [3, 54, 61, 75], "cupi": [3, 25, 52, 77], "gettensor": 3, "compris": [3, 52], "tensori": 3, "mlirvalu": 3, "As": [3, 13, 14, 21, 34, 40, 41, 47, 52, 53, 55, 56, 58, 69, 70, 73], "hold": [3, 12], "__add__": 3, "runtimeerror": [3, 9], "new_valu": 3, "5": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 27, 29, 31, 33, 35, 37, 38, 39, 40, 42, 43, 46, 47, 52, 54, 55, 56, 62, 64, 65, 68, 71, 75, 77, 79, 83], "__radd__": 3, "__sub__": 3, "__rsub__": 3, "__neg__": 3, "__mul__": 3, "__rmul__": 3, "__getitem__": 3, "you": [3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 23, 30, 31, 32, 33, 35, 52, 53, 54, 56, 60, 62, 65, 66, 68, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83], "complexmatrix": 3, "lowest": [3, 4, 21, 23], "num_column": 3, "num_row": 3, "to_numpi": 3, "get_valu": 3, "complexflo": [3, 52], "od": [3, 19], "master": 3, "equat": [3, 4, 5, 13, 14, 15, 19, 21, 52], "solver": [3, 12, 32, 52, 53], "expectation_valu": [3, 6, 52, 64], "intermedi": [3, 16, 52, 71], "were": [3, 5, 9, 13, 19, 23, 31, 52, 77], "final_expectation_valu": 3, "trigger": 3, "final_st": 3, "intermediate_st": 3, "elementari": 3, "operator_id": 3, "further": [3, 7, 8, 42, 49, 58, 60, 71, 74, 82], "simplifi": [3, 56], "classmethod": 3, "op_id": 3, "expected_dimens": 3, "dtype": [3, 10, 12, 13, 18, 21, 27, 52, 62], "definit": [3, 13, 15, 21, 35, 37, 39, 52, 62, 74], "instanti": [3, 31, 35, 40, 46, 47, 52, 54, 55, 81], "To": [3, 9, 13, 14, 15, 18, 19, 21, 27, 35, 39, 42, 47, 52, 53, 54, 55, 56, 59, 60, 64, 65, 66, 71, 73, 74, 75, 77, 78, 79, 81, 82], "addit": [3, 7, 8, 9, 13, 15, 19, 28, 35, 54, 58, 59, 68, 75, 81, 82], "canon": 3, "sort": [3, 8, 12, 19, 78], "neg": [3, 13, 18, 31, 42, 56], "short": [3, 10, 13, 49], "atomic_oper": 3, "rydberghamiltonian": [3, 53, 65], "atom_sit": [3, 53, 65], "delta_glob": [3, 53, 65], "atom_fil": 3, "delta_loc": 3, "quera": [3, 33, 51, 83], "aquila": [3, 53, 65], "machin": [3, 9, 13, 14, 21, 34, 48, 53, 55, 65, 77], "ref": [3, 21, 49, 71], "http": [3, 4, 5, 9, 11, 14, 15, 19, 21, 23, 24, 25, 52, 53, 55, 62, 65, 75, 77], "doc": [3, 9, 24, 33, 55, 65, 83], "aw": [3, 53, 65, 75], "amazon": [3, 33, 83], "com": [3, 4, 5, 9, 11, 13, 14, 15, 21, 24, 25, 53, 56, 65, 75, 77], "braket": [3, 4, 12, 33, 51, 83], "latest": [3, 4, 5, 14, 15, 23, 33, 55, 65, 75, 77, 83], "developerguid": [3, 65], "analog": [3, 53, 70], "html": [3, 65], "ah": [3, 65], "schema": 3, "__init__": [3, 4, 9, 11], "consum": [3, 49, 81], "suppli": [3, 24, 53, 65], "coordin": [3, 31], "tweezer": 3, "trap": [3, 70], "atom": [3, 4, 13, 22, 52, 53, 65, 70], "drive": [3, 4, 8, 40, 52], "omega": [3, 20, 52, 53, 65], "detun": [3, 65], "mark": [3, 9, 81], "occupi": [3, 23, 55], "fill": [3, 39, 65, 74], "factor": [3, 15, 18, 32], "magnitud": [3, 11, 21], "h_k": 3, "dimensionless": 3, "parameter_info": 3, "cudm_stat": 3, "cudensitymatst": 3, "to_cupy_arrai": 3, "termin": [3, 29, 65, 68, 77], "At": [3, 4, 20, 75, 77], "directli": [3, 34, 35, 40, 47, 49, 56, 71, 77, 81, 82], "through": [3, 5, 7, 9, 11, 12, 16, 19, 20, 23, 27, 28, 35, 53, 58, 61, 62, 66, 74, 75, 77, 82], "c_if": [3, 37], "__iter__": 3, "__len__": 3, "equival": [3, 14, 52, 55, 56, 60, 62], "metadata": [3, 22, 71], "experi": [3, 9, 18, 30, 53, 65, 75, 77], "adher": [3, 11, 16, 39, 41, 47, 70, 74], "implicit": [3, 35, 47, 49, 52], "expectation_z": 3, "get_marginal_count": [3, 18], "marginal_indic": 3, "get_register_count": 3, "get_sequential_data": 3, "item": [3, 4, 11, 13, 18, 19, 81], "frequent": 3, "proport": 3, "kick": [3, 55], "pattern": [3, 9, 21, 34, 35, 39, 48, 71, 73], "sub_term": 3, "favor": 3, "get_spin": 3, "accessor": [3, 55], "optimizationresult": 3, "gradientdesc": 3, "initial_paramet": [3, 6, 8, 9, 14], "lower_bound": 3, "max_iter": [3, 9], "requires_gradi": 3, "upper_bound": 3, "upper": [3, 13], "neldermead": [3, 8, 14], "lbfg": [3, 35, 54], "centraldiffer": [3, 29], "parameter_vector": [3, 9, 14, 23, 29, 54], "loss": 3, "forwarddiffer": 3, "parametershift": 3, "krauschannel": [3, 13, 27], "num_control": 3, "bitflipchannel": [3, 13, 17, 18, 27, 56], "decoher": [3, 27, 52], "Its": [3, 47, 56, 70, 71], "vice": 3, "versa": 3, "180": 3, "therebi": [3, 35, 55, 71], "k_0": [3, 27], "k_1": [3, 27], "therefor": [3, 4, 8, 12, 14, 15, 16, 19, 21, 23, 47, 71, 73], "phaseflipchannel": [3, 27], "untouch": 3, "depolarizationchannel": [3, 13, 27], "mixtur": 3, "k_2": 3, "k_3": 3, "2x2": [3, 56], "decai": [3, 27], "And": [3, 13, 14, 49], "behav": 3, "free": [3, 6, 9, 14, 21, 35, 37, 38, 39, 40, 42, 44, 46, 53, 54, 58, 66, 71, 74, 77], "75": [3, 9, 15], "uniform": [3, 8, 9, 14, 17, 18, 35, 38, 60, 68], "amplitudedampingchannel": [3, 27], "dissip": 3, "energi": [3, 4, 9, 10, 13, 22, 23, 29, 35, 54, 64], "due": [3, 9, 13, 22, 27, 31, 35, 53, 56, 60, 81], "ii": [3, 12, 14], "ground": [3, 4, 8, 9, 10, 22, 23, 32, 52, 53, 54, 65, 69, 70], "krausoper": 3, "ki": [3, 12], "dag": [3, 31, 44], "col_count": 3, "row_count": 3, "scatter": [3, 9], "concaten": 3, "arg2": 3, "bin": [3, 17, 21, 53, 55, 65, 75, 77], "interferomet": [3, 53, 65], "tbi": [3, 4, 53, 65], "boson": [3, 52, 53, 65], "done": [4, 9, 12, 13, 19, 23, 31, 47, 61, 75, 77], "collabor": 4, "team": [4, 9], "basf": 4, "In": [4, 5, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 21, 24, 25, 26, 27, 29, 31, 35, 39, 49, 52, 53, 55, 56, 58, 60, 62, 64, 65, 66, 69, 73, 74, 75, 81], "tutori": [4, 8, 9, 10, 12, 13, 14, 17, 18, 20, 21, 23, 77], "hybrid": [4, 6, 13, 23, 32, 53, 78, 82], "workflow": [4, 6, 8, 11, 32, 35, 52, 53, 63, 71, 75, 78], "strongli": [4, 8, 13, 75], "algorithm": [4, 6, 8, 9, 10, 13, 14, 15, 20, 22, 23, 29, 32, 34, 37, 39, 48, 49, 54, 55, 56, 60, 62, 64, 67, 77], "eigensolv": [4, 23, 32], "preserv": [4, 16, 27], "propos": [4, 21], "anselmetti": 4, "et": [4, 14, 21], "al": [4, 14, 21], "2021": 4, "psi_t": 4, "estim": [4, 10, 12, 13, 18, 19, 20, 22, 23, 29, 56, 60], "packag": [4, 6, 7, 9, 11, 12, 13, 18, 25, 52, 75, 77, 81, 82], "instal": [4, 9, 11, 12, 13, 18, 19, 21, 22, 31, 32, 33, 52, 53, 56, 71, 73, 74, 78, 79, 81, 83], "pip": [4, 9, 11, 12, 13, 18, 19, 21, 22, 23, 31, 52, 55, 56, 75, 77, 82], "pyscf": [4, 12, 23], "6": [4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 33, 35, 38, 39, 40, 42, 43, 47, 53, 54, 55, 56, 64, 65, 71, 75, 77, 83], "openfermion": [4, 12, 23], "ipi": 4, "warn": [4, 9, 23, 25, 53], "39": [4, 6, 8, 13, 16, 17, 18, 19, 23, 75, 77], "root": [4, 75, 77], "broken": 4, "permiss": [4, 75, 77], "conflict": [4, 75, 77, 82], "behaviour": 4, "render": [4, 31], "your": [4, 5, 8, 9, 23, 24, 31, 32, 35, 52, 53, 54, 55, 56, 57, 64, 65, 68, 74, 75, 77, 81], "unus": 4, "recommend": [4, 13, 21, 35, 65, 75, 77, 82], "pypa": 4, "io": [4, 23, 62, 77], "venv": 4, "want": [4, 9, 10, 13, 14, 16, 18, 19, 21, 31, 49, 52, 54, 55, 71, 74, 75, 77, 79, 82], "suppress": 4, "matplotlib": [4, 6, 8, 9, 11, 13, 18, 19, 22, 23, 31, 52], "pyplot": [4, 6, 8, 9, 11, 13, 18, 19, 22, 23, 31, 52], "plt": [4, 6, 8, 9, 11, 13, 18, 19, 21, 22, 23, 31, 52], "gto": 4, "scf": 4, "ao2mo": 4, "mcscf": 4, "afqmc_src": 4, "vqe_cudaq_qnp": 4, "get_cudaq_hamiltonian": 4, "utils_ipi": 4, "get_coeff_wf": 4, "gen_ipie_input_from_pyscf_chk": 4, "hamgener": 4, "qmc": 4, "trial_wavefunct": 4, "particle_hol": 4, "particlehol": 4, "analysi": [4, 8, 9, 49, 71], "extract_observ": 4, "nvidia": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 21, 22, 23, 24, 25, 29, 30, 32, 33, 34, 40, 51, 52, 56, 60, 62, 64, 68, 74, 75, 77, 79, 82, 83], "recent": [4, 9, 19, 21], "tricki": 4, "manual": [4, 24, 53, 55, 75, 77], "sever": [4, 9, 66], "streamlin": [4, 32, 82], "update_opt": 4, "use_gpu": 4, "usr": [4, 25, 71, 75, 77, 81], "lib": [4, 25, 71, 73, 74, 75, 77, 78, 81, 82], "python3": [4, 9, 25, 52, 55, 56, 60, 61, 68, 75, 77, 82], "dist": [4, 9, 18, 25, 81], "qutip": [4, 31], "py": [4, 9, 25, 30, 55, 56, 60, 61, 68, 77, 82], "66": [4, 8, 9], "userwarn": [4, 25], "cython": 4, "gt": [4, 16, 21, 24, 29, 75, 77], "molecul": [4, 22, 23, 32], "build": [4, 6, 9, 10, 12, 13, 14, 17, 18, 22, 23, 29, 31, 32, 33, 37, 42, 43, 52, 57, 59, 60, 63, 64, 70, 73, 74, 77, 78, 79, 81, 83], "preliminari": [4, 19], "hartre": [4, 12, 22, 23], "fock": [4, 12, 22, 23, 52], "choos": [4, 17, 19, 27, 60, 65, 77], "chelat": 4, "agent": [4, 75], "substanc": 4, "industri": [4, 13], "scale": [4, 5, 18, 19, 21, 42, 52, 56, 68, 70], "Their": [4, 53, 75], "among": [4, 14, 55], "water": [4, 23], "soften": 4, "redox": 4, "oxid": 4, "bleach": 4, "soil": 4, "remedi": 4, "ligand": [4, 8], "catalyst": 4, "particular": [4, 5, 14, 17, 31, 33, 52, 53, 77, 81, 83], "focu": [4, 19, 21, 30], "fe": 4, "iii": 4, "nta": 4, "below": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 29, 30, 31, 33, 35, 52, 53, 54, 55, 56, 60, 62, 65, 68, 69, 71, 75, 77, 81, 82, 83], "fenta": 4, "geo_fenta": 4, "xyz": [4, 28], "cc": [4, 49, 71, 75], "pvtz": 4, "num_active_orbit": 4, "num_active_electron": 4, "o3": 4, "smaller": [4, 8, 9, 10, 12, 56], "less": [4, 9, 19, 56, 75], "geo_o3": 4, "12": [4, 9, 11, 13, 16, 17, 18, 21, 23, 25, 29, 35, 54, 69, 71, 75, 77, 82], "help": [4, 8, 12, 13, 17, 18, 24, 26, 31, 61, 62, 77], "restric": 4, "open": [4, 13, 25, 53, 55, 65, 71, 75, 77], "shell": [4, 31, 75, 77, 82], "hf": 4, "hartee_fock": 4, "rohf": 4, "chkfile": 4, "chk": 4, "224": [4, 18], "34048064812222": 4, "600": [4, 77], "orbit": [4, 23], "would": [4, 5, 9, 12, 13, 14, 15, 16, 17, 19, 23, 24, 30, 33, 49, 52, 68, 69, 70, 75, 77, 79, 81, 83], "1200": 4, "143": 4, "electron": [4, 13, 22, 23], "imposs": 4, "statevector": [4, 6, 15, 16, 24, 25, 68, 70, 82], "space": [4, 5, 10, 12, 31, 32, 40, 47, 52, 55, 65], "fewer": [4, 8, 9, 19, 20, 23, 56], "contribut": [4, 23, 29, 33, 77, 83], "whole": 4, "post": [4, 13, 21, 35, 53, 77], "casci": 4, "obtain": [4, 9, 12, 13, 17, 18, 22, 23, 31, 33, 53, 54, 75, 83], "bodi": [4, 39, 56], "t_": 4, "pq": 4, "v_": [4, 12], "prq": 4, "sum_": [4, 5, 8, 12, 14, 15, 20, 27, 43, 70], "hat": [4, 12, 82], "pqr": 4, "a_": 4, "tag": [4, 7, 15, 19, 75, 77], "jordan_wign": [4, 23], "generate_hamiltonian": 4, "fix_spin_": 4, "ss": 4, "h1": [4, 52, 53, 65], "shown": [4, 7, 10, 12, 13, 16, 53, 55, 56], "energy_cor": 4, "get_h1eff": 4, "h2": [4, 12], "get_h2eff": 4, "h2_no_symmetri": 4, "restor": 4, "v_pqr": 4, "asarrai": 4, "transpos": [4, 12], "mol_ham": 4, "jw_hamiltonian": 4, "constant_term": 4, "guess": [4, 5, 12, 19], "n_vqe_lay": 4, "maxit": [4, 18, 22, 23, 29], "100": [4, 5, 9, 11, 16, 17, 18, 19, 20, 27, 38, 52, 53], "return_final_state_vec": 4, "n_qubit": [4, 13, 16, 18, 38], "best": [4, 8, 9, 15, 21, 23, 75, 77], "optimized_energi": 4, "energy_optim": 4, "final_state_vector": 4, "state_vec": 4, "vqe_energi": 4, "callback_energi": 4, "num": [4, 10], "16": [4, 8, 9, 13, 17, 18, 19, 21, 23, 24, 29, 31, 54, 56, 62, 71], "18": [4, 9, 13, 17, 18, 21, 31, 62, 71], "n_layer": 4, "3881035525103": 4, "numer": [4, 19, 32], "combin": [4, 5, 10, 12, 18, 19, 23, 28, 30, 32, 59, 60, 69, 70, 80, 81], "walk": [4, 9, 23, 74, 75, 77], "accur": [4, 18, 56], "wide": [4, 14, 21, 49, 71, 81], "solid": 4, "summar": [4, 15, 77], "while": [4, 17, 19, 21, 23, 24, 33, 39, 59, 60, 62, 65, 71, 75, 77, 81, 83], "introduct": [4, 32, 48, 63, 79, 82], "found": [4, 8, 9, 10, 12, 13, 19, 24, 31, 33, 35, 38, 42, 52, 53, 60, 62, 74, 75, 77, 79, 80, 82, 83], "quantiz": [4, 15], "_1": [4, 18], "_2": 4, "h_": [4, 12, 13, 16], "frac": [4, 5, 7, 8, 10, 12, 14, 15, 18, 19, 20, 31, 52], "_r": 4, "fermion": 4, "annihil": [4, 52, 69], "h_1": [4, 52], "h_2": [4, 22, 32], "omit": [4, 75], "propag": 4, "chosen": [4, 23, 56, 68, 75], "slater": [4, 12], "ket": [4, 5, 6, 7, 10, 12, 15, 16, 24, 31, 60, 69, 70], "psi_": [4, 7, 12, 16], "toward": [4, 10, 13], "psi_0": [4, 7, 16], "sim": [4, 13, 53, 65], "lim_": 4, "infti": 4, "delta": [4, 53, 65], "tau": 4, "reli": [4, 21, 42, 71, 77, 79, 81], "squar": [4, 17, 18, 47, 70], "gamma": 4, "becom": [4, 5, 9, 18, 23, 64, 77, 78], "v_0": [4, 14], "n_": [4, 56], "nbsphinx": [4, 19], "l": [4, 9, 19, 23, 29, 35, 71, 79, 81], "choleski": 4, "decomposit": [4, 17, 32, 56], "pr": [4, 32], "ensembl": [4, 60], "walker": 4, "mathcal": [4, 12], "text": [4, 6, 7, 15, 18, 21, 24, 25, 31], "loc": [4, 13], "bra": [4, 6, 10, 24, 60], "mathrm": 4, "mix": [4, 27, 65], "wavefunct": [4, 23, 70], "checkpoint": 4, "ipie_hamiltonian": 4, "chol_cut": 4, "1e": [4, 12, 13, 23, 29, 56, 65], "h1e": 4, "cholesky_vector": 4, "e0": 4, "num_basi": 4, "shape": [4, 11, 16, 21, 23, 29, 68], "num_chol": 4, "nelec": 4, "afqmc_hamiltonian": 4, "reshap": [4, 11, 16], "n_active_elec": 4, "num_dets_for_prop": 4, "len": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 28, 29, 38, 47, 52, 55, 60, 65, 68, 82], "compute_trial_energi": 4, "half_rot": 4, "timestep": 4, "num_walk": 4, "num_block": 4, "afqmc_msd": 4, "num_steps_per_block": 4, "25": [4, 9, 11, 13, 15, 18, 19, 20, 26, 38, 54, 55, 56, 60, 62, 68, 77], "005": 4, "stabilize_freq": 4, "96264512": 4, "pop_control_freq": 4, "estimator_filenam": 4, "h5": 4, "finalis": 4, "qmc_data": 4, "filenam": [4, 68], "weight": [4, 8, 9, 21], "weightfactor": 4, "hybridenergi": 4, "edenom": 4, "etot": 4, "e1bodi": 4, "e2bodi": 4, "0000000000000000e": 4, "02": [4, 13, 25, 69, 75, 77], "2437583763935545e": 4, "04": [4, 75, 77], "2437583763935547e": 4, "7639365190228011e": 4, "5201781426292453e": 4, "2276634193515412e": 4, "4127560668989827e": 4, "03": [4, 9, 54], "1711742028818304e": 4, "2473358126540003e": 4, "9999999999999986e": 4, "2473358126540006e": 4, "7646854013277283e": 4, "5173495886737268e": 4, "0031922288872407e": 4, "8320523739865604e": 4, "1743088014788954e": 4, "2489226882493567e": 4, "0000000000000001e": 4, "2489226882493563e": 4, "7650504938463922e": 4, "5161278055970348e": 4, "9900990681040355e": 4, "0008400623205630e": 4, "1736864885170948e": 4, "2495677577437204e": 4, "9999999999999972e": 4, "2495677577437212e": 4, "7659644834889821e": 4, "5163967257452603e": 4, "0009188692360159e": 4, "0005173726372723e": 4, "1748969527283802e": 4, "2495531836556856e": 4, "2495531836556853e": 4, "7675907314082951e": 4, "5180375477526098e": 4, "9997269300807844e": 4, "0010618465796188e": 4, "1752703012577417e": 4, "2502732667629320e": 4, "2502732667629317e": 4, "7663343013337044e": 4, "5160610345707727e": 4, "0012131352337956e": 4, "0019003056579172e": 4, "1770170647504112e": 4, "2513369839216481e": 4, "2513369839216480e": 4, "7660812717909516e": 4, "5147442878693036e": 4, "9936984461419740e": 4, "9929966800671224e": 4, "1765353928750643e": 4, "2516138533920657e": 4, "2516138533920659e": 4, "7660292355465600e": 4, "5144153821544941e": 4, "9902337463172714e": 4, "9910800755312891e": 4, "1761532255317621e": 4, "2518524275281430e": 4, "2518524275281433e": 4, "7674246483479845e": 4, "5155722208198404e": 4, "0012943675389775e": 4, "0013880643723378e": 4, "1780913595074867e": 4, "2512465963277762e": 4, "7677999264623367e": 4, "5165533301345607e": 4, "9628730363609819e": 4, "9223106824565718e": 4, "1749814144939067e": 4, "2517668156221851e": 4, "2517668156221850e": 4, "7688306341863290e": 4, "5170638185641434e": 4, "plot": [4, 6, 8, 9, 11, 13, 18, 20, 21, 22, 23, 52], "vqe_i": 4, "vqe_x": 4, "label": [4, 8, 9, 11, 13, 18, 21, 71, 75, 82], "afqmc_i": 4, "afqmc_x": 4, "xlabel": [4, 6, 8, 9, 11, 21, 22, 23, 52], "ylabel": [4, 6, 8, 9, 11, 21, 22, 23, 52], "legend": [4, 9, 11, 13, 52], "lt": [4, 9, 24, 29], "0x7fea847f35e0": 4, "__version__": [4, 5, 11, 14, 15, 21, 24, 25], "github": [4, 5, 9, 11, 14, 15, 21, 23, 24, 25, 33, 53, 56, 62, 75, 77, 82, 83], "176f1e7df8a58c2dc3d6b1b47bf7f63b4b8d3b63": [4, 5], "bv": 5, "demonstr": [5, 6, 7, 8, 10, 12, 13, 15, 17, 19, 20, 21, 22, 28, 29, 34, 35, 37, 52, 55, 60, 67, 71], "exponenti": [5, 10, 12, 15, 18, 20, 43, 68], "speedup": [5, 20, 23, 54, 68], "suppos": [5, 7, 78], "oracl": [5, 38], "longrightarrow": [5, 7], "dot": [5, 10, 12, 14, 18, 69], "secret": [5, 38, 77], "x_1s_1": 5, "x_2s_2": 5, "x_ns_n": 5, "our": [5, 6, 7, 9, 13, 14, 16, 19, 21, 27, 31, 33, 49, 52, 53, 56, 58, 60, 65, 66, 67, 68, 71, 75, 77, 78, 79, 82, 83], "find": [5, 7, 8, 9, 12, 14, 18, 21, 22, 23, 32, 53, 54, 55, 70, 71, 75, 77], "101": [5, 9, 15, 16, 18, 19, 38], "henc": [5, 15, 16, 24, 25, 49, 52, 53, 55, 56, 60, 68, 69, 70, 75, 77, 81], "dont": [5, 24], "x_3s_3": 5, "strateg": 5, "st": 5, "001": [5, 11, 15, 16, 18, 19, 77], "nd": 5, "010": [5, 15, 16, 18, 19], "rd": 5, "rememb": [5, 7, 9, 24], "perspect": 5, "inner": [5, 16, 47, 55], "mechan": [5, 7, 16, 35, 37, 43, 47, 49, 52, 55, 61, 70, 73], "hidden": [5, 40], "why": [5, 15], "did": [5, 19, 75, 77], "011": [5, 16, 18, 19, 38], "s_3": 5, "isol": [5, 60], "s_2": 5, "difficult": [5, 8, 35], "speak": 5, "advantag": [5, 7, 20, 21, 23, 30, 77], "entangl": [5, 16, 27, 31, 40, 54, 58, 65], "problem": [5, 7, 9, 10, 12, 14, 15, 22, 23, 49, 52, 56, 59], "answer": [5, 15], "black": [5, 7, 9, 13], "box": [5, 7, 27, 81], "setup": [5, 8, 33, 52, 56, 65, 77, 83], "auxiliari": [5, 32], "kickback": 5, "hadamard": [5, 12, 15, 16, 19, 26, 32, 37, 42, 47, 49, 66, 70, 73], "sum_x": 5, "u_f": [5, 7], "oplu": 5, "neq": [5, 7, 8, 19], "chanc": [5, 17, 19, 81], "cell": [5, 8, 12, 13, 16, 17, 23, 28, 31], "small": [5, 9, 10, 18, 19, 23, 56, 81], "increas": [5, 8, 10, 12, 20, 30, 33, 52, 56, 60, 68, 69, 77, 82, 83], "30": [5, 9, 11, 13, 16, 18, 21, 55, 68], "qpp": [5, 9, 11, 13, 14, 15, 16, 21, 24, 51, 54, 56, 60, 68, 71, 74, 77, 82], "qubit_count": [5, 7, 11, 14, 15, 19, 22, 23, 24, 27, 55, 56, 58, 60, 68, 82], "secret_str": 5, "whatev": 5, "prefer": [5, 75, 77], "insid": [5, 9, 13, 55, 77], "auxiliary_qubit": 5, "verifi": [5, 7, 15, 19, 26, 52, 70], "procedur": [5, 6, 8, 9, 12, 17, 21, 22, 23, 29], "bernstein_vazirani": [5, 77], "auxillari": [5, 9, 12, 17], "place": [5, 14, 16, 23, 24, 25, 30, 55, 58, 60], "success": [5, 29, 65, 73], "join": [5, 13, 18, 19], "q2": [5, 9, 15, 19, 21, 31], "q3": [5, 9, 19, 31], "q4": [5, 9, 19], "q5": [5, 19], "11010": [5, 14, 19], "involv": [6, 8, 19, 56, 68, 71, 81], "bloch": [6, 31], "rx": [6, 8, 9, 10, 11, 13, 14, 16, 18, 31, 42, 46, 62, 68], "intial": 6, "cost_valu": [6, 8], "initial_cost_valu": 6, "suit": [6, 21, 77], "alogrithm": 6, "decreas": [6, 52, 69], "x_valu": [6, 8], "y_valu": [6, 8], "epoch": [6, 8, 11, 22, 23], "concis": 7, "desutch": 7, "balanc": [7, 69], "regardless": [7, 12, 16, 33, 81, 83], "ouput": 7, "carri": [7, 19], "treat": [7, 55], "snippet": [7, 52, 54, 55, 64, 71, 77], "don": [7, 15, 33, 35, 54, 83], "elif": [7, 13], "notic": [7, 9, 14, 16, 19, 21, 23, 49, 68, 71, 78], "That": [7, 13, 24, 25, 35, 82], "twice": [7, 23], "claim": [7, 17], "evalul": 7, "outlin": [7, 13, 19, 81], "symbol": [7, 75, 81], "OR": [7, 65], "rule": [7, 19, 23, 52], "modulo": [7, 19], "oplus5": 7, "8_": 7, "oplus4": 7, "9_": 7, "quick": [7, 16, 32, 53, 79], "yield": [7, 16, 24, 25, 56, 69, 70, 82], "align": [7, 15, 16, 71, 81], "remark": [7, 21], "becaus": [7, 18, 19, 21, 49, 56, 65, 75, 77, 82], "overlin": 7, "bar": [7, 14, 15, 18, 31], "top": [7, 9, 13, 18, 19, 55, 62, 69, 74, 78], "denot": [7, 15, 17, 39, 41], "prove": [7, 70], "shall": [7, 16, 70], "tfrac": [7, 16, 70], "summari": 7, "unchang": [7, 27, 71], "simultan": [7, 54, 56], "exploit": [7, 56], "abil": [7, 17, 20, 21, 40, 71], "aim": [7, 9, 14, 19], "diagram": [7, 8, 14, 15, 16, 19, 53, 65], "psi_1": 7, "h_1h_0": 7, "psi_2": 7, "drop": [7, 13], "figur": [7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 23, 30, 71], "pm": 7, "practic": [7, 9, 10, 12, 17, 18, 21, 23], "fx": 7, "qubit_0": [7, 14, 16, 62], "half": [7, 65], "neither": 7, "nor": 7, "b_0": 7, "b_1": 7, "hint": 7, "approach": [7, 8, 9, 15, 18, 19, 35, 39, 56, 71], "solv": [7, 8, 12, 14, 15, 52, 59], "drug": 8, "often": [8, 19, 23, 35, 49, 62, 75, 77], "bind": [8, 34, 37, 39, 42, 75], "protein": [8, 21], "inhibit": 8, "therapeut": 8, "purpos": [8, 12, 19, 40, 49, 52, 77], "candid": 8, "extrem": [8, 35], "studi": [8, 16, 21], "guid": [8, 33, 53, 75, 77, 79, 82, 83], "search": [8, 19, 21, 75, 77], "predict": [8, 13, 70], "usual": [8, 9, 75, 77, 81], "One": [8, 15, 19, 21, 23, 24, 35, 49, 53, 55, 56, 61, 64], "challeng": [8, 9, 19], "aris": [8, 21, 27], "mani": [8, 9, 15, 16, 17, 19, 21, 23, 24, 25, 28, 29, 33, 42, 45, 55, 56, 60, 62, 68, 82, 83], "geometr": 8, "present": [8, 9, 14, 18, 21, 24, 29, 60, 75, 78], "orient": 8, "assess": [8, 13], "good": [8, 12, 23], "solut": [8, 14, 19], "formul": [8, 49], "mathemat": [8, 16, 52, 69, 70], "paper": [8, 9, 10, 12, 13, 17, 19], "digit": [8, 11, 25], "counteradiabat": 8, "understand": [8, 9, 12, 13, 16, 18, 34, 77], "pleas": [8, 9, 12, 23, 31, 33, 54, 55, 56, 65, 68, 73, 75, 77, 82, 83], "maxcut": 8, "There": [8, 9, 16, 24, 28, 35, 37, 53, 54, 55, 62, 68, 77], "experiment": [8, 13, 33, 77, 83], "pharmacor": 8, "chemic": [8, 13, 22], "group": [8, 9, 47, 56], "govern": [8, 20], "distanc": [8, 9, 16, 18, 22], "graph": [8, 9, 14], "lag": 8, "node": [8, 9, 12, 14, 34, 55, 68, 75], "edg": [8, 9, 14], "feesibli": 8, "coexist": 8, "cliqu": 8, "mutual": 8, "comment": [8, 14], "discret": [8, 21, 47], "natur": [8, 9, 16, 31, 53, 56, 70], "qubit_num": [8, 10, 23], "non_edg": 8, "6686": 8, "1453": 8, "penalti": [8, 9], "num_lay": 8, "expens": [8, 23, 56], "6886": 8, "1091": 8, "0770": 8, "w_i": 8, "sigma": [8, 12, 20, 52], "z_i": 8, "notin": 8, "z_j": [8, 20], "concern": [8, 70, 75], "vertic": [8, 14], "penal": 8, "ham_cliqu": 8, "spin_ham": [8, 23], "wt": 8, "zip": [8, 12, 75], "strip": [8, 12, 20, 75], "term_coeffici": 8, "ham": [8, 10, 12, 20], "term_word": 8, "coef": [8, 12], "0j": [8, 10, 14, 60, 62], "iiziiz": 8, "ziizii": 8, "1657": 8, "iziiii": 8, "iziizi": 8, "42735": 8, "iiizii": 8, "2791499999999996": 8, "iiiiii": 8, "iiziii": 8, "iiiiiz": 8, "ziiiii": 8, "iiiizi": 8, "inclus": [8, 23], "better": [8, 9, 13, 14, 18, 21, 54, 56, 75], "layer": [8, 9, 11, 13, 14, 17, 39, 53], "hopefulli": 8, "offset": 8, "dc_qaoa": 8, "pauli_word": [8, 12, 20, 28, 55], "exp_pauli": [8, 12, 20, 28], "k": [8, 10, 12, 13, 15, 19, 39], "nelder": 8, "mead": 8, "line": [8, 9, 10, 14, 19, 23, 30, 31, 53, 55, 56, 65, 71, 74, 75, 77], "13": [8, 9, 11, 13, 14, 17, 18, 19, 21, 22, 23, 29, 31, 68, 71, 77], "21810696323572243": [8, 14], "20613464375211488": [8, 14], "2546877639814583": [8, 14], "3657985647468064": [8, 14], "37118004688049144": 8, "03656087558321203": 8, "08564174998504231": 8, "21639801853794682": 8, "11122286088634259": 8, "1743727097033635": 8, "36518146001762486": 8, "15829741539542244": 8, "3467434780387345": 8, "28043500852894776": 8, "09986021299050934": 8, "14125225086023052": 8, "19141728018199775": 8, "11970943368650361": 8, "3853063093646483": 8, "1112643868789806": 8, "3527177454825464": 8, "22156160012057186": 8, "1418496891385843": 8, "32811766468303116": 8, "367642000671186": 8, "34158180583996006": 8, "10196745745501312": 8, "29359239180502594": 8, "3858537615546677": 8, "19366130907065582": 8, "24570488114056754": 8, "3332307385378807": 8, "12287973244618389": 8, "007274514934614895": 8, "015799547372526146": 8, "3578070967202224": 8, "39268963055535144": 8, "19872246354138554": 8, "16668715544467982": 8, "13777293592446055": 8, "17514665212709513": 8, "15350249947988204": 8, "32872977428061945": 8, "20068831419712105": 8, "032919322131134854": 8, "19399909325771983": 8, "09477141125241506": 8, "08210460401106645": 8, "21392577760158515": 8, "3393568044538389": 8, "14615087942938465": 8, "03790339186006314": 8, "2843250892879255": 8, "3151384847055956": 8, "19983741137121905": 8, "27348611567665115": 8, "33457528180906904": 8, "14145414847455462": 8, "20604220093940323": 8, "05410235084309195": 8, "04447870918600966": 8, "3355714098595045": 8, "266806440171265": 8, "07436189654442632": 8, "2789176729721685": 8, "2427508182662484": 8, "cost": [8, 9, 11, 12, 14, 22, 23, 29, 32, 35, 54, 65], "optimal_expect": [8, 14], "optimal_paramet": [8, 9, 14, 54], "0057493966746804": 8, "0508763934174787": 8, "013930789730781493": 8, "5793211220774144": 8, "878009560684498": 8, "5277129177248182": 8, "4404810513078178": 8, "5755552245467919": 8, "14125558672355468": 8, "3724262117066903": 8, "1318978057007808": 8, "1228708513911436": 8, "932342804955409": 8, "8478237950658537": 8, "46345886313018125": 8, "5809397306340341": 8, "2408342488137229": 8, "11216088888484882": 8, "009704173265255175": 8, "4757346661223584": 8, "7281211610985926": 8, "06051951319169091": 8, "7794512146826196": 8, "09249435261907034": 8, "09998378319110682": 8, "255349350720572": 8, "2607038244228248": 8, "2060124032311757": 8, "13991934581192997": 8, "9874814082082164": 8, "1591291464755939": 8, "30815482837046393": 8, "9701804681517978": 8, "002609462845755913": 8, "43533533568363353": 8, "642630110681613": 8, "6137063363954748": 8, "7204687246344496": 8, "08390768435524378": 8, "5480630700433249": 8, "38905723227347905": 8, "6837811162838194": 8, "17239016898719284": 8, "1649341118754853": 8, "46771209183422724": 8, "008565327035838663": 8, "982230359328883": 8, "4232972687799105": 8, "22765896988428905": 8, "04207923928239914": 8, "36758378917672285": 8, "01825447063622079": 8, "059755059728027485": 8, "6849697218162497": 8, "2711684382411018": 8, "2904257415666667": 8, "16359529445017368": 8, "09168623367396612": 8, "5786087806926155": 8, "3476755367718726": 8, "1209273564533628": 8, "605136043801364": 8, "19128215816141694": 8, "16756583092588012": 8, "0715488214105267": 8, "5269641128095075": 8, "3029128369198704": 8, "reveal": 8, "bitst": 8, "ideal": [8, 13, 17, 27, 53, 54, 65], "partit": [8, 9, 14, 54, 55, 77], "200000": 8, "mvwcp": 8, "110001": 8, "011100": 8, "111000": 8, "199979": 8, "011000": 8, "converg": [8, 10, 19, 23], "explor": [9, 13, 17, 19, 23, 68, 70, 77], "research": [9, 13, 54], "arxiv": [9, 19], "org": [9, 11, 19, 52, 75, 77], "pdf": [9, 19, 31], "2402": 9, "01529": 9, "edinburgh": 9, "jointli": [9, 21], "develop": [9, 11, 12, 21, 32, 39, 40, 53, 54, 56, 63, 70, 73, 74, 75, 78, 82], "author": 9, "barrier": 9, "mit": 9, "licens": [9, 75, 77], "boniface316": 9, "bigdata_vqa": 9, "unsupervis": 9, "learn": [9, 11, 14, 19, 21, 31, 33, 53, 54, 59, 60, 81, 82, 83], "techniqu": [9, 19, 23, 29, 30, 56, 60], "similar": [9, 24, 35, 55, 60, 75], "characterist": 9, "enhanc": [9, 13, 16, 32], "reliabl": [9, 81], "todai": 9, "limit": [9, 16, 55, 56, 60, 68, 81], "far": [9, 13, 16], "too": [9, 31, 70], "extend": [9, 15, 17, 32, 33, 34, 80, 83], "harrow": 9, "emphas": 9, "util": [9, 11, 21, 27, 35, 47, 54, 55, 56, 68, 71, 74], "bipartit": 9, "branch": [9, 33, 37, 56, 75, 77, 83], "directori": [9, 13, 25, 73, 75, 77, 81], "tree": 9, "uncom": [9, 12, 14, 75, 77], "skip": [9, 31, 75], "mkdir": [9, 74, 75, 78], "divisive_clustering_src": 9, "wget": [9, 75, 77], "githubusercont": 9, "sphinx": 9, "divisive_clust": 9, "main_divisive_clust": 9, "mpi4pi": [9, 56, 82], "networkx": 9, "panda": [9, 18], "scikit": [9, 11], "tqdm": [9, 21], "nx": 9, "pd": [9, 18], "divisiveclust": 9, "dendrogram": 9, "voironi_tessal": 9, "filterwarn": 9, "toggl": 9, "circuit_depth": 9, "max_shot": 9, "x_1": 9, "x_2": [9, 13], "x_n": 9, "much": [9, 10, 13, 23, 74], "w": [9, 13, 44, 56, 65], "reason": [9, 17, 49], "conclus": 9, "variou": [9, 13, 24, 33, 53, 55, 58, 66, 71, 74, 83], "1703": 9, "06476": 9, "essenti": 9, "boil": 9, "down": [9, 16, 55, 65], "toler": [9, 13], "constraint": [9, 18, 21, 39, 40, 41, 56, 60, 65, 70], "priori": 9, "load": [9, 11, 35, 40, 53, 54, 65, 71, 73], "frame": 9, "imag": [9, 11, 12, 14, 16, 19, 21, 31, 33, 52, 65, 75, 82, 83], "star": 9, "create_dataset": 9, "number_of_sampling_for_centroid": 9, "coreset_s": 9, "number_of_coresets_to_evalu": 9, "coreset_method": 9, "bfl2": 9, "coreset_vector": 9, "coreset_weight": 9, "get_best_coreset": 9, "coreset_df": 9, "datafram": [9, 18], "chr": 9, "65": [9, 14, 18, 19, 27], "028364": 9, "669787": 9, "234": [9, 18], "230716": 9, "167441": 9, "354792": 9, "319288": 9, "022889": 9, "921443": 9, "125": [9, 29, 35, 38, 43, 54, 55, 64], "158339": 9, "706134": 9, "636852": 9, "650774": 9, "998497": 9, "455847": 9, "116": 9, "758239": 9, "507918": 9, "630311": 9, "120": [9, 19, 77], "727176": 9, "102508": 9, "297727": 9, "53": [9, 18], "294127": 9, "722463": 9, "400433": 9, "77": [9, 18], "415840": 9, "425868": 9, "341136": 9, "42": [9, 11, 13, 18, 19, 22, 23], "847985": 9, "985373": 9, "063209": 9, "240": 9, "116237": 9, "7eba00": 9, "color": [9, 13, 14], "marker": 9, "titl": [9, 21, 22, 23, 53, 77, 82], "cast": 9, "routin": [9, 14, 35], "e_": 9, "ij": [9, 21], "w_iw_jd_": 9, "d_": [9, 12], "euclidean": 9, "coreset_to_graph": 9, "vqa": 9, "src": [9, 53, 56, 75], "motiv": [9, 48, 75], "cut": [9, 32, 75, 77], "get_k2_hamiltonian": 9, "k2": [9, 13], "r_z": 9, "r_y": 9, "cascad": 9, "benefit": [9, 13, 17, 33, 60, 82, 83], "get_vqe_circuit": 9, "number_of_qubit": 9, "theta_posit": 9, "rz": [9, 13, 14, 16, 31, 38, 42], "visual": [9, 13, 14, 32, 49, 63], "rand": 9, "8904": 9, "7335": 9, "4343": 9, "2236": 9, "7937": 9, "9981": 9, "3945": 9, "696": 9, "3352": 9, "6658": 9, "05277": 9, "791": 9, "003569": 9, "4119": 9, "3205": 9, "3504": 9, "3913": 9, "7392": 9, "3171": 9, "0008056": 9, "proper": 9, "get_optim": 9, "initial_param": [9, 29], "divisiveclusteringvqa": 9, "run_divisive_clust": 9, "get_counts_from_simul": 9, "acceler": [9, 11, 12, 13, 23, 32, 33, 54, 56, 60, 68, 74, 75, 77, 82, 83], "associ": [9, 13, 14, 17, 24, 25, 40, 55, 69, 70], "super": [9, 11, 23], "coreset_vectors_df_for_iter": 9, "coreset_vectors_for_iteration_np": 9, "coreset_weights_for_iteration_np": 9, "_get_iteration_coreset_vectors_and_weight": 9, "metric": [9, 13, 17], "coreset_to_graph_metr": 9, "_get_best_bitstr": 9, "create_hamiltonian": 9, "optimizer_funct": 9, "create_circuit": 9, "objective_funct": [9, 23, 29], "get_result": [9, 23, 29, 52], "mostli": 9, "previous": [9, 29, 33, 53, 77, 83], "threshold_for_max_cut": 9, "percent": [9, 17], "advanc": [9, 19, 23, 30], "normal": [9, 11, 16, 22, 23, 29, 70], "get_divisive_sequ": 9, "analyz": [9, 13, 21, 73], "postprocess": 9, "sourc": [9, 10, 13, 14, 18, 27, 33, 49, 52, 56, 71, 74, 77, 78, 79, 82, 83], "normalize_vector": 9, "sort_by_descend": 9, "hierarchial_clustering_sequ": 9, "129": [9, 19], "12075": 9, "19it": 9, "35025": 9, "50it": 9, "44254": 9, "09it": 9, "15827": 9, "56it": 9, "13617": 9, "87it": 9, "nice": 9, "earli": [9, 54, 77], "split": [9, 13, 68], "least": [9, 14, 19, 20, 21, 24, 25, 55, 75], "dendo": 9, "plot_dendrogram": 9, "plot_titl": 9, "complic": [9, 43], "occasion": 9, "especi": 9, "puzzl": 9, "glanc": [9, 16], "seem": [9, 70, 77, 82], "strai": 9, "belong": 9, "wrong": 9, "explan": 9, "stochast": [9, 35], "few": [9, 14, 19, 21, 23, 62], "pai": [9, 15], "exclud": [9, 54, 60, 75], "proxim": 9, "impact": [9, 23, 27, 56], "look": [9, 16, 30, 31, 33, 49, 52, 53, 55, 59, 60, 64, 65, 66, 67, 68, 71, 75, 77, 83], "unusu": 9, "go": [9, 21, 31, 47, 55, 66, 75, 77], "origin": [9, 12, 16, 27, 49, 71], "14": [9, 10, 11, 13, 16, 17, 18, 19, 21, 23, 31, 54, 62, 65, 71], "plot_hierarchial_split": 9, "hierarch": 9, "flat": [9, 55], "perpendicular": 9, "intersect": 9, "threshold": [9, 12, 13, 19, 56], "height": 9, "get_clusters_using_k": 9, "desir": [9, 19, 21, 45, 52, 55, 60, 74, 75, 77, 79], "15": [9, 11, 13, 17, 18, 21, 23, 31, 56, 62, 68, 71, 75, 77], "threshold_height": 9, "get_clusters_using_height": 9, "red": [9, 18, 24, 25], "blue": [9, 24, 25], "green": [9, 14], "purpl": 9, "orang": 9, "yellow": 9, "color_threshold": 9, "plot_clust": 9, "show_annot": 9, "get_voronoi_tessal": 9, "region": [9, 53], "accord": [9, 56], "centroid": 9, "tesslation_by_clust": 9, "complet": [9, 10, 12, 13, 16, 20, 27, 35, 52, 53, 75, 77, 81, 82], "plot_voironi": 9, "overlai": 9, "vt": 9, "voironi": 9, "tessal": 9, "design": [9, 14, 23, 30, 32, 34, 52, 55, 62, 82], "flexibl": [9, 58, 75], "tool": [9, 13, 18, 24, 28, 29, 31, 33, 49, 71, 73, 75, 79, 81, 83], "get_qaoa_circuit": 9, "3527": 9, "19": [9, 13, 17, 18, 19, 21, 31, 54, 62, 71], "20": [9, 12, 13, 17, 18, 19, 21, 25, 31, 41, 47, 56, 62, 69, 71, 79, 82], "484": 9, "12163": 9, "89it": 9, "52703": 9, "30it": 9, "48": 9, "31987": 9, "07it": 9, "36393": 9, "37957": 9, "42473": 9, "96it": 9, "quickli": [9, 10, 35, 77], "encount": [9, 54, 56, 65, 75, 77, 82], "port": [9, 55, 77], "hpc": [9, 33, 77, 83], "becam": 9, "massiv": [9, 20], "compar": [9, 13, 23, 28, 59, 60, 77, 82], "100000": [9, 10, 68], "try": [9, 10, 13, 15, 17, 19, 21, 23, 31, 68, 77], "slightli": [9, 23], "751": 9, "3460": 9, "26it": 9, "42771": 9, "74it": 9, "4064": 9, "6862": 9, "37it": 9, "56871": 9, "92it": 9, "44979": 9, "13it": 9, "128": [9, 11, 21, 71], "19366": 9, "94it": 9, "53773": 9, "54648": 9, "91it": 9, "51941": 9, "85it": 9, "56111": 9, "461": 9, "866833317": 9, "spent": 9, "452308367999706": 9, "oner": 9, "feel": 9, "interrupt": 9, "patienc": 9, "worn": 9, "still": [9, 16, 17, 20, 24, 39, 49, 60, 65, 69, 70, 77, 81], "easili": [9, 10, 13, 14, 20, 60, 75, 77, 81], "27": [9, 13, 18, 19, 60], "7352": 9, "2063": 9, "82it": 9, "16492": 9, "4739": 9, "44it": 9, "256": [9, 11, 53], "15185": 9, "58it": 9, "64": [9, 11, 55, 56, 71, 75, 77], "23728": 9, "05it": 9, "15437": 9, "97it": 9, "50840": 9, "32": [9, 11, 18, 53, 56, 71, 77], "33562": 9, "54120": 9, "54560": 9, "55924": 9, "42717": 9, "29it": 9, "55007": 9, "27it": 9, "53601": 9, "33it": 9, "47127": 9, "01it": 9, "67": 9, "61674502899999": 9, "21": [9, 13, 17, 18, 21, 31, 62, 69, 71], "439895901": 9, "push": [9, 81], "a100": 9, "yourself": [9, 75], "28": [9, 11, 13, 18, 33, 55, 75, 77, 82, 83], "nlopt": [9, 71], "failur": [9, 81], "pool": [9, 54, 68], "finish": [9, 13, 24, 60, 71], "fail": [9, 17, 25, 56, 73, 77, 81], "immedi": [9, 55, 74], "issu": [9, 35, 56, 75, 77, 81, 82], "mgpu": [9, 12, 15, 23, 30, 33, 51, 54, 55, 56, 68, 83], "gpu_count": 9, "smi": [9, 75, 77], "wc": 9, "mpirun": [9, 55, 56, 68], "Not": [9, 39, 53, 54, 77], "subroutin": [10, 23, 59, 62], "molecular": [10, 13, 22, 23, 32], "semidefinit": 10, "briefli": 10, "introduc": [10, 14, 17, 19, 35], "ancilla": [10, 12, 35, 37], "insight": 10, "re": [10, 13, 18, 19, 35, 49, 52, 66, 68, 75, 77], "x_1x_2": 10, "fact": [10, 15, 19, 49, 81], "u_": [10, 21], "qquad": 10, "repeatedli": [10, 17, 19, 60], "pmatrix": [10, 27], "functool": [10, 18], "psi_stat": 10, "phi_stat": 10, "sv": [10, 17, 79], "707107": 10, "ham_matrix": 10, "exp_val": [10, 11, 22, 23, 29, 52, 55, 64], "conj": [10, 12, 16, 21], "7071067690849304": 10, "fourth": [10, 52], "u_psi": 10, "u_phi": 10, "ham_cir": 10, "mean_val": 10, "qc": [10, 53], "85281": 10, "14719": 10, "70562": 10, "0015844563982640861": 10, "hilbert": [10, 47, 52], "orthogon": [10, 12], "easi": [10, 14, 19, 52, 79], "mqpu": [10, 12, 23, 24, 29, 51, 56, 60, 64, 68], "sake": 10, "qpu_count": [10, 23, 29, 55], "four": [10, 13, 17, 29, 55, 64, 70], "i_result": 10, "49865": 10, "50135": 10, "0027": 10, "0022360598270171573": 10, "49796": 10, "50204": 10, "00408": 10, "002236049366181346": 10, "49695": 10, "50305": 10, "0061": 10, "002236026375068058": 10, "49972": 10, "50028": 10, "00056": 10, "002236067626884303": 10, "my_mat": 10, "linalg": [10, 12, 18, 52], "eigh": 10, "00782313": 10, "00456313": 10, "76575845": 10, "64312829": 10, "highlight": [11, 30, 33, 83], "pytorch": 11, "maximis": 11, "classif": 11, "mnist": 11, "dataset": 11, "classifi": [11, 21], "hand": [11, 16, 54, 55, 56, 77, 81], "written": [11, 18, 31, 35, 69, 70, 75, 79], "torch": [11, 21, 52], "cu118": 11, "torchvis": 11, "url": [11, 53, 55, 65, 75, 77], "download": [11, 21, 75, 77, 82], "whl": [11, 75], "autograd": 11, "nn": 11, "sklearn": 11, "model_select": 11, "train_test_split": 11, "manual_se": [11, 21], "22": [11, 13, 18, 19, 21, 31, 60, 62, 69, 71, 75, 77], "44": [11, 18], "prepare_data": 11, "target_digit": 11, "sample_count": [11, 68], "test_siz": 11, "percentag": 11, "remaind": [11, 14], "train": [11, 13, 21], "totensor": 11, "1307": 11, "3081": 11, "filter": 11, "datapoint": 11, "subset_indic": 11, "randperm": 11, "unsqueez": 11, "relabel": 11, "min": [11, 12, 19], "x_train": 11, "x_test": 11, "y_train": 11, "y_test": 11, "shuffl": 11, "random_st": 11, "classification_threshold": 11, "accuraci": [11, 13, 19, 21, 56], "parmet": 11, "visualis": 11, "sample_to_plot": 11, "grid_img": 11, "make_grid": 11, "pad": 11, "imshow": 11, "permut": [11, 17], "quantumfunct": 11, "finit": [11, 23, 29], "theta_v": 11, "excetut": 11, "live": 11, "tolist": [11, 17], "staticmethod": 11, "quantum_circuit": 11, "backward": [11, 23, 29, 41], "save_for_backward": 11, "grad_output": 11, "saved_tensor": 11, "thetas_plu": 11, "exp_vals_plu": 11, "thetas_minu": 11, "exp_vals_minu": 11, "mul": 11, "quantumlay": 11, "hybrid_qnn": 11, "fc1": 11, "fc2": 11, "dropout": 11, "fc3": 11, "fc4": 11, "fc5": 11, "feed": [11, 14], "view": [11, 40, 50, 53, 77], "relu": 11, "fed": 11, "sigmoid": 11, "accuracy_scor": 11, "y_hat": 11, "hybrid_model": 11, "adadelta": 11, "lr": [11, 71], "weight_decai": 11, "loss_funct": 11, "bceloss": 11, "training_cost": 11, "testing_cost": 11, "training_accuraci": 11, "testing_accuraci": 11, "zero_grad": 11, "y_hat_train": 11, "train_cost": 11, "eval": [11, 12], "no_grad": 11, "y_hat_test": 11, "test_cost": 11, "figsiz": [11, 13, 18, 21], "subplot": [11, 13, 18], "tight_layout": [11, 13], "proto": [11, 21], "018ba9130a0e5800b93e86d0096a22daf7a132f8": [11, 21], "multirefer": 12, "mrsqk": 12, "low": [12, 13, 18, 42, 53, 68], "altern": [12, 14, 20, 53, 65, 67, 75, 77, 82], "background": [12, 55], "trotter": [12, 32, 43], "diagon": [12, 56], "heurist": 12, "cisd": 12, "veri": [12, 21, 33, 55, 66, 73, 81, 83], "unitari": [12, 15, 22, 23, 32, 38, 42, 49, 62, 67, 70], "lcu": 12, "avoid": [12, 21, 75, 81, 82], "dimension": [12, 13, 16, 21, 31, 47, 52, 62, 65], "phi_0": 12, "phi_d": 12, "phi_i": 12, "mu": 12, "phi_": 12, "famili": 12, "alpha": [12, 14, 16, 52, 70], "equiv": [12, 19, 70], "psi_i": 12, "_n": 12, "c_": 12, "c_i": 12, "boldsymbol": 12, "hc": 12, "sc": [12, 53], "s_": 12, "beta": [12, 16, 70, 71], "_m": 12, "phi_j": 12, "sigma_": [12, 52], "question": 12, "scipi": [12, 13, 18, 22, 23, 29, 52], "openfermionpyscf": [12, 22, 23], "multi_gpu": 12, "geometri": [12, 22, 23], "7474": [12, 22], "chemistri": [12, 13, 22, 23], "create_molecular_hamiltonian": [12, 22], "sto": [12, 22, 23], "3g": [12, 22, 23], "electron_count": [12, 22, 23], "n_electron": [12, 22], "qubits_num": 12, "n_orbit": [12, 22], "spin_ham_matrix": 12, "eig": 12, "argmin": [12, 21], "min_indic": 12, "vec": [12, 62], "termcoeffici": [12, 20], "termword": [12, 20], "pauli_str": 12, "potenti": [12, 16, 19, 23, 24, 35, 60], "improv": [12, 19, 23, 30, 33, 56, 68, 77, 83], "higher": [12, 34, 56], "receiv": [12, 35], "compon": [12, 14, 19, 21, 52, 75, 77, 81, 82], "um": 12, "u_m": 12, "dt": [12, 20], "un": 12, "u_n": 12, "apply_pauli": 12, "qfd_kernel": 12, "dt_alpha": 12, "dt_beta": 12, "word_list": 12, "my_list": 12, "x_0": [12, 13], "y_0": 12, "m_qfd": 12, "wf_overlap": 12, "accomplish": [12, 26], "along": [12, 22, 28, 35, 53, 54, 56, 60, 62, 81], "observe_op": 12, "identity_word": 12, "pauli_list": 12, "dt_m": 12, "dt_n": 12, "temp": [12, 71], "collect_overlap_r": 12, "collect_overlap_img": 12, "sent": [12, 53, 55, 65], "count_id": 12, "tot_dim": 12, "real_val": 12, "img_val": 12, "ham_matrx": 12, "tot_": 12, "accumul": [12, 65], "ham_matrix_r": 12, "ham_matrix_imag": 12, "enter": [12, 65, 77], "eigenvaulu": 12, "sum_k": 12, "s_k": 12, "kj": 12, "hx": 12, "sce": 12, "s_diag": 12, "s_prime": 12, "sii": 12, "valueerror": [12, 13, 52], "x_prime": 12, "h_prime": 12, "conjug": [12, 17, 52], "e_prim": 12, "c_prime": 12, "eigen_valu": 12, "eigen_vect": 12, "qfd": 12, "perhap": 13, "highli": [13, 75, 77], "tout": 13, "fault": [13, 82], "correl": [13, 18], "materi": [13, 65, 70], "particularli": [13, 19, 21, 23, 56, 59, 62], "interest": [13, 15, 16, 17, 19, 21, 22, 23, 64, 66], "theori": [13, 69, 70], "dmft": 13, "account": [13, 19, 53, 54, 65, 77], "strong": 13, "bath": 13, "encompass": 13, "tough": 13, "notebook": [13, 16, 21, 31, 33, 53, 83], "showcas": [13, 31], "siam": 13, "realist": 13, "neutral": [13, 53], "appar": 13, "demo": [13, 53], "cudaq_solv": 13, "importerror": [13, 31], "quiet": 13, "restart": [13, 31], "newli": [13, 56, 77], "abc": 13, "restrict": [13, 14, 16, 21, 23, 55], "z_0": 13, "z_2": 13, "coulomb": 13, "strength": [13, 52], "grid": 13, "ev": 13, "trainabl": 13, "absenc": 13, "paramterized_ansatz": 13, "variational_angl": 13, "run_logical_vq": 13, "cudaq_hamiltonian": 13, "easier": [13, 15, 35, 71, 74], "reproduct": 13, "init_angl": 13, "get_qubit_count": 13, "variational_kernel": 13, "slsqp": [13, 18], "tol": [13, 23, 29], "bare": 13, "unencod": 13, "earlier": [13, 14, 21, 56, 60], "gateset": [13, 21], "readout": [13, 32], "meas_id": 13, "aim_physical_circuit": 13, "ignore_meas_id": 13, "prep": [13, 39], "zz": 13, "z_basi": 13, "for_loop": 13, "q_idx": 13, "getattr": 13, "x_basi": 13, "unsupport": 13, "aim_logical_circuit": 13, "teleport": 13, "With": [13, 32, 33, 55, 60, 71, 78, 83], "noisili": [13, 53], "generate_circuit_set": 13, "u_val": 13, "v_val": 13, "circuit_dict": 13, "qubit_hamiltonian": [13, 23], "tmp_physical_dict": 13, "tmp_logical_dict": 13, "nfinish": 13, "sim_circuit_dict": 13, "circuit_lay": 13, "5846845738799267": 13, "5707961678256028": 13, "588033710930825": 13, "712388365176642": 13, "588651490745171": 13, "5707962742876598": 13, "64012940802256": 13, "5707963354922125": 13, "1293956916868737": 13, "5707963294715355": 13, "6598458659836037": 13, "570796331040382": 13, "695151467539617": 13, "5707960973500679": 13, "4149519241823376": 13, "5707928509325972": 13, "7301462729177735": 13, "570796033796985": 13, "helper": [13, 65], "plai": [13, 15], "role": [13, 15], "_num_qubit": 13, "isdecim": 13, "process_count": 13, "data_qubit": 13, "flag_qubit": 13, "dict": [13, 18, 19], "new_data": 13, "continu": [13, 15, 16, 19, 21, 60, 65, 71], "new_kei": 13, "issuperset": 13, "setdefault": 13, "physical_to_log": 13, "0000": [13, 17, 55], "1111": [13, 55], "0011": [13, 17], "1100": 13, "0110": 13, "1001": 13, "physical_kei": 13, "logical_kei": 13, "ev_x": 13, "ev_xx": 13, "ev_zz": 13, "aim_logical_energi": 13, "data_ord": 13, "counts_list": 13, "counts_data": 13, "_aim_energi": 13, "aim_physical_energi": 13, "evx": 13, "evxx": 13, "evzz": 13, "h_param": 13, "key_a": 13, "key_b": 13, "startswith": 13, "uncertainti": 13, "string_kei": 13, "uncertainty_xx": 13, "uncertainty_zz": 13, "_get_energy_diff": 13, "bf_energi": 13, "physical_energi": 13, "logical_energi": 13, "physical_energy_diff": 13, "logical_energy_diff": 13, "physical_sim_energi": 13, "logical_sim_energi": 13, "true_energi": 13, "brute": 13, "forc": [13, 22, 33, 55, 81, 83], "got": 13, "72": 13, "submit_aim_circuit": 13, "folder_path": 13, "future_aim_result": 13, "run_async": 13, "makedir": 13, "exist_ok": 13, "aim_result": 13, "tmp_physical_result": 13, "physical_": 13, "_job_u": 13, "_v": 13, "_result": 13, "txt": [13, 65, 73, 74, 77, 78], "close": [13, 16, 21, 60, 65], "tmp_logical_result": 13, "logical_": 13, "ncomplet": 13, "nall": 13, "async": 13, "_get_async_result": 13, "physical_count": 13, "logical_count": 13, "nobtain": 13, "domin": 13, "Such": [13, 49, 60], "get_device_nois": 13, "depolar_prob_1q": 13, "depolar_prob_2q": 13, "readout_error_prob": 13, "custom_g": 13, "depolar_nois": 13, "noisy_op": 13, "custom_depolar_channel": 13, "p_0": 13, "p_1": 13, "k0": 13, "complex128": [13, 21, 27, 52], "k1": 13, "k3": 13, "cz": 13, "bit_flip": [13, 18, 27, 56], "cudaq_noise_model": 13, "rate": [13, 17, 54], "fidel": 13, "99": [13, 18], "98": 13, "002": 13, "aim_sim_data": 13, "sim_physical_energi": 13, "sim_physical_uncertainti": 13, "sim_logical_energi": 13, "sim_logical_uncertainti": 13, "251736027394713": 13, "265564437074638": 13, "252231964940428": 13, "293350575766127": 13, "608495283014149": 13, "305692796870582": 13, "39007993367173": 13, "260398644698076": 13, "429650912487233": 13, "deviat": [13, 75], "sim_physical_energy_diff": 13, "sim_logical_energy_diff": 13, "929": 13, "46016175277361": 13, "97": 13, "176531948420889": 13, "268": 13, "26321740664324": 13, "8495": 13, "46681284816878": 13, "1965000000000003": 13, "4531715120183297": 13, "336": 13, "341784541550897": 13, "802": 13, "339249509416753": 13, "8580000000000005": 13, "1227150992242025": 13, "3635": 13, "448422736181264": 13, "subject": 13, "overcom": 13, "preview": 13, "offer": [13, 32, 54, 56, 82], "fig": [13, 18], "ax": [13, 16, 18, 19], "dpi": 13, "200": [13, 19, 35], "layer_label": 13, "plot_label": 13, "errorbar": 13, "yerr": 13, "ecolor": 13, "255": 13, "26": [13, 18, 19, 54, 62], "94": [13, 18], "capsiz": 13, "elinewidth": 13, "fmt": 13, "markers": 13, "markeredgewidth": 13, "177": 13, "152": [13, 18], "set_xlabel": [13, 18], "fontsiz": [13, 18, 21], "set_ylabel": [13, 18], "set_titl": [13, 18], "xtick": 13, "ytick": 13, "axhlin": 13, "linestyl": 13, "linewidth": [13, 21], "ylim": 13, "bottom": [13, 62], "ve": [13, 33, 66, 79, 83], "seamlessli": 13, "cross": [13, 53], "superstaq": [13, 33, 53, 65, 83], "hood": [13, 81], "inde": [13, 21, 75], "gain": 13, "registr": [13, 53, 73, 74], "reproduc": [13, 21], "23": [13, 16, 18, 19, 21, 31, 62], "device_circuit_dict": 13, "7301462945564499": 13, "570796044872433": 13, "24": [13, 18, 30, 31, 62, 74, 75, 77, 78, 82], "superstaq_api_kei": [13, 53], "api_kei": [13, 54], "cq_sqale_qpu": [13, 53, 65], "dry": [13, 53, 65], "simpl": [13, 27, 29, 37, 40, 52, 54, 55, 56, 58, 60, 64, 65, 66, 71, 73, 77, 78, 82], "meantim": [13, 65, 77], "hardware_aim_future_result": 13, "aim_device_data": 13, "physical_uncertainti": 13, "29": [13, 18, 19, 55], "logical_uncertainti": 13, "626499999999997": 13, "69666562801761": 13, "1415": 13, "2032104443266585": 13, "9955": 13, "76919450035401": 13, "331": 13, "85730052910377": 13, "476": [13, 18], "5425689231532203": 13, "043500000000002": 13, "795918428433312": 13, "4715": 13, "96524696701215": 13, "973": 13, "207315773582224": 13, "182": 13, "241375689575516": 13, "yet": [13, 18, 23, 24, 33, 53, 55, 77, 83], "afford": 13, "closer": [13, 59, 66, 71], "outperform": 13, "power": [13, 17, 21, 31, 33, 54, 56, 68, 83], "31": [13, 18, 54, 68], "farhi": 14, "dive": [14, 31, 33, 77, 83], "ll": [14, 15, 19, 66, 71, 74, 78], "maxim": [14, 16, 54, 56, 58, 65, 68], "although": [14, 69, 70], "rel": [14, 56, 69], "hard": 14, "statist": [14, 24, 25, 35, 38, 56, 60, 69, 70], "furthermor": [14, 33, 83], "wider": [14, 55], "portfolio": 14, "shop": 14, "vertex": 14, "subseteq": 14, "mathbb": [14, 27, 69, 70], "interchang": [14, 56], "undirect": 14, "v_1": 14, "exactli": [14, 21], "bigcup": 14, "bigcap": 14, "emptyset": 14, "illustr": [14, 21, 35, 53, 55, 63, 65, 66, 69], "disjoint": 14, "grai": 14, "depict": [14, 16, 19, 31], "distinct": [14, 21, 31, 49], "substack": 14, "sometim": [14, 16, 53], "01100": [14, 19, 55], "01011": [14, 19], "v1": [14, 53], "v2": 14, "v0": 14, "v3": [14, 75, 77], "v4": [14, 77], "10100": [14, 19], "01010": [14, 19], "10101": [14, 19], "edges_src": 14, "edges_tgt": 14, "algortihm": 14, "hamilitonian": 14, "distinguish": [14, 49], "mixer": 14, "posit": [14, 18, 19, 21, 23, 27, 42, 52, 56], "deeper": [14, 31], "layer_count": 14, "qaoaproblem": 14, "subcircuit": [14, 59], "kernel_qaoa": 14, "plaehold": 14, "qubitu": 14, "qubitv": 14, "mention": [14, 21], "z_v": 14, "vale": 14, "arbirtrari": 14, "formula": 14, "z_uz_v": 14, "refram": 14, "promot": [14, 32, 82], "replac": [14, 19, 53, 54, 71, 73, 75, 77], "lead": [14, 16, 27, 33, 83], "reformul": 14, "hamiltonian_max_cut": 14, "inititi": 14, "iiziz": 14, "izzii": 14, "iiiii": 14, "zziii": 14, "iiizz": 14, "iizzi": 14, "ziizi": 14, "495973826282007": 14, "51349181993727": 14, "21299416361632417": 14, "3250526425808945": 14, "886630847343767": 14, "outcom": [14, 16, 17, 19], "max_cut": 14, "11111": [14, 19], "11110": [14, 19], "01101": [14, 19], "148": 14, "01110": [14, 19], "47": [14, 18, 19, 31], "01000": [14, 19], "00110": [14, 19], "54": [14, 18], "165": 14, "00101": [14, 19], "154": 14, "00100": [14, 19], "01001": [14, 19], "41": [14, 19], "00000": [14, 19], "00011": [14, 19], "10011": [14, 19, 55], "00010": [14, 19], "01111": [14, 19], "11011": [14, 19], "00111": [14, 19], "11100": [14, 19], "10001": [14, 19], "10010": [14, 19], "144": [14, 18], "10110": [14, 19], "40": [14, 16, 18, 21, 22, 29, 68], "10111": [14, 19], "11000": [14, 19], "11101": [14, 19], "11001": [14, 19], "a726804916fd397408cbf595ce6fe5f33dcd8b4c": [14, 15], "aid": [15, 34], "area": [15, 55], "signal": [15, 40, 52], "compress": 15, "qft": 15, "ingredi": 15, "shor": [15, 32], "faster": [15, 16, 19, 21, 23, 56], "prime": [15, 19], "vital": 15, "idea": [15, 19], "frequenc": [15, 65], "domain": 15, "analogi": 15, "ixi": 15, "5i": 15, "35": [15, 16, 18, 19], "0i": 15, "25i": 15, "35i": 15, "r_k": 15, "bmatrix": [15, 18, 69, 70], "ciruit": 15, "quantum_fourier_transform": [15, 19], "cr1": [15, 19, 38], "zeroth": 15, "decim": 15, "round": [15, 21, 29, 38], "r1": [15, 19, 31, 38, 42, 49], "571": [15, 19], "7854": [15, 19], "25j": 15, "35j": 15, "seri": [15, 53, 65], "fast": [15, 21, 40, 56, 59], "n2": 15, "life": [15, 54], "li": [15, 19, 71], "invert": [15, 21], "revers": [15, 19, 46], "quantum_fourier_transform2": 15, "attent": 15, "inverse_qft": [15, 19], "verification_exampl": 15, "phenomena": [16, 69, 70], "implic": 16, "initialis": 16, "unless": [16, 75, 77], "0th": [16, 27], "arbitari": 16, "2nd": 16, "beta_": 16, "replic": 16, "stage": 16, "psi0": 16, "psi4": 16, "71": 16, "62": [16, 23], "psi1": 16, "psi2": 16, "psi3": 16, "m1": 16, "m2": 16, "psi_4": 16, "multipartit": 16, "partial": 16, "subsystem": 16, "partial_trac": 16, "state_vector": 16, "trace_system": 16, "particl": [16, 49], "log2": [16, 19], "rho": 16, "tensordot": 16, "prod": 16, "state_of_q0": 16, "state_of_q2": 16, "allclos": [16, 21], "happen": [16, 19, 49, 77], "portion": 16, "lab": [16, 77], "infinit": [16, 21, 40, 47, 60], "apart": 16, "obei": [16, 70], "theorem": [16, 47], "longer": [16, 27, 56, 75], "violat": 16, "travel": 16, "speed": 16, "light": [16, 52], "experimentalist": 16, "cx_": 16, "alic": 16, "bob": 16, "safekeep": 16, "moon": 16, "posess": 16, "she": 16, "send": 16, "who": 16, "mile": 16, "entail": 16, "collaps": [16, 24, 25, 60, 69, 70, 74], "seper": [16, 22], "poss": 16, "expand": [16, 56, 71], "bracket": 16, "110": [16, 18, 19], "whilst": 16, "maintain": 16, "break": [16, 19, 33, 83], "ask": [16, 77], "her": 16, "unmeasur": 16, "determinist": [16, 60, 69], "tell": [16, 18, 69, 70], "summaris": 16, "psi_3": 16, "nearli": 16, "pend": 16, "minor": 16, "fulfil": 16, "protocol": [16, 75], "m1m2": 16, "recov": 16, "ambit": 16, "instantli": 16, "appear": [16, 21, 35, 77], "he": 16, "rather": [16, 20, 24, 26, 54, 56, 60, 70, 81], "transmit": 16, "courtesei": 16, "textbook": 16, "nielsen": 16, "chuang": 16, "qv": 17, "greatest": [17, 19], "score": 17, "though": [17, 75], "imperfect": [17, 18], "usabl": 17, "special": [17, 18, 39, 44, 71, 79], "median": 17, "greater": [17, 19, 49, 54, 56, 70], "heavi": 17, "averag": [17, 20, 82], "su4": 17, "kak": 17, "conclud": 17, "su4_per_circuit": 17, "n_params_in_su4": 17, "su4_gat": 17, "u3": 17, "reg": [17, 62], "param_index": 17, "randomli": [17, 19], "generate_random_param": 17, "params_list": 17, "generate_random_permut": 17, "circuit_permut": 17, "astyp": 17, "int64": 17, "make_bitstr": 17, "zfill": 17, "percent_heavy_sampl": 17, "error_r": 17, "noiseless": [17, 27], "circuit_param": 17, "layer_permut": 17, "print_output": 17, "bf": 17, "clean_result": 17, "noisy_result": [17, 27], "prob": [17, 18], "cutoff": [17, 56], "circuit_prob": 17, "outcome_prob": 17, "havi": 17, "prob_heavy_in_noisi": 17, "heavy_bitstr": 17, "04363711": 17, "0100": 17, "0010": 17, "1101": 17, "0111": 17, "8153219893574715": 17, "488": 17, "detemin": 17, "_heavy_sampl": 17, "n_circuit": 17, "calc_qv": 17, "circuit_s": 17, "prob_of_error": 17, "number_of_circuit": 17, "counter": 17, "circuit_result": 17, "7280300000000003": 17, "affect": [17, 18, 56, 74], "relationship": 17, "caus": [18, 82], "properli": [18, 60, 75, 77, 81], "character": [18, 27], "independ": [18, 23, 35, 40, 52, 55, 56, 75], "pseudoinvers": 18, "p_": 18, "adjust": [18, 56, 75, 81], "quasi": 18, "impract": 18, "seaborn": 18, "sn": 18, "itertool": 18, "set_styl": 18, "dark": 18, "bitflip": [18, 23, 27, 56], "principl": 18, "get_nois": 18, "isinst": 18, "state_label": 18, "ghz": [18, 24, 54, 55, 58, 60, 65, 66, 68, 71, 78], "ghz_kernel": 18, "plot_cmat": 18, "mat": 18, "im2": 18, "matshow": 18, "cmap": 18, "cm": 18, "vmin": 18, "vmax": 18, "set_ytick": 18, "arang": 18, "set_xtick": 18, "set_yticklabel": 18, "set_xticklabel": 18, "xaxi": 18, "set_label_posit": 18, "colorbar": 18, "closest": 18, "min_": 18, "rm": [18, 75, 77], "find_closest_distribut": 18, "empirical_dist": 18, "empir": 18, "l1": 18, "ord": 18, "con": 18, "ineq": 18, "fun": [18, 23, 29], "eq": [18, 71], "bnd": 18, "initial_valu": 18, "get_counts_from_distribut": 18, "drawn": [18, 19], "choic": [18, 19, 23, 56], "return_count": 18, "1024": [18, 56], "noise_1": 18, "ghz_result": 18, "noisy_dict_1": 18, "noisy_res_1": 18, "352": 18, "43": 18, "367": 18, "61": [18, 19], "noise_2": 18, "noisy_dict_2": 18, "noisy_res_2": 18, "149816047538945": 18, "3802857225639665": 18, "292797576724562": 18, "212": 18, "122": 18, "189": 18, "87": 18, "78": 18, "131": [18, 19], "otim": 18, "single_qubit_label": 18, "single_qubit_st": 18, "924": 18, "104": 18, "920": 18, "true_stat": 18, "observed_st": 18, "90234375": 18, "1015625": 18, "09765625": 18, "8984375": 18, "joint": [18, 65], "a_pinv": 18, "pinv": 18, "positive_dist": 18, "ncorrect": [18, 38], "501": [18, 35], "mitigated_sg": 18, "kind": [18, 60], "bar_label": 18, "assumpt": 18, "a_n": 18, "local_label": 18, "local_st": 18, "388": 18, "235": 18, "174": 18, "79": [18, 19, 54], "58": 18, "38": [18, 19, 75, 77], "370": [18, 25], "60": [18, 77], "107": 18, "162": 18, "marginalized_count": 18, "total_shot": 18, "marginal_ct": 18, "85546875": 18, "15722656": 18, "14453125": 18, "84277344": 18, "6328125": 18, "38476562": 18, "3671875": 18, "61523438": 18, "70800781": 18, "32226562": 18, "29199219": 18, "67773438": 18, "pinv_confusion_matric": 18, "a_joint": 18, "559": 18, "510": [18, 68], "521": 18, "446": 18, "mitigated_k_loc": 18, "248": 18, "159": [18, 19], "83": 18, "68": 18, "161": [18, 19], "93": 18, "46": 18, "363": 18, "253": 18, "76": 18, "378": 18, "150": [18, 70], "36": [18, 68], "74": [18, 23], "106": 18, "145": 18, "251": 18, "386": 18, "229": 18, "247": 18, "70": [18, 23], "163": 18, "371": 18, "95": 18, "157": [18, 19], "233": 18, "85": [18, 68], "396": 18, "393": 18, "160": [18, 19], "a_ful": 18, "09734490298929": 18, "714": 18, "211": 18, "49": 18, "63": 18, "422": 18, "683": 18, "302": 18, "mitigated_ful": 18, "famou": 19, "signific": [19, 20, 23, 24, 25, 30, 33, 83], "modern": 19, "asymmetr": 19, "encrypt": [19, 77], "scheme": [19, 56], "rsa": [19, 77], "proce": [19, 20, 77, 82], "explain": [19, 21, 55, 69, 70], "contfrac": 19, "156": 19, "gcd": 19, "ceil": 19, "fraction": [19, 56], "satisfi": [19, 27, 47, 65, 75], "share": [19, 25, 33, 56, 74, 77, 81, 83], "divisor": 19, "smallest": 19, "shors_algorithm": 19, "investig": 19, "terminologi": 19, "literatur": 19, "period": 19, "recast": 19, "a1": 19, "a2": 19, "divisor1": 19, "divisor2": 19, "find_order_quantum": 19, "find_order_class": 19, "test_ord": 19, "retri": [19, 31], "establish": 19, "rewritten": [19, 31], "rewrit": [19, 73], "peter": 19, "50": [19, 23, 60, 69, 70, 81], "possible_factor": 19, "test_factor": 19, "No": [19, 25, 65, 68, 77], "straightforward": 19, "notabl": 19, "ineffici": 19, "158": 19, "naiv": [19, 49], "interv": [19, 22], "my_integ": 19, "123": 19, "edit": [19, 77], "initial_value_to_start": 19, "central": 19, "lceil": 19, "rceil": 19, "phase_kernel": 19, "ai": 19, "exponent": 19, "provabl": 19, "hefti": 19, "5l": 19, "algoirthm": 19, "72l": 19, "exponentiaion": 19, "beckman": 19, "chari": 19, "devabhaktuni": 19, "preskil": 19, "1996": 19, "beyond": [19, 54, 56, 68, 73], "difficulti": 19, "report": 19, "modular_mult_5_21": 19, "physlab": 19, "wp": 19, "content": [19, 35, 53, 65, 74, 77], "upload": 19, "2023": 19, "05": [19, 20, 54], "shor_s_algorithm_23100113_fin": 19, "modif": [19, 23, 56, 60, 66], "modular_exp_5_21": 19, "expon": 19, "control_s": 19, "ctrl_qubit": [19, 46], "198": 19, "5y": 19, "demonstrate_mod_exponenti": 19, "init": 19, "integer_result": 19, "previou": [19, 20, 23, 26, 33, 41, 47, 52, 77, 83], "199": 19, "modular_exp_4_21": 19, "ab": [19, 21], "2103": 19, "13855": 19, "control_register_s": 19, "work_register_s": 19, "control_regist": 19, "work_regist": 19, "201": 19, "values_for_a": 19, "15000": 19, "q6": 19, "q7": 19, "2843": 19, "913": 19, "1850": 19, "1935": 19, "1830": 19, "2846": 19, "1861": 19, "922": 19, "top_result": 19, "202": 19, "results_dictionari": 19, "pop": [19, 77, 81], "sorted_result": 19, "top_kei": 19, "max_valu": 19, "top_results_dictionari": 19, "203": 19, "750": 19, "lectur": 19, "scott": 19, "aaronson": 19, "204": 19, "get_order_from_phas": 19, "phase_nbit": 19, "eigenphas": 19, "from_float": 19, "limit_denomin": 19, "denomin": 19, "coefficients_continued_fract": 19, "continued_fract": 19, "convergents_continued_fract": 19, "algoithm": 19, "205": 19, "zero_result": 19, "elem": 19, "most_probable_bitpattern": 19, "reverse_result": 19, "nonzero": 19, "bitpattern": 19, "206": 19, "452": 19, "92": [19, 56], "2485": 19, "96": 19, "1747": 19, "1654": 19, "1736": 19, "475": [19, 68], "420": 19, "00001": 19, "1710": 19, "113": 19, "467": 19, "2536": 19, "81": [19, 56], "8125": 19, "8421052631578947": 19, "regev": 19, "heisenberg": 20, "chain": [20, 22, 49], "recurs": [20, 39], "fo": 20, "iht": 20, "approx": [20, 70], "prod_": [20, 43], "predefin": [20, 37, 62], "jx": 20, "jy": 20, "n_step": [20, 52], "n_spin": 20, "j_x": 20, "x_j": 20, "x_": 20, "y_j": 20, "y_": 20, "z_": 20, "jz": 20, "heisenbergmodelham": 20, "tdop": 20, "getinitst": 20, "numspin": 20, "qid": 20, "average_magnet": 20, "start_tim": [20, 23], "magnetization_exp_v": 20, "steptim": 20, "03444695472717285": 20, "09042024163828166": 20, "0026793479919433594": 20, "08898564687193886": 20, "002758026123046875": 20, "08698024360923415": 20, "002524852752685547": 20, "08507694741170907": 20, "0026259422302246094": 20, "08394118068746997": 20, "002542734146118164": 20, "08394076573115139": 20, "0027430057525634766": 20, "08502222139504187": 20, "0025305747985839844": 20, "08677832064885871": 20, "003045797348022461": 20, "08863390649349775": 20, "0025949478149414062": 20, "09005513983609514": 20, "boost": [20, 30], "resimul": 20, "24x": 20, "florian": 21, "f\u00fcrrutter": 21, "gorka": 21, "mu\u00f1oz": 21, "gil": 21, "han": 21, "briegel": 21, "nat": 21, "mach": 21, "intel": [21, 82], "515": 21, "524": 21, "2024": [21, 54], "viabl": 21, "commonli": [21, 27, 52, 75, 77], "dm": [21, 54], "deliv": [21, 54], "fold": 21, "prompt": [21, 77], "thoroughli": 21, "overview": 21, "neural": [21, 32], "network": [21, 32, 33, 53, 54, 55, 65, 74, 77, 83], "crucial": 21, "emploi": [21, 27], "de": 21, "genqc": 21, "diffusion_pipelin": 21, "diffusionpipelin": 21, "infer": [21, 69, 70], "export_cudaq": 21, "genqc_to_cudaq": 21, "infer_compil": 21, "infer_comp": 21, "fix": [21, 22, 33, 56, 83], "infer_torch_devic": 21, "memoryclean": 21, "purge_mem": 21, "tf32": 21, "matmul": 21, "from_pretrain": 21, "floki00": 21, "qc_unitary_3qubit": 21, "hug": 21, "set_timestep": 21, "vocab": 21, "gate_pool": 21, "decod": 21, "num_of_qubit": 21, "max_gat": 21, "nonetheless": 21, "stai": 21, "tune": [21, 56], "bigger": 21, "70710678": [21, 24, 62], "ccx": 21, "scenario": [21, 33, 67, 77, 83], "miss": [21, 49, 56, 75], "u_r": 21, "u_i": 21, "u_tensor": 21, "stack": [21, 39], "out_tensor": 21, "generate_comp_tensor": 21, "system_s": 21, "guidanc": [21, 77], "cfg": [21, 71], "kernel_list": 21, "valid_tensor": 21, "invalid_tensor": 21, "out_tensors_i": 21, "catch": [21, 81], "invalid": [21, 56], "rapidli": 21, "successfulli": [21, 29], "transit": 21, "langl": [21, 35], "th": [21, 43], "got_unitari": 21, "basis_state_j": 21, "set_printopt": 21, "7071": 21, "infidel": 21, "ones": [21, 35, 52], "want_unitari": 21, "histogram": 21, "hist": 21, "almost": [21, 75], "min_index": 21, "4e": [21, 65], "09": 21, "valuabl": 21, "deal": [21, 47], "fewest": 21, "toffoli": [21, 46, 56], "token": [21, 53, 77], "duplic": 21, "pick": [21, 74, 75], "idx_uniqu": 21, "return_index": 21, "unique_tensor": 21, "unique_infidel": 21, "unique_kernel": 21, "idx_correct": 21, "argwher": 21, "correct_tensor": 21, "num_ccx": 21, "correct_kernel": 21, "correct_kernels_ccx1": 21, "preprocess": [22, 23], "uccsd": [22, 23], "hydrogen": 22, "bond": [22, 56], "interatom": 22, "electrostat": 22, "proton": 22, "shield": 22, "neutron": 22, "minimis": 22, "stabl": [22, 77], "hydrogen_count": 22, "angstrom": 22, "bond_dist": 22, "coupl": [22, 23, 40, 56, 65, 77], "cluster": [22, 23, 32, 55, 56], "uccsd_num_paramet": [22, 23], "builtin": [22, 71], "1371744305855906": 22, "popular": [22, 77], "xk": [22, 23], "x0": [22, 23, 35], "aspect": [23, 34, 35, 56, 81], "topic": [23, 62], "tradit": 23, "variation": 23, "elabor": 23, "get_fermion_oper": 23, "timeit": [23, 60, 68], "charg": 23, "1173": 23, "4691": 23, "7570": 23, "sto3g": 23, "run_pyscf": 23, "moleculardata": 23, "get_molecular_hamiltonian": 23, "jordan": 23, "wigner": 23, "molecular_hamiltonian": 23, "fermion_hamiltonian": 23, "spatial": 23, "theoret": 23, "excit": [23, 33, 70, 83], "hate": 23, "electron_num": 23, "molecuul": 23, "140": 23, "default_tim": 23, "end_tim": 23, "get_term_count": 23, "elaps": 23, "21455023422772": 23, "1086": 23, "9171073289999185": 23, "perfect": [23, 56], "greatli": [23, 33, 83], "minut": [23, 77], "drastic": 23, "side": [23, 31, 49, 77], "ith": [23, 29], "prohibit": 23, "observe_asynch": 23, "epsilon": [23, 27, 29], "batched_gradient_funct": [23, 29], "tile": [23, 29], "xplu": [23, 29], "ey": [23, 29], "xminu": [23, 29], "g_plu": [23, 29], "g_minu": [23, 29], "bfg": [23, 29, 35], "gradient_vector": [23, 29], "init_param": 23, "result_vq": [23, 29], "jac": [23, 29], "73": 23, "19471262288755": 23, "57": [23, 75, 77], "27010986900132": 23, "thank": [23, 33, 56, 83], "unnecessari": 23, "highest": 23, "unoccupi": 23, "shallow": 23, "nele_ca": 23, "norb_ca": 23, "ncore": 23, "constrcut": 23, "occupied_indic": 23, "active_indic": 23, "96341992791962": 23, "754178541001238": 23, "consecut": [23, 30], "cudaq_mgpu_fus": [23, 30, 33, 56, 83], "506": 24, "494": 24, "subtl": [24, 60], "rebuilt": [24, 60], "feasibl": [24, 69, 70], "signinific": 24, "textcolor": [24, 25], "intens": [24, 25, 60], "respons": [24, 60], "event": [24, 60, 75], "hamiltonian_1": 24, "hamiltonian_2": 24, "result_1": [24, 60], "result_2": [24, 60], "220446049250313e": 24, "obver": 24, "0eb6b444eb5b3a687e6fd64529ee9223aaa2870": 24, "qumode_count": 25, "beam_splitt": [25, 69], "_environ": 25, "preload": 25, "cutensor": [25, 75], "libcutensor": [25, 75], "oserror": 25, "libcublaslt": [25, 75], "msg": 25, "380": 25, "265": 25, "355": 25, "61237244": 25, "littl": 25, "518b7fffcf4c41401164083bc9a4648a57536dda": 25, "mx": 26, "my": [26, 54, 74, 77], "qubits_a": 26, "qubit_b": 26, "savig": 26, "b0": 26, "coher": [27, 39, 53], "incoher": 27, "systemat": 27, "miscalibr": 27, "formal": 27, "k_i": 27, "ideal_count": 27, "error_prob": [27, 56], "phase_flip": 27, "amplitude_damp": 27, "kraus_0": 27, "kraus_1": 27, "bitflip_channel": 27, "uniformli": [27, 56], "noisy_count": [27, 56], "844": 27, "88": 27, "8666666666666666": 27, "cover": [28, 62], "sophist": 28, "2xyx": 28, "3zzy": 28, "referenc": 28, "xyxz": 28, "432xzy": 28, "324ixx": 28, "ixx": 28, "432": 28, "324": 28, "907": [29, 35, 38, 43, 54, 55, 64], "1433": [29, 35, 38, 43, 54, 55, 64], "21829": [29, 35, 38, 43, 54, 55, 64], "adam": [29, 52], "nminim": 29, "748382901613712": 29, "58409164053813": 29, "accomplis": 29, "fucntion": 29, "messag": [29, 40, 54, 75, 77], "statu": 29, "7488646919931474": 29, "944e": 29, "288e": 29, "nfev": 29, "33": [29, 55, 77], "maxcv": 29, "plu": [29, 52], "minu": [29, 31, 52], "situat": 30, "c2h2vqe": 30, "cue": 31, "sens": [31, 71], "2d": 31, "plane": 31, "3d": 31, "varphi": 31, "direct": [31, 71, 81], "spheric": 31, "sphere": 31, "sure": [31, 55, 75, 77, 79, 82], "jupyt": [31, 53, 77], "menu": 31, "vscode": [31, 77], "click": [31, 77], "button": 31, "toolbar": 31, "misunderstand": 31, "qualifi": 31, "bash": [31, 54, 75, 77, 82], "pipe": [31, 71], "sy": [31, 60, 82], "nnew": 31, "subsequ": [31, 35, 40, 43, 45, 75, 77], "add_to_bloch_spher": 31, "rng": 31, "default_rng": [31, 68], "blochspherelist": 31, "anglelist": 31, "sph": 31, "displai": [31, 34], "accordingli": [31, 56, 81], "absolut": [31, 47, 71], "had": 31, "toolbox": 31, "blochspher": 31, "unfortun": 31, "handi": 31, "kernel_to_draw": 31, "14159": 31, "tdg": [31, 42], "142": 31, "documentclass": 31, "usepackag": 31, "quantikz": 31, "lstick": 31, "q_0": 31, "amp": 31, "r_1": 31, "qw": 31, "q_1": 31, "targx": 31, "q_2": 31, "q_3": 31, "editor": 31, "export": [31, 53, 54, 55, 74, 75, 82], "welcom": [32, 54, 66, 77], "page": [32, 60, 64, 66, 75, 77, 82], "scalabl": [32, 54, 82], "unifi": [32, 51, 82], "brows": 32, "amd64": [32, 33, 83], "2502": 32, "releas": [32, 51, 55, 56, 71, 77, 82, 83], "toolchain": [32, 48, 53, 60, 71, 77, 78, 79, 80, 82], "heterogen": [32, 34, 59, 75], "troubleshoot": [32, 57], "photon": [32, 52, 53, 63, 65, 70], "bernstein": [32, 77], "vazirani": [32, 77], "diffus": 32, "magnet": 32, "suzuki": 32, "deutsch": 32, "divis": 32, "coreset": 32, "qaoa": 32, "dock": 32, "dc": 32, "krylov": 32, "mont": 32, "carlo": 32, "fourier": [32, 38], "telepor": 32, "volum": 32, "mitig": 32, "fusion": [32, 33, 56, 83], "subspac": 32, "anderson": [32, 53], "impur": [32, 53], "infleqt": [32, 51], "sqale": [32, 53], "cloud": [32, 33, 51, 53, 56, 65, 83], "processor": [32, 33, 35, 40, 51, 60, 77, 81, 82, 83], "center": [32, 76, 77], "cmake": [32, 73, 74, 80], "repositori": [33, 73, 74, 75, 77, 83], "docker": [33, 52, 75, 82, 83], "nightli": [33, 77, 83], "infeqt": [33, 83], "offici": [33, 42, 75, 77, 83], "wherea": [33, 81, 83], "never": [33, 47, 83], "wheel": [33, 55, 56, 75, 83], "toolset": [33, 75, 81, 83], "manipul": [33, 69, 70, 83], "anyon": [33, 51, 83], "technologi": [33, 83], "ferimioniq": [33, 83], "oqc": [33, 51, 83], "hope": [33, 83], "enjoi": [33, 83], "eas": [33, 83], "think": [33, 55, 70, 83], "great": [33, 83], "extern": [33, 56, 71, 73, 75, 81, 83], "contributor": [33, 83], "bug": [33, 83], "frontend": [33, 83], "blog": [33, 83], "workload": [33, 55, 77, 83], "gnu": [33, 71, 75, 77, 81, 83], "older": [33, 75, 77, 83], "glibc": [33, 75, 77, 83], "iqm": [33, 51, 83], "publish": [33, 77, 83], "arm": [33, 75, 77, 82, 83], "aarch64": [33, 52, 82, 83], "pypi": [33, 75, 82, 83], "quantinuum": [33, 51, 83], "ionq": [33, 51, 83], "linux": [33, 71, 75, 77, 83], "coprocess": 34, "annot": [34, 39, 58, 66], "core": [34, 35, 56, 68, 71], "namespac": [34, 35, 37, 38, 39, 42, 43, 45, 47, 48, 54, 55, 60, 64, 65, 73, 74, 79, 81], "philosophi": 35, "stand": 35, "alon": 35, "adaptor": 35, "returntyp": 35, "hasvoidreturntyp": 35, "is_void_v": 35, "bel": 35, "lu": [35, 38, 47, 66, 67], "sequential_data": 35, "reg1": 35, "499": 35, "alwai": [35, 56, 77], "middl": 35, "implicitli": [35, 40, 49], "discern": 35, "silent": 35, "discard": 35, "ancillari": 35, "varieti": [35, 60], "enforc": 35, "sample_async_result": 35, "\ud835\udeb9": 35, "retain": [35, 41], "measurecount": 35, "spinop": 35, "x0x1exp": 35, "x0x1data": 35, "qarrai": [35, 38, 39, 46, 66, 71], "lf": [35, 38, 55, 64], "analyt": 35, "async_observe_result": 35, "broader": [35, 55], "dictat": 35, "safe": 35, "providesgradi": 35, "_providesgradi": 35, "someth": [35, 47, 75, 77, 81], "max_ev": 35, "opt_energi": 35, "grad_vec": 35, "\ud835\udeb9_i": 35, "address": [35, 55, 75], "overal": [35, 71, 74], "deuteron_n3_ansatz": 35, "x1": 35, "vctrl": 35, "h3": 35, "625": 35, "913119": 35, "make_tupl": 35, "min_val": 35, "permit": 36, "facilit": [37, 77], "privat": [37, 47], "thenfunctor": 37, "otherkernelbuild": 37, "kerneltocal": 37, "kerneltocontrol": 37, "kerneltoadjoint": 37, "argsarrai": 37, "decltyp": 37, "tuple_s": 37, "integral_const": 37, "sizeof": [37, 79], "tuple_el": 37, "conditional_t": [37, 47], "factori": 37, "xprep": 37, "qubitin": 37, "hadamardtest": 37, "num_it": 38, "c_str": [38, 81], "phase_estim": 38, "cpp": [38, 53, 54, 55, 56, 60, 64, 65, 66, 67, 71, 73, 74, 75, 77, 78, 79, 81, 82], "qpe": 38, "stdio": [38, 75], "cmath": 38, "iqft": 38, "denom": 38, "1ul": 38, "eigenst": 38, "stateprep": [38, 39], "ncountingqubit": 38, "state_prep": 38, "counting_qubit": 38, "state_regist": 38, "put": [38, 47, 70], "r1pigat": 38, "mostprob": 38, "to_integ": 38, "piestim": 38, "tgate": 38, "xgate": 38, "eigen": [38, 74], "nc": 38, "nq": 38, "countingqubit": 38, "stateregist": 38, "deuteron_n2_ansatz": 38, "param_spac": 38, "linspac": [38, 52, 65], "energy_at_param": 38, "energyatparam": 38, "reflect_about_uniform": 38, "ctrlqubit": 38, "lastqubit": 38, "compute_act": [38, 44], "run_grov": 38, "callablekernel": 38, "n_iter": 38, "target_st": 38, "target_bit_set": 38, "strtol": 38, "null": [38, 52, 77], "0b1011": 38, "compute_oracl": 38, "iterative_qp": 38, "iqp": 38, "cr0": 38, "cr2": 38, "m_pi_4": 38, "differenti": [39, 52], "former": 39, "latter": [39, 52, 71], "my_first_entry_point_kernel": 39, "my_second_entry_point_kernel": 39, "my_first_pure_device_kernel": 39, "parent": 39, "boolexprfromqubitmeasur": 39, "another_qubit": 39, "uncomput": [39, 40], "is_arithmetic_v": 39, "span": [39, 47], "mycustomsimplestruct": 39, "recursivevec": 39, "var": [39, 82], "kernelthatreturn": 39, "dataclass": 39, "mysimplestruct": 39, "recursivelist": 39, "1415926": 39, "kernellambda": 39, "mystateprep": 39, "mygenericalgorithm": 39, "placehold": 39, "mygenericalgorithm2": 39, "callkernel": 39, "anothervers": 39, "constrain": [39, 67], "is_convertible_v": 39, "takes_qubit": [39, 67], "mygenericalgorithmonqarrai": 39, "mygenericalgorithmonqubit": 39, "presum": 40, "graphic": 40, "fpga": 40, "concurr": [40, 54], "inter": [40, 56], "fabric": 40, "novel": 40, "placement": 40, "copyabl": [40, 47], "flavor": 40, "tightli": 40, "modal": 40, "sfina": 41, "foundat": 42, "inst_nam": 42, "header": [42, 75, 77, 79, 81], "qubitarg": 42, "qr": [42, 56], "scalarangl": 42, "rotation_nam": 42, "measure_op": 42, "convei": 42, "p_i": 43, "sigma_j": 43, "intent": 44, "u_cod": 44, "v_code": 44, "computef": 44, "actionf": 44, "computel": 44, "segment": [44, 82], "effort": 45, "get_platform": [45, 55, 64], "quantumregist": 46, "x_gate": 46, "ctrl_bit": 46, "rx_and_h_gat": 46, "kerneltestcontrol": 46, "kerneltestadjoint": 46, "aggreg": [46, 65], "qubit0": [46, 56], "qubit1": [46, 56], "kernel_arg": 46, "fundament": [47, 70, 77, 82], "movabl": 47, "n_level": 47, "adl": 47, "familiar": 47, "stride": 47, "first_5": 47, "qb": 47, "knowledg": 47, "ahead": 47, "storag": [47, 70], "fivecompiletimequbit": 47, "conceptu": 49, "sai": [49, 52], "embodi": 49, "behind": 49, "dataflow": 49, "contrast": 49, "truli": 49, "ssa": 49, "clarifi": 49, "toi": 49, "foo": 49, "boilerpl": [49, 74], "c0": 49, "c1": 49, "extract_ref": [49, 71], "bunch": 49, "decid": 49, "i1": [49, 71], "imagin": 49, "adjac": [49, 53], "Of": 49, "cours": 49, "correctli": [49, 75, 79, 81], "quit": [49, 60], "prone": 49, "analys": 49, "q0_1": 49, "q0_0": 49, "wire": 49, "q0_z": 49, "elimin": [49, 55], "r0": 49, "qref": 49, "unwrap": 49, "misc": 49, "q0_m": 49, "q0_l": 49, "q1_x": 49, "q0_p": 49, "q0_y": 49, "straightforwardli": 49, "cancel": [49, 77, 82], "mmeori": 49, "comprehens": [51, 53, 56], "fermioniq": 51, "stim": 51, "tensornet": [51, 54, 55, 56], "mp": [51, 54, 56], "cuquantum": [52, 56, 68, 74, 75], "superconduct": [52, 70], "transmon": 52, "omega_z": 52, "sigma_z": 52, "omega_x": 52, "omega_d": 52, "sigma_x": 52, "cp": [52, 77], "rho0": 52, "t_final": 52, "evolution_result": [52, 53], "aka": [52, 56], "ladder": 52, "harmon": 52, "oscil": 52, "displac": 52, "squeez": 52, "momentum": 52, "sigma_i": 52, "jayn": 52, "cum": 52, "omega_c": 52, "omega_a": 52, "caviti": 52, "consider": 52, "h_0": 52, "drift": 52, "h0": 52, "displacement_matrix": 52, "numerictyp": 52, "en": 52, "wiki": 52, "displacement_oper": 52, "term1": 52, "term2": 52, "expm": 52, "system_dimens": 52, "system_oper": 52, "linearli": [52, 70], "time_depend": 52, "vari": 52, "parameter_valu": 52, "time_step": 52, "compute_valu": 52, "param_nam": 52, "step_idx": 52, "match": [52, 53, 75, 77, 81], "undefin": [52, 81], "rungekuttaintegr": 52, "4th": 52, "rung": 52, "kutta": 52, "scipyzvodeintegr": 52, "ordinari": 52, "cudatorchdiffeqdopri5integr": 52, "dormand": 52, "princ": 52, "shampin": 52, "torchdiffeq": 52, "cudatorchdiffeqadaptiveheunintegr": 52, "cudatorchdiffeqbosh3integr": 52, "bogacki": 52, "cudatorchdiffeqdopri8integr": 52, "cudatorchdiffeqeulerintegr": 52, "cudatorchdiffeqexplicitadamsintegr": 52, "bashforth": 52, "cudatorchdiffeqimplicitadamsintegr": 52, "moulton": 52, "cudatorchdiffeqmidpointintegr": 52, "midpoint": 52, "cudatorchdiffeqrk4integr": 52, "secur": [53, 55, 77], "demand": [53, 55], "simplest": 53, "cli": [53, 77], "aws_default_region": 53, "aws_access_key_id": 53, "key_id": 53, "aws_secret_access_kei": 53, "access_kei": 53, "aws_session_token": 53, "sv1": [53, 65], "arn": [53, 65], "eu": [53, 65], "north": [53, 65], "garnet": [53, 65], "device_arn": 53, "softwar": [53, 75, 77], "authent": [53, 55, 56, 77], "emit": [53, 71], "diagnost": 53, "ionq_api_kei": 53, "ionq_generated_api_kei": 53, "aria": [53, 65], "login": [53, 77], "usernam": 53, "password": [53, 77], "refresh": 53, "echo": [53, 54, 75, 77, 81], "home": [53, 54, 77], "anyon_config": 53, "apt": [53, 77], "curl": [53, 75], "jq": 53, "5000": 53, "id_token": 53, "cat": [53, 77], "refresh_token": 53, "cudaq_anyon_credenti": 53, "telegraph": 53, "8q": 53, "berkelei": 53, "25q": 53, "inject": [53, 65, 71, 77], "cortex": 53, "cach": 53, "iqm_tokens_fil": 53, "mandatori": 53, "coco": [53, 65], "adoni": [53, 65], "iqm_server_url": 53, "fi": [53, 75, 77], "apollo": 53, "oxford": 53, "ring": 53, "topologi": 53, "luci": 53, "kagom": 53, "lattic": 53, "toshiko": 53, "contact": [53, 56, 65], "oqc_qcaas_support": [53, 65], "oxfordquantumcircuit": [53, 65], "email": [53, 54], "oqc_url": [53, 65], "oqc_email": [53, 65], "oqc_password": [53, 65], "qcaa": 53, "assembli": 53, "qat": 53, "pt": [53, 65, 77], "interf": [53, 65], "detector": [53, 65], "delai": [53, 65], "orca_access_url": [53, 65], "orca_auth_token": 53, "abcdef123456": 53, "orca_url": [53, 65], "getenv": [53, 65], "localhost": [53, 55, 65, 77], "your_alia": 53, "your_password": 53, "qapi": 53, "quantinuum_config": 53, "cudaq_quantinuum_credenti": 53, "checker": [53, 65], "mere": [53, 75], "2e": [53, 65], "1sc": 53, "navig": [53, 77], "tab": [53, 77], "tabl": [53, 54, 55, 74, 77], "east": 53, "whitepap": 53, "world": [54, 59, 66], "visit": [54, 60], "link": [54, 71, 75, 77, 78, 79, 81], "approv": 54, "nvqc_api_kei": 54, "session": [54, 55, 77], "bashrc": [54, 77], "438": 54, "3600": 54, "h100": 54, "80gb": 54, "hbm3": 54, "driver": [54, 75, 77], "gb": [54, 56, 68], "clock": 54, "mhz": 54, "2619": 54, "1980": 54, "1111111111111111111111111": [54, 68], "486": 54, "0000000000000000000000000": [54, 68], "514": 54, "nvqc_intro": 54, "545": 54, "487": 54, "513": 54, "nvqc_sampl": 54, "grow": [54, 74], "ngpu": 54, "unabl": [54, 77], "deploy": 54, "ye": [54, 77], "cutensornet": [54, 56], "contract": [54, 56], "wherebi": [54, 55, 56], "worker": 54, "nqpu": 54, "opt_gradi": 54, "submiss": [54, 61, 65], "energy_futur": 54, "plus_futur": 54, "minus_futur": 54, "optimal_valu": 54, "grad": 54, "paramshift": 54, "74886": 54, "nvqc_vqe": 54, "incom": [54, 67], "attain": 54, "On": [54, 55, 56, 66, 77, 82], "busi": 54, "substanti": 54, "nvqc_log_level": 54, "disabl": [54, 56, 75], "credenti": [54, 56, 65], "lieu": 54, "nvqc_config": 54, "elucid": 55, "unlik": [55, 60], "opportun": 55, "count_futur": 55, "kerneltobesampl": 55, "runtimeparam": 55, "singleton": [55, 64], "zu": [55, 64], "countfutur": 55, "emplace_back": 55, "gpuemulatedqpu": 55, "37": 55, "cudaq_mqpu_ngpu": 55, "bellow": 55, "state_futur": 55, "kerneltorun": 55, "async_state_result": 55, "statefutur": 55, "suffici": [55, 75, 77, 82], "mpiexec": [55, 56, 75], "script": [55, 60, 75, 77], "srun": 55, "controls_count": 55, "auto_launch": 55, "isdigit": 55, "nrcontrol": 55, "tidx": 55, "daemon": 55, "qpud": 55, "shut": 55, "cudaq_loc": 55, "grep": [55, 75], "qpud_pi": 55, "cuda_visible_devic": [55, 56], "tcp": [55, 77], "ip": 55, "ld_library_path": [55, 75, 82], "launcher": 55, "app": 55, "firewal": 55, "port1": 55, "port2": 55, "port3": 55, "port4": 55, "per": [55, 56, 68], "resolv": 55, "contigu": 55, "byte": [55, 68, 81], "memcpi": 55, "ixiz": 55, "charact": 55, "incur": 55, "overhead": 55, "defer": 55, "rtti": 55, "standalon": [55, 74], "accommod": 56, "switch": [56, 68], "cudaq_fusion_max_qubit": 56, "cudaq_fusion_diagonal_gate_max_qubit": 56, "cudaq_fusion_num_host_thread": 56, "cudaq_max_cpu_memory_gb": 56, "migrat": [56, 75], "unlimit": 56, "0gb": 56, "cudaq_max_gpu_memory_gb": 56, "exce": 56, "cudaq_mgpu_lib_mpi": 56, "libmpi": [56, 77], "cudaq_mgpu_comm_plugin_typ": 56, "openmpi": [56, 75, 77, 82], "mpich": [56, 75], "commplugin": 56, "cudaq_mgpu_nqubits_thresh": 56, "cudaq_mgpu_p2p_device_bit": 56, "gpudirect": 56, "p2p": 56, "cudaq_gpu_fabr": 56, "mnnvl": 56, "nvl": 56, "nvlink": 56, "cudaq_global_index_bit": 56, "comma": 56, "slower": 56, "cudaq_host_device_migration_level": 56, "insert": [56, 73], "interconnect": 56, "infiniband": 56, "fuse": 56, "4x4": 56, "bandwidth": 56, "significantli": 56, "incorpor": 56, "812": 56, "xop": 56, "asymptot": 56, "noisy_exp_v": 56, "rerun": 56, "8192": 56, "810546875": 56, "800048828125": 56, "810547": 56, "800049": 56, "cudaq_observe_num_trajectori": 56, "cudaq_batch_s": 56, "cudaq_batched_sim_max_branch": 56, "cudaq_batched_sim_max_qubit": 56, "cudaq_batched_sim_min_batch_s": 56, "suitabl": [56, 75, 77, 81], "despit": [56, 65], "poor": 56, "visibl": [56, 77], "cutensornet_comm_lib": 56, "libcutensornet_distributed_interface_mpi": 56, "dedic": 56, "dgx": 56, "omp_plac": 56, "omp_num_thread": 56, "number_of_cores_per_nod": 56, "number_of_gpus_per_nod": 56, "cudaq_tensornet_controlled_rank": 56, "wave": [56, 69], "sparsiti": 56, "svd": 56, "singular": [56, 75], "truncat": 56, "tractabl": 56, "footprint": 56, "cudaq_mps_max_bond": 56, "cudaq_mps_abs_cutoff": 56, "largest": 56, "trim": 56, "cudaq_mps_relative_cutoff": 56, "cudaq_mps_svd_algo": 56, "gesvd": 56, "gesvdj": 56, "jacobi": 56, "gesvdp": 56, "gesvdr": 56, "medium": 56, "ava": 56, "onlin": [56, 75, 77], "fermioniq_access_token_id": 56, "fermioniq_access_token_secret": 56, "remote_config": 56, "remote_config_id": 56, "organ": 56, "project_id": 56, "bond_dim": 56, "overridden": [56, 74], "cudaq_default_simul": 56, "debug": [57, 71, 75, 77], "amongst": 58, "roughli": [60, 68, 69, 70], "505": 60, "495": 60, "result_0": 60, "5005": 60, "4995": 60, "most_probable_result": 60, "kernel2": 60, "num_gpu": [60, 68], "confirm": [60, 65, 75, 77, 82], "025": 60, "million": 60, "35x": 60, "code_to_tim": 60, "1000000": 60, "57462": 60, "stmt": 60, "773286": 60, "atoi": [60, 82], "chrono": [60, 65], "high_resolution_clock": 60, "durat": 60, "took": 60, "8337": 60, "18988": 60, "cudaq_log_level": 61, "prepend": 61, "cudaq_dump_jit_ir": 61, "output_filenam": 61, "agnost": 62, "707": 62, "707j": 62, "kernel_initi": 62, "state_to_pass": 62, "default_op": 62, "Or": 62, "x_kernel": [62, 67], "control_vector": [62, 67], "blow": 62, "kernel_a": 62, "kernel_b": 62, "024": 62, "543": 62, "d2": 64, "observe_mqpu": 64, "async_count": 65, "fstream": 65, "proceed": [65, 75], "redefin": 65, "same_fil": 65, "retrieved_async_result": 65, "cq_sqale_simul": 65, "ofstream": 65, "savem": 65, "readin": 65, "ifstream": 65, "flight": 65, "mimic": 65, "dashboard": 65, "qb1": 65, "qb2": 65, "qb3": 65, "qb4": 65, "qb5": 65, "adonis_ghz": 65, "transpar": 65, "worri": 65, "schemat": 65, "optic": 65, "reconfigur": 65, "indistinguish": 65, "interfer": [65, 69, 75, 77], "exit": [65, 68, 77], "n_beam_splitt": 65, "sleep": 65, "this_thread": 65, "sleep_for": 65, "sleep_until": 65, "chrono_liter": 65, "sum_loop_length": 65, "static_cast": [65, 79], "n_loop": 65, "n_mode": [65, 69], "endl": [65, 81], "200m": 65, "endpoint": 65, "syntax_check": 65, "hello": [65, 66, 77], "arrang": 65, "7e": 65, "time_max": 65, "time_ramp": 65, "omega_max": 65, "6300000": 65, "rad": 65, "sec": 65, "delta_start": 65, "delta_end": 65, "piec": [65, 75], "wise": 65, "waveform": 65, "rabi": 65, "12121222": 65, "21202221": 65, "21212121": 65, "21212122": 65, "21221212": 65, "21221221": 65, "22121221": 65, "22221221": 65, "post_sequ": 65, "01010111": 65, "10101010": 65, "10101011": 65, "10101110": 65, "10110101": 65, "10110110": 65, "11010110": 65, "11110110": 65, "pre_sequ": 65, "11101111": 65, "11111111": 65, "rydberg": 65, "gotten": 66, "static_kernel": 66, "multi_controlled_oper": 67, "ccnot": 67, "applyx": 67, "ccnot_test": 67, "apply_x": 67, "counts2": 67, "seamless": [68, 77], "multithread": 68, "ghz_state": 68, "sample_ghz_st": 68, "cpu_result": 68, "525": [68, 77], "2500x": 68, "gpu_result": 68, "490": 68, "8700": 68, "freeli": [68, 75, 77], "term_count": 68, "qubits_list": 68, "990": 68, "dev": [68, 75, 77], "xi": 68, "2500": 68, "4x": 68, "dirac": [69, 70], "vdot": 69, "alpha_0": 69, "alpha_1": 69, "alpha_2": 69, "alpha_d": 69, "alpha_i": 69, "ddot": 69, "transmiss": [69, 70], "hong": 69, "ou": 69, "mandel": 69, "491": 69, "509": 69, "probabilist": [69, 70], "devis": [69, 70], "lvert": [69, 70], "rvert": [69, 70], "counterpart": 70, "transistor": 70, "alter": 70, "ion": 70, "ourselv": 70, "law": 70, "physicist": 70, "logarithm": 70, "correspondingli": [70, 81], "art": [70, 81], "offload": 70, "502": 70, "498": 70, "modulu": 70, "conserv": 70, "uphold": 70, "postul": 70, "alpha_": 70, "llvm": [71, 73, 74, 75, 79], "qke": [71, 73], "pipelin": 71, "canonic": 71, "lift": 71, "indirect": 71, "loader": 71, "cse": 71, "lpsxpu": 71, "p3de4l": 71, "fixup": 71, "linkag": 71, "pl": [71, 75], "llc": [71, 75], "reloc": 71, "pic": 71, "filetyp": 71, "obj": 71, "o2": 71, "clang": [71, 75, 81], "gcc": [71, 75, 77, 81], "x86_64": [71, 75, 77, 82], "lib64": [71, 77, 79], "stub": 71, "wl": [71, 75, 81], "rpath": [71, 81], "llib": 71, "lcudaq": 71, "builder": 71, "ensmallen": 71, "em": 71, "lnvqir": 71, "orchestr": 71, "qtx": 71, "mangled_name_map": 71, "__nvqpp__mlirgen__ghz": 71, "_zn3ghzclei": 71, "i32": 71, "entrypoint": 71, "alloca": 71, "memref": 71, "extsi": 71, "c0_i32": 71, "c0_i32_0": 71, "alloca_1": 71, "c1_i32": 71, "subi": 71, "cmpi": 71, "slt": 71, "addi": 71, "unoptim": 71, "mangl": 71, "introspect": 71, "overwrit": 71, "libcudaq": 71, "libnvqir": [71, 74], "robust": 71, "depart": 71, "recal": 71, "datalayout": 71, "p270": 71, "p271": 71, "p272": 71, "f80": 71, "n8": 71, "s128": 71, "invokewithcontrolqubit": 71, "__quantum__qis__x__ctl": 71, "__quantum__rt__array_get_size_1d": 71, "__quantum__qis__h": 71, "i8": 71, "__quantum__rt__array_get_element_ptr_1d": 71, "sext": 71, "bitcast": 71, "icmp": 71, "sgt": 71, "br": 71, "ph": 71, "prehead": 71, "_crit_edg": 71, "trip": 71, "zext": 71, "indvar": 71, "iv": 71, "nuw": 71, "nsw": 71, "nonnul": 71, "exitcond": 71, "ph3": 71, "_crit_edge4": 71, "exitcond5": 71, "mycustomplugin": 73, "cmakelist": [73, 74, 78], "add_llvm_pass_plugin": 73, "operationpass": 73, "quakedialect": 73, "quakeop": 73, "frozenrewritepatternset": 73, "dialectconvers": 73, "replaceh": 73, "oprewritepattern": 73, "hop": 73, "logicalresult": 73, "matchandrewrit": 73, "patternrewrit": 73, "replaceopwithnewop": 73, "sop": 73, "isadj": 73, "getparamet": 73, "getcontrol": 73, "gettarget": 73, "custompassplugin": 73, "passwrapp": 73, "mlir_define_explicit_internal_inline_type_id": 73, "stringref": 73, "runonoper": 73, "getoper": 73, "getcontext": 73, "rewritepatternset": 73, "conversiontarget": 73, "addlegaldialect": 73, "addillegalop": 73, "applypartialconvers": 73, "emitoperror": 73, "signalpassfailur": 73, "cudaq_register_mlir_pass": 73, "add_subdirectori": 73, "circuitsimulatorbas": 74, "lot": 74, "qppcircuitsimul": 74, "custateveccircuitsimul": 74, "openmp": [74, 75, 82], "addqubittost": 74, "addqubitstost": 74, "resetqubit": 74, "qubitidx": 74, "resetqubitstateimpl": 74, "applyg": 74, "gateapplicationtask": 74, "measurequbit": 74, "floattyp": 74, "mysimul": 74, "nvqir_register_simul": 74, "mysimulatorclassnam": 74, "dylib": 74, "nvqir_simulation_backend": 74, "cuda_quantum_path": [74, 75, 77, 78], "find_packag": [74, 78], "nvqir_add_backend": 74, "folder": [74, 75, 77, 78], "cmake_minimum_requir": [74, 78], "fatal_error": [74, 78], "democreatenvqirbackend": 74, "cxx": [74, 75, 78, 82], "measuredbit": 74, "cuda_quantum": [74, 75], "cd": [74, 75, 77, 78], "ninja": [74, 78], "dnvqir_dir": 74, "rootless": 75, "admin": [75, 77], "meet": 75, "carefulli": 75, "requisit": 75, "almalinux": 75, "manylinux_2_28": 75, "cento": [75, 77], "debian": [75, 77], "fedora": [75, 77], "opensus": [75, 77], "sled": [75, 77], "sle": [75, 77], "rhel": [75, 77], "rocki": [75, 77], "ubuntu": [75, 77], "newer": [75, 77, 82], "x86": [75, 77], "arm64": [75, 77], "v8": [75, 77], "volta": [75, 77], "ture": [75, 77], "amper": [75, 77], "ada": [75, 77], "hopper": [75, 77], "470": [75, 77], "git": 75, "unzip": 75, "web": [75, 77], "cudaq_install_prefix": 75, "cuquantum_install_prefix": 75, "cutensor_install_prefix": 75, "llvm_install_prefix": 75, "blas_install_prefix": 75, "bla": 75, "zlib_install_prefix": 75, "zlib": 75, "openssl_install_prefix": 75, "openssl": 75, "curl_install_prefix": 75, "aws_install_prefix": 75, "toolkit": [75, 77, 79, 82], "cuda_vers": [75, 77, 82], "cuda_download_url": [75, 77], "repo": [75, 77], "subfold": [75, 77], "rhel8": [75, 77], "cuda_arch_fold": [75, 77], "dnf": [75, 77], "nobest": [75, 77], "setopt": [75, 77], "install_weak_dep": [75, 77], "tr": [75, 77], "gcc_version": 75, "assembl": 75, "enable_script": 75, "gcc_toolchain": 75, "rh": 75, "cudacxx": 75, "nvcc": [75, 77, 79], "cudahostcxx": 75, "commit": 75, "checkout": 75, "archiv": [75, 77, 81], "subsect": 75, "devel": [75, 77], "suffix": [75, 82], "conda": [75, 82], "auditwheel": 75, "patchelf": 75, "pyproject": 75, "toml": 75, "llvm_project": 75, "flang": 75, "lld": 75, "install_prerequisit": [75, 77], "sh": [75, 77, 82], "fc": 75, "histori": 75, "setuptools_scm_pretend_vers": 75, "cudaq_wheel": 75, "manylinux_platform": 75, "linux_": 75, "sed": [75, 77], "manylinux_2_28_": 75, "pwd": [75, 81], "_skbuild": 75, "repair": 75, "plat": 75, "libcubla": [75, 77], "libcusolv": [75, 77], "libcutensornet": 75, "libcustatevec": 75, "libcudart": 75, "libnvtoolsext": 75, "libnvidia": 75, "ml": 75, "libcuda": 75, "wheelhous": 75, "cudaq_enable_static_link": 75, "cudaq_require_openmp": 75, "cudaq_werror": 75, "cudaq_python_support": 75, "build_cudaq": 75, "primarili": 75, "linker": [75, 81], "makeself": 75, "cuda_quantum_asset": 75, "mv": 75, "ld": 75, "build_config": 75, "xml": 75, "gzip": [75, 77], "sha256": 75, "install_cuda_quantum": [75, 77, 82], "unam": [75, 77, 82], "migrate_asset": 75, "libc6": [75, 77], "sudo": [75, 77, 82], "set_env": [75, 77], "asset": [75, 77, 82], "profil": [75, 77, 82], "version_suffix": [75, 77], "cudart": [75, 77], "nvrtc": [75, 77], "f1": [75, 77], "libnvjitlink": [75, 77], "awar": 75, "autoconf": 75, "libtool": 75, "flex": 75, "openmpi_vers": 75, "openmpi_download_url": 75, "ompi": 75, "tar": [75, 77], "gz": [75, 77], "tmp": 75, "xf": 75, "rf": [75, 77], "autogen": 75, "ldflag": 75, "prefix": [75, 77], "getpwuid": 75, "mem": 75, "memcheck": 75, "verb": 75, "nproc": 75, "mpic": 75, "mpi_cuda_check": 75, "__has_includ": 75, "ext": 75, "endif": 75, "mpi_init": 75, "exit_cod": 75, "mpix_query_cuda_support": 75, "mpi_fin": 75, "mca": 75, "plm_rsh_agent": 75, "ssh": 75, "rsh": 75, "slurm": 75, "mpi_path": [75, 77, 82], "distributed_interfac": [75, 77, 82], "activate_custom_mpi": [75, 77, 82], "bundl": 77, "deploi": 77, "unsur": 77, "engin": 77, "desktop": 77, "administr": 77, "ngc": 77, "whenev": 77, "pull": 77, "nvcr": 77, "cu12": [77, 82], "prototyp": 77, "tri": 77, "readm": 77, "appreci": 77, "insuffici": 77, "hover": 77, "id_rsa": 77, "pub": 77, "itd": 77, "2222": 77, "exec": 77, "openssh": 77, "usepam": 77, "sshd_config": 77, "authorized_kei": 77, "sbin": 77, "sshd": 77, "stricthostkeycheck": 77, "userknownhostsfil": 77, "globalknownhostsfil": 77, "relocat": 77, "wsl": 77, "prerequisit": 77, "sylab": 77, "ce": 77, "xzf": 77, "mconfig": 77, "suid": 77, "builddir": 77, "bootstrap": 77, "runscript": 77, "mount": 77, "devpt": 77, "fakeroot": 77, "sif": 77, "writabl": 77, "nv": 77, "conf": 77, "ldd": [77, 81], "privileg": 77, "revis": 77, "upvot": 77, "posix": 77, "browser": 77, "palett": 77, "attach": 77, "window": 77, "reload": 77, "microsoft": 77, "sandbox": 77, "portmap": 77, "sshd_output": 77, "listen": 77, "1025": 77, "65535": 77, "ui": 77, "aren": 77, "icon": 77, "sidebar": 77, "workspac": 77, "remotecommand": 77, "requesttti": 77, "hostnam": 77, "enableremotecommand": 77, "uselocalserv": 77, "remoteserverlistenonsocket": 77, "connecttimeout": 77, "serverinstallpath": 77, "sign": 77, "upgrad": 77, "ac": 77, "ace_nam": 77, "instance_nam": 77, "commandlin": 77, "job_id": 77, "8888": 77, "portal": 77, "404": 77, "patient": 77, "happi": 77, "cuda12x": 77, "ship": 77, "vendor": 77, "prebuilt": 77, "guarante": 77, "libcudaq_distributed_interface_mpi": 77, "cudaq_mpi_comm_lib": 77, "cu11": [77, 82], "uninstal": [77, 82], "supersed": 77, "dsize": 77, "fairli": 77, "succe": 77, "hang": [77, 82], "imper": 78, "mycudaqapp": 78, "add_execut": 78, "ghz_ex": 78, "dcudaq_dir": 78, "cu": 79, "my_proj": 79, "conform": 79, "my_proj_quantum": 79, "libc": 79, "cudadatatyp": [79, 81], "cudasetfirstnel": 79, "__restrict__": 79, "sv2": 79, "int64_t": 79, "blockidx": 79, "blockdim": 79, "threadidx": 79, "setfirstnel": 79, "uint32_t": [79, 81], "n_block": [79, 81], "int32_t": [79, 81], "threads_per_block": [79, 81], "newdevicestatevector": 79, "devicestatevector": [79, 81], "previousstatedimens": 79, "reinterpret_cast": [79, 81], "cufloatcomplex": [79, 81], "cudoublecomplex": [79, 81], "cucomplex": 79, "cuda_runtim": 79, "device_launch_paramet": 79, "my_kernel": 79, "cudamalloc": 79, "xcompil": 79, "fpic": [79, 81], "cuda_hom": 79, "lcudart": 79, "my_execut": 79, "quantum_kernel": 81, "sstream": 81, "bell_distribut": 81, "stringbuf": 81, "ptr": 81, "strcpy": 81, "libstdc": 81, "libquantum_kernel": 81, "bell_dist": 81, "lquantum_kernel": 81, "abi": 81, "incompat": 81, "watch": 81, "surround": 81, "third_party_librari": 81, "libexternal_librari": 81, "my_cod": 81, "bstatic": 81, "lexternal_librari": 81, "bdynam": 81, "crut": 81, "libexternal_library_complet": 81, "naddlib": 81, "nsave": 81, "nend": 81, "lexternal_library_complet": 81, "shim": 81, "pragma": 81, "is_integr": 81, "initializedevicestatevector": 81, "statedimens": 81, "cudainitializedevicestatevector": 81, "cumbersom": 81, "necessarili": 81, "recogn": 81, "env": 82, "forg": 82, "conda_prefix": 82, "ompi_mca_opal_cuda_support": 82, "ompi_mca_btl": 82, "openib": 82, "bash_profil": 82, "bash_login": 82, "_cu11": 82, "_cu12": 82, "amd": 82}, "objects": {"": [[2, 0, 1, "_CPPv45cudaq", "cudaq"], [2, 1, 1, "_CPPv4N5cudaq20BaseNvcfSimulatorQPUE", "cudaq::BaseNvcfSimulatorQPU"], [2, 1, 1, "_CPPv4N5cudaq17BaseRemoteRESTQPUE", "cudaq::BaseRemoteRESTQPU"], [2, 1, 1, "_CPPv4N5cudaq22BaseRemoteSimulatorQPUE", "cudaq::BaseRemoteSimulatorQPU"], [2, 1, 1, "_CPPv4I0EN5cudaq9CusvStateE", "cudaq::CusvState"], [2, 2, 1, "_CPPv4I0EN5cudaq9CusvStateE", "cudaq::CusvState::ScalarType"], [2, 1, 1, "_CPPv4N5cudaq16ExecutionContextE", "cudaq::ExecutionContext"], [2, 3, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringE", "cudaq::ExecutionContext::ExecutionContext"], [2, 3, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE", "cudaq::ExecutionContext::ExecutionContext"], [2, 4, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringE", "cudaq::ExecutionContext::ExecutionContext::n"], [2, 4, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE", "cudaq::ExecutionContext::ExecutionContext::n"], [2, 4, 1, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE", "cudaq::ExecutionContext::ExecutionContext::shots_"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext13amplitudeMapsE", "cudaq::ExecutionContext::amplitudeMaps"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext9asyncExecE", "cudaq::ExecutionContext::asyncExec"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext11asyncResultE", "cudaq::ExecutionContext::asyncResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext14batchIterationE", "cudaq::ExecutionContext::batchIteration"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext16canHandleObserveE", "cudaq::ExecutionContext::canHandleObserve"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext16expectationValueE", "cudaq::ExecutionContext::expectationValue"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext12futureResultE", "cudaq::ExecutionContext::futureResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext31hasConditionalsOnMeasureResultsE", "cudaq::ExecutionContext::hasConditionalsOnMeasureResults"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext22invocationResultBufferE", "cudaq::ExecutionContext::invocationResultBuffer"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext10kernelNameE", "cudaq::ExecutionContext::kernelName"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext11kernelTraceE", "cudaq::ExecutionContext::kernelTrace"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext4nameE", "cudaq::ExecutionContext::name"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext10noiseModelE", "cudaq::ExecutionContext::noiseModel"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext18numberTrajectoriesE", "cudaq::ExecutionContext::numberTrajectories"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext9optResultE", "cudaq::ExecutionContext::optResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext20overlapComputeStatesE", "cudaq::ExecutionContext::overlapComputeStates"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext13overlapResultE", "cudaq::ExecutionContext::overlapResult"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext13registerNamesE", "cudaq::ExecutionContext::registerNames"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext10reorderIdxE", "cudaq::ExecutionContext::reorderIdx"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext6resultE", "cudaq::ExecutionContext::result"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext5shotsE", "cudaq::ExecutionContext::shots"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext15simulationStateE", "cudaq::ExecutionContext::simulationState"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext4spinE", "cudaq::ExecutionContext::spin"], [2, 5, 1, "_CPPv4N5cudaq16ExecutionContext15totalIterationsE", "cudaq::ExecutionContext::totalIterations"], [2, 1, 1, "_CPPv4N5cudaq15ExecutionResultE", "cudaq::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionary", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultENSt6stringE", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultERK15ExecutionResult", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEd", "cudaq::ExecutionResult::ExecutionResult"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEv", "cudaq::ExecutionResult::ExecutionResult"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionary", "cudaq::ExecutionResult::ExecutionResult::c"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE", "cudaq::ExecutionResult::ExecutionResult::c"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd", "cudaq::ExecutionResult::ExecutionResult::c"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd", "cudaq::ExecutionResult::ExecutionResult::e"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEd", "cudaq::ExecutionResult::ExecutionResult::expVal"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE", "cudaq::ExecutionResult::ExecutionResult::name"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultENSt6stringE", "cudaq::ExecutionResult::ExecutionResult::name"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultERK15ExecutionResult", "cudaq::ExecutionResult::ExecutionResult::other"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE", "cudaq::ExecutionResult::appendResult"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE", "cudaq::ExecutionResult::appendResult::bitString"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE", "cudaq::ExecutionResult::appendResult::count"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResult11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::ExecutionResult::deserialize"], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResult11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::ExecutionResult::deserialize::data"], [2, 3, 1, "_CPPv4N5cudaq15ExecutionResultaSERK15ExecutionResult", "cudaq::ExecutionResult::operator="], [2, 4, 1, "_CPPv4N5cudaq15ExecutionResultaSERK15ExecutionResult", "cudaq::ExecutionResult::operator=::other"], [2, 3, 1, "_CPPv4NK5cudaq15ExecutionResulteqERK15ExecutionResult", "cudaq::ExecutionResult::operator=="], [2, 4, 1, "_CPPv4NK5cudaq15ExecutionResulteqERK15ExecutionResult", "cudaq::ExecutionResult::operator==::result"], [2, 5, 1, "_CPPv4N5cudaq15ExecutionResult12registerNameE", "cudaq::ExecutionResult::registerName"], [2, 5, 1, "_CPPv4N5cudaq15ExecutionResult14sequentialDataE", "cudaq::ExecutionResult::sequentialData"], [2, 3, 1, "_CPPv4NK5cudaq15ExecutionResult9serializeEv", "cudaq::ExecutionResult::serialize"], [2, 1, 1, "_CPPv4N5cudaq16FermioniqBaseQPUE", "cudaq::FermioniqBaseQPU"], [2, 0, 1, "_CPPv4N5cudaq19KernelExecutionTaskE", "cudaq::KernelExecutionTask"], [2, 1, 1, "_CPPv4N5cudaq21KernelThunkResultTypeE", "cudaq::KernelThunkResultType"], [2, 0, 1, "_CPPv4N5cudaq15KernelThunkTypeE", "cudaq::KernelThunkType"], [2, 1, 1, "_CPPv4N5cudaq17OrcaRemoteRESTQPUE", "cudaq::OrcaRemoteRESTQPU"], [2, 1, 1, "_CPPv4N5cudaq3QPUE", "cudaq::QPU"], [2, 3, 1, "_CPPv4N5cudaq3QPU3QPUENSt6size_tE", "cudaq::QPU::QPU"], [2, 3, 1, "_CPPv4N5cudaq3QPU3QPUERR3QPU", "cudaq::QPU::QPU"], [2, 3, 1, "_CPPv4N5cudaq3QPU3QPUEv", "cudaq::QPU::QPU"], [2, 4, 1, "_CPPv4N5cudaq3QPU3QPUENSt6size_tE", "cudaq::QPU::QPU::_qpuId"], [2, 3, 1, "_CPPv4N5cudaq3QPU7enqueueER11QuantumTask", "cudaq::QPU::enqueue"], [2, 4, 1, "_CPPv4N5cudaq3QPU7enqueueER11QuantumTask", "cudaq::QPU::enqueue::task"], [2, 3, 1, "_CPPv4N5cudaq3QPU15getConnectivityEv", "cudaq::QPU::getConnectivity"], [2, 3, 1, "_CPPv4NK5cudaq3QPU20getExecutionThreadIdEv", "cudaq::QPU::getExecutionThreadId"], [2, 3, 1, "_CPPv4N5cudaq3QPU12getNumQubitsEv", "cudaq::QPU::getNumQubits"], [2, 3, 1, "_CPPv4NK5cudaq3QPU21getRemoteCapabilitiesEv", "cudaq::QPU::getRemoteCapabilities"], [2, 3, 1, "_CPPv4N5cudaq3QPU10isEmulatedEv", "cudaq::QPU::isEmulated"], [2, 3, 1, "_CPPv4N5cudaq3QPU11isSimulatorEv", "cudaq::QPU::isSimulator"], [2, 3, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel"], [2, 3, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::args"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::kernelFunc"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::name"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::name"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::rawArgs"], [2, 4, 1, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE", "cudaq::QPU::launchKernel::rawArgs"], [2, 3, 1, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE", "cudaq::QPU::launchSerializedCodeExecution"], [2, 4, 1, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE", "cudaq::QPU::launchSerializedCodeExecution::name"], [2, 4, 1, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE", "cudaq::QPU::launchSerializedCodeExecution::serializeCodeExecutionObject"], [2, 3, 1, "_CPPv4N5cudaq3QPU15onRandomSeedSetENSt6size_tE", "cudaq::QPU::onRandomSeedSet"], [2, 4, 1, "_CPPv4N5cudaq3QPU15onRandomSeedSetENSt6size_tE", "cudaq::QPU::onRandomSeedSet::seed"], [2, 3, 1, "_CPPv4N5cudaq3QPU21resetExecutionContextEv", "cudaq::QPU::resetExecutionContext"], [2, 3, 1, "_CPPv4N5cudaq3QPU19setExecutionContextEP16ExecutionContext", "cudaq::QPU::setExecutionContext"], [2, 4, 1, "_CPPv4N5cudaq3QPU19setExecutionContextEP16ExecutionContext", "cudaq::QPU::setExecutionContext::context"], [2, 3, 1, "_CPPv4N5cudaq3QPU5setIdENSt6size_tE", "cudaq::QPU::setId"], [2, 4, 1, "_CPPv4N5cudaq3QPU5setIdENSt6size_tE", "cudaq::QPU::setId::_qpuId"], [2, 3, 1, "_CPPv4N5cudaq3QPU8setShotsEi", "cudaq::QPU::setShots"], [2, 4, 1, "_CPPv4N5cudaq3QPU8setShotsEi", "cudaq::QPU::setShots::_nShots"], [2, 3, 1, "_CPPv4N5cudaq3QPU27supportsConditionalFeedbackEv", "cudaq::QPU::supportsConditionalFeedback"], [2, 3, 1, "_CPPv4N5cudaq3QPUD0Ev", "cudaq::QPU::~QPU"], [2, 1, 1, "_CPPv4N5cudaq12QuEraBaseQPUE", "cudaq::QuEraBaseQPU"], [2, 1, 1, "_CPPv4N5cudaq10QuakeValueE", "cudaq::QuakeValue"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE", "cudaq::QuakeValue::QuakeValue"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd", "cudaq::QuakeValue::QuakeValue"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE", "cudaq::QuakeValue::QuakeValue::builder"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd", "cudaq::QuakeValue::QuakeValue::builder"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE", "cudaq::QuakeValue::QuakeValue::v"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd", "cudaq::QuakeValue::QuakeValue::v"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue22canValidateNumElementsEv", "cudaq::QuakeValue::canValidateNumElements"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue12constantSizeEv", "cudaq::QuakeValue::constantSize"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue4dumpERNSt7ostreamE", "cudaq::QuakeValue::dump"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue4dumpEv", "cudaq::QuakeValue::dump"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue19getRequiredElementsEv", "cudaq::QuakeValue::getRequiredElements"], [2, 3, 1, "_CPPv4NK5cudaq10QuakeValue8getValueEv", "cudaq::QuakeValue::getValue"], [2, 3, 1, "_CPPv4NK5cudaq10QuakeValue7inverseEv", "cudaq::QuakeValue::inverse"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue8isStdVecEv", "cudaq::QuakeValue::isStdVec"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemlE10QuakeValue", "cudaq::QuakeValue::operator*"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemlEKd", "cudaq::QuakeValue::operator*"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValuemlE10QuakeValue", "cudaq::QuakeValue::operator*::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueplE10QuakeValue", "cudaq::QuakeValue::operator+"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueplEKd", "cudaq::QuakeValue::operator+"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueplEKi", "cudaq::QuakeValue::operator+"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValueplE10QuakeValue", "cudaq::QuakeValue::operator+::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemiE10QuakeValue", "cudaq::QuakeValue::operator-"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemiEKd", "cudaq::QuakeValue::operator-"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuemiEKi", "cudaq::QuakeValue::operator-"], [2, 3, 1, "_CPPv4NK5cudaq10QuakeValuemiEv", "cudaq::QuakeValue::operator-"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValuemiE10QuakeValue", "cudaq::QuakeValue::operator-::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuedvE10QuakeValue", "cudaq::QuakeValue::operator/"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValuedvEKd", "cudaq::QuakeValue::operator/"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValuedvE10QuakeValue", "cudaq::QuakeValue::operator/::other"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueixEKNSt6size_tE", "cudaq::QuakeValue::operator[]"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValueixERK10QuakeValue", "cudaq::QuakeValue::operator[]"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValueixEKNSt6size_tE", "cudaq::QuakeValue::operator[]::idx"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValueixERK10QuakeValue", "cudaq::QuakeValue::operator[]::idx"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue4sizeEv", "cudaq::QuakeValue::size"], [2, 3, 1, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE", "cudaq::QuakeValue::slice"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE", "cudaq::QuakeValue::slice::count"], [2, 4, 1, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE", "cudaq::QuakeValue::slice::startIdx"], [2, 0, 1, "_CPPv4N5cudaq11QuantumTaskE", "cudaq::QuantumTask"], [2, 0, 1, "_CPPv4N5cudaq17QubitConnectivityE", "cudaq::QubitConnectivity"], [2, 0, 1, "_CPPv4N5cudaq9QubitEdgeE", "cudaq::QubitEdge"], [2, 1, 1, "_CPPv4N5cudaq18RemoteCapabilitiesE", "cudaq::RemoteCapabilities"], [2, 3, 1, "_CPPv4N5cudaq18RemoteCapabilities18RemoteCapabilitiesEb", "cudaq::RemoteCapabilities::RemoteCapabilities"], [2, 4, 1, "_CPPv4N5cudaq18RemoteCapabilities18RemoteCapabilitiesEb", "cudaq::RemoteCapabilities::RemoteCapabilities::initValue"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities17isRemoteSimulatorE", "cudaq::RemoteCapabilities::isRemoteSimulator"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities18serializedCodeExecE", "cudaq::RemoteCapabilities::serializedCodeExec"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities12stateOverlapE", "cudaq::RemoteCapabilities::stateOverlap"], [2, 5, 1, "_CPPv4N5cudaq18RemoteCapabilities3vqeE", "cudaq::RemoteCapabilities::vqe"], [2, 1, 1, "_CPPv4N5cudaq21RemoteSimulationStateE", "cudaq::RemoteSimulationState"], [2, 1, 1, "_CPPv4N5cudaq9ResourcesE", "cudaq::Resources"], [2, 1, 1, "_CPPv4N5cudaq30SerializedCodeExecutionContextE", "cudaq::SerializedCodeExecutionContext"], [2, 1, 1, "_CPPv4N5cudaq15SimulationStateE", "cudaq::SimulationState"], [2, 1, 1, "_CPPv4N5cudaq15SimulationState6TensorE", "cudaq::SimulationState::Tensor"], [2, 6, 1, "_CPPv4N5cudaq15SimulationState9precisionE", "cudaq::SimulationState::precision"], [2, 7, 1, "_CPPv4N5cudaq15SimulationState9precision4fp32E", "cudaq::SimulationState::precision::fp32"], [2, 7, 1, "_CPPv4N5cudaq15SimulationState9precision4fp64E", "cudaq::SimulationState::precision::fp64"], [2, 0, 1, "_CPPv4N5cudaq15TensorStateDataE", "cudaq::TensorStateData"], [2, 1, 1, "_CPPv4N5cudaq5TraceE", "cudaq::Trace"], [2, 1, 1, "_CPPv4N5cudaq25amplitude_damping_channelE", "cudaq::amplitude_damping_channel"], [2, 1, 1, "_CPPv4I0EN5cudaq12async_resultE", "cudaq::async_result"], [2, 2, 1, "_CPPv4I0EN5cudaq12async_resultE", "cudaq::async_result::T"], [2, 3, 1, "_CPPv4N5cudaq12async_result3getEv", "cudaq::async_result::get"], [2, 0, 1, "_CPPv4N5cudaq19async_sample_resultE", "cudaq::async_sample_result"], [2, 1, 1, "_CPPv4N5cudaq16bit_flip_channelE", "cudaq::bit_flip_channel"], [2, 0, 1, "_CPPv4N5cudaq7complexE", "cudaq::complex"], [2, 1, 1, "_CPPv4N5cudaq14complex_matrixE", "cudaq::complex_matrix"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix4colsEv", "cudaq::complex_matrix::cols"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEP10value_typeKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix::cols"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEP10value_typeKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix::cols"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEP10value_typeKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix::rawData"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix::rows"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix14complex_matrixEP10value_typeKNSt6size_tEKNSt6size_tE", "cudaq::complex_matrix::complex_matrix::rows"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix4dataEv", "cudaq::complex_matrix::data"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix4dumpERNSt7ostreamE", "cudaq::complex_matrix::dump"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix4dumpEv", "cudaq::complex_matrix::dump"], [2, 4, 1, "_CPPv4N5cudaq14complex_matrix4dumpERNSt7ostreamE", "cudaq::complex_matrix::dump::os"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix11eigenvaluesEv", "cudaq::complex_matrix::eigenvalues"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix12eigenvectorsEv", "cudaq::complex_matrix::eigenvectors"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix18minimal_eigenvalueEv", "cudaq::complex_matrix::minimal_eigenvalue"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()::i"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE", "cudaq::complex_matrix::operator()::j"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrixmlER14complex_matrix", "cudaq::complex_matrix::operator*"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrixmlERNSt6vectorI10value_typeEE", "cudaq::complex_matrix::operator*"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixmlER14complex_matrix", "cudaq::complex_matrix::operator*::other"], [2, 4, 1, "_CPPv4NK5cudaq14complex_matrixmlERNSt6vectorI10value_typeEE", "cudaq::complex_matrix::operator*::other"], [2, 3, 1, "_CPPv4NK5cudaq14complex_matrix4rowsEv", "cudaq::complex_matrix::rows"], [2, 3, 1, "_CPPv4N5cudaq14complex_matrix8set_zeroEv", "cudaq::complex_matrix::set_zero"], [2, 0, 1, "_CPPv4N5cudaq14complex_matrix10value_typeE", "cudaq::complex_matrix::value_type"], [2, 1, 1, "_CPPv4N5cudaq22depolarization_channelE", "cudaq::depolarization_channel"], [2, 0, 1, "_CPPv4N5cudaq7detailsE", "cudaq::details"], [2, 1, 1, "_CPPv4N5cudaq7details17KernelBuilderTypeE", "cudaq::details::KernelBuilderType"], [2, 3, 1, "_CPPv4N5cudaq7details17KernelBuilderType17KernelBuilderTypeERRNSt8functionIFN4mlir4TypeEPN4mlir11MLIRContextEEEE", "cudaq::details::KernelBuilderType::KernelBuilderType"], [2, 4, 1, "_CPPv4N5cudaq7details17KernelBuilderType17KernelBuilderTypeERRNSt8functionIFN4mlir4TypeEPN4mlir11MLIRContextEEEE", "cudaq::details::KernelBuilderType::KernelBuilderType::f"], [2, 3, 1, "_CPPv4N5cudaq7details17KernelBuilderType6createEPN4mlir11MLIRContextE", "cudaq::details::KernelBuilderType::create"], [2, 4, 1, "_CPPv4N5cudaq7details17KernelBuilderType6createEPN4mlir11MLIRContextE", "cudaq::details::KernelBuilderType::create::ctx"], [2, 1, 1, "_CPPv4N5cudaq7details6futureE", "cudaq::details::future"], [2, 3, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future"], [2, 3, 1, "_CPPv4N5cudaq7details6future6futureERR6future", "cudaq::details::future::future"], [2, 3, 1, "_CPPv4N5cudaq7details6future6futureEv", "cudaq::details::future::future"], [2, 4, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future::_jobs"], [2, 4, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future::config"], [2, 4, 1, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE", "cudaq::details::future::future::qpuNameIn"], [2, 1, 1, "_CPPv4N5cudaq7details19kernel_builder_baseE", "cudaq::details::kernel_builder_base"], [2, 3, 1, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base", "cudaq::details::kernel_builder_base::operator&lt;&lt;"], [2, 4, 1, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base", "cudaq::details::kernel_builder_base::operator&lt;&lt;::builder"], [2, 4, 1, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base", "cudaq::details::kernel_builder_base::operator&lt;&lt;::stream"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::QuantumKernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args", "cudaq::draw::kernel"], [2, 5, 1, "_CPPv4N5cudaq3dynE", "cudaq::dyn"], [2, 3, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state"], [2, 2, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::Args"], [2, 2, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::QuantumKernel"], [2, 4, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::args"], [2, 4, 1, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args", "cudaq::get_state::kernel"], [2, 1, 1, "_CPPv4N5cudaq8gradientE", "cudaq::gradient"], [2, 3, 1, "_CPPv4N5cudaq8gradient5cloneEv", "cudaq::gradient::clone"], [2, 3, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute"], [2, 3, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute::func"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::h"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradient::compute::x"], [2, 4, 1, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradient::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4N5cudaq8gradient8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradient::gradient"], [2, 3, 1, "_CPPv4N5cudaq8gradient8gradientEv", "cudaq::gradient::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT", "cudaq::gradient::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT", "cudaq::gradient::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper", "cudaq::gradient::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradient::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq8gradient8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradient::gradient::kernel"], [2, 3, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs"], [2, 2, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::Args"], [2, 2, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::QuantumKernel"], [2, 4, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::args"], [2, 4, 1, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args", "cudaq::gradient::setArgs::kernel"], [2, 3, 1, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel", "cudaq::gradient::setKernel"], [2, 2, 1, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel", "cudaq::gradient::setKernel::QuantumKernel"], [2, 4, 1, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel", "cudaq::gradient::setKernel::kernel"], [2, 1, 1, "_CPPv4N5cudaq9gradients18central_differenceE", "cudaq::gradients::central_difference"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference5cloneEv", "cudaq::gradients::central_difference::clone"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::exp_h"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute::func"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::h"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::central_difference::compute::x"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::central_difference::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::central_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18central_difference8gradientEv", "cudaq::gradients::central_difference::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT", "cudaq::gradients::central_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT", "cudaq::gradients::central_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::central_difference::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq9gradients18central_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::central_difference::gradient::kernel"], [2, 1, 1, "_CPPv4N5cudaq9gradients18forward_differenceE", "cudaq::gradients::forward_difference"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference5cloneEv", "cudaq::gradients::forward_difference::clone"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute::func"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::h"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::forward_difference::compute::x"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::forward_difference::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::forward_difference::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients18forward_difference8gradientEv", "cudaq::gradients::forward_difference::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT", "cudaq::gradients::forward_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq9gradients18forward_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::forward_difference::gradient::kernel"], [2, 1, 1, "_CPPv4N5cudaq9gradients15parameter_shiftE", "cudaq::gradients::parameter_shift"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift5cloneEv", "cudaq::gradients::parameter_shift::clone"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::dx"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::exp_h"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute::func"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute::funcAtX"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::h"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd", "cudaq::gradients::parameter_shift::compute::x"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd", "cudaq::gradients::parameter_shift::compute::x"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::parameter_shift::gradient"], [2, 3, 1, "_CPPv4N5cudaq9gradients15parameter_shift8gradientEv", "cudaq::gradients::parameter_shift::gradient"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::ArgsMapper"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT", "cudaq::gradients::parameter_shift::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::KernelT"], [2, 2, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::QuantumKernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::argsMapper"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 4, 1, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 4, 1, "_CPPv4N5cudaq9gradients15parameter_shift8gradientERRNSt8functionIFvNSt6vectorIdEEEEE", "cudaq::gradients::parameter_shift::gradient::kernel"], [2, 1, 1, "_CPPv4IDpEN5cudaq14kernel_builderE", "cudaq::kernel_builder"], [2, 2, 1, "_CPPv4IDpEN5cudaq14kernel_builderE", "cudaq::kernel_builder::Args"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder11constantValEd", "cudaq::kernel_builder::constantVal"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder11constantValEd", "cudaq::kernel_builder::constantVal::val"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder12getArgumentsEv", "cudaq::kernel_builder::getArguments"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder12getNumParamsEv", "cudaq::kernel_builder::getNumParams"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder11isArgStdVecENSt6size_tE", "cudaq::kernel_builder::isArgStdVec"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder11isArgStdVecENSt6size_tE", "cudaq::kernel_builder::isArgStdVec::idx"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder14kernel_builderERNSt6vectorIN7details17KernelBuilderTypeEEE", "cudaq::kernel_builder::kernel_builder"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder14kernel_builderERNSt6vectorIN7details17KernelBuilderTypeEEE", "cudaq::kernel_builder::kernel_builder::types"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder4nameEv", "cudaq::kernel_builder::name"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocE10QuakeValue", "cudaq::kernel_builder::qalloc"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocEKNSt6size_tE", "cudaq::kernel_builder::qalloc"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocERNSt6vectorINSt7complexIdEEEE", "cudaq::kernel_builder::qalloc"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder6qallocEv", "cudaq::kernel_builder::qalloc"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder6qallocEKNSt6size_tE", "cudaq::kernel_builder::qalloc::nQubits"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder6qallocE10QuakeValue", "cudaq::kernel_builder::qalloc::size"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder6qallocERNSt6vectorINSt7complexIdEEEE", "cudaq::kernel_builder::qalloc::state"], [2, 3, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap"], [2, 3, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap"], [2, 3, 1, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::control"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::controls"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::first"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::first"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::first"], [2, 2, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::mod"], [2, 2, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::mod"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::second"], [2, 4, 1, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::second"], [2, 4, 1, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue", "cudaq::kernel_builder::swap::second"], [2, 1, 1, "_CPPv4N5cudaq13kraus_channelE", "cudaq::kraus_channel"], [2, 3, 1, "_CPPv4NK5cudaq13kraus_channel5emptyEv", "cudaq::kraus_channel::empty"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel7get_opsEv", "cudaq::kraus_channel::get_ops"], [2, 3, 1, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERK13kraus_channel", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERKNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERRNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelEv", "cudaq::kraus_channel::kraus_channel"], [2, 2, 1, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE", "cudaq::kraus_channel::kraus_channel::T"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERKNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel::inOps"], [2, 4, 1, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE", "cudaq::kraus_channel::kraus_channel::inputLists"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERRNSt6vectorI8kraus_opEE", "cudaq::kraus_channel::kraus_channel::ops"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel13kraus_channelERK13kraus_channel", "cudaq::kraus_channel::kraus_channel::other"], [2, 5, 1, "_CPPv4N5cudaq13kraus_channel10noise_typeE", "cudaq::kraus_channel::noise_type"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channelaSERK13kraus_channel", "cudaq::kraus_channel::operator="], [2, 4, 1, "_CPPv4N5cudaq13kraus_channelaSERK13kraus_channel", "cudaq::kraus_channel::operator=::other"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channelixEKNSt6size_tE", "cudaq::kraus_channel::operator[]"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channelixEKNSt6size_tE", "cudaq::kraus_channel::operator[]::idx"], [2, 5, 1, "_CPPv4N5cudaq13kraus_channel10parametersE", "cudaq::kraus_channel::parameters"], [2, 3, 1, "_CPPv4N5cudaq13kraus_channel9push_backE8kraus_op", "cudaq::kraus_channel::push_back"], [2, 4, 1, "_CPPv4N5cudaq13kraus_channel9push_backE8kraus_op", "cudaq::kraus_channel::push_back::op"], [2, 3, 1, "_CPPv4NK5cudaq13kraus_channel4sizeEv", "cudaq::kraus_channel::size"], [2, 1, 1, "_CPPv4N5cudaq8kraus_opE", "cudaq::kraus_op"], [2, 3, 1, "_CPPv4NK5cudaq8kraus_op7adjointEv", "cudaq::kraus_op::adjoint"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op4dataE", "cudaq::kraus_op::data"], [2, 3, 1, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE", "cudaq::kraus_op::kraus_op"], [2, 3, 1, "_CPPv4N5cudaq8kraus_op8kraus_opENSt6vectorIN5cudaq7complexEEE", "cudaq::kraus_op::kraus_op"], [2, 3, 1, "_CPPv4N5cudaq8kraus_op8kraus_opERK8kraus_op", "cudaq::kraus_op::kraus_op"], [2, 2, 1, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE", "cudaq::kraus_op::kraus_op::T"], [2, 4, 1, "_CPPv4N5cudaq8kraus_op8kraus_opENSt6vectorIN5cudaq7complexEEE", "cudaq::kraus_op::kraus_op::d"], [2, 4, 1, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE", "cudaq::kraus_op::kraus_op::initList"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op5nColsE", "cudaq::kraus_op::nCols"], [2, 5, 1, "_CPPv4N5cudaq8kraus_op5nRowsE", "cudaq::kraus_op::nRows"], [2, 3, 1, "_CPPv4N5cudaq8kraus_opaSERK8kraus_op", "cudaq::kraus_op::operator="], [2, 4, 1, "_CPPv4N5cudaq8kraus_opaSERK8kraus_op", "cudaq::kraus_op::operator=::other"], [2, 0, 1, "_CPPv4N5cudaq3mpiE", "cudaq::mpi"], [2, 3, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE", "cudaq::mpi::all_gather"], [2, 3, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE", "cudaq::mpi::all_gather"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE", "cudaq::mpi::all_gather::global"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE", "cudaq::mpi::all_gather::global"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE", "cudaq::mpi::all_gather::local"], [2, 4, 1, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE", "cudaq::mpi::all_gather::local"], [2, 3, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce"], [2, 3, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func", "cudaq::mpi::all_reduce"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::BinaryFunction"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func", "cudaq::mpi::all_reduce::Func"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::T"], [2, 2, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func", "cudaq::mpi::all_reduce::T"], [2, 4, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::function"], [2, 4, 1, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction", "cudaq::mpi::all_reduce::localValue"], [2, 3, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi", "cudaq::mpi::broadcast"], [2, 3, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi", "cudaq::mpi::broadcast"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi", "cudaq::mpi::broadcast::data"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi", "cudaq::mpi::broadcast::data"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi", "cudaq::mpi::broadcast::rootRank"], [2, 4, 1, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi", "cudaq::mpi::broadcast::rootRank"], [2, 3, 1, "_CPPv4N5cudaq3mpi8finalizeEv", "cudaq::mpi::finalize"], [2, 3, 1, "_CPPv4N5cudaq3mpi10initializeEiPPc", "cudaq::mpi::initialize"], [2, 3, 1, "_CPPv4N5cudaq3mpi10initializeEv", "cudaq::mpi::initialize"], [2, 4, 1, "_CPPv4N5cudaq3mpi10initializeEiPPc", "cudaq::mpi::initialize::argc"], [2, 4, 1, "_CPPv4N5cudaq3mpi10initializeEiPPc", "cudaq::mpi::initialize::argv"], [2, 3, 1, "_CPPv4N5cudaq3mpi14is_initializedEv", "cudaq::mpi::is_initialized"], [2, 3, 1, "_CPPv4N5cudaq3mpi9num_ranksEv", "cudaq::mpi::num_ranks"], [2, 3, 1, "_CPPv4N5cudaq3mpi4rankEv", "cudaq::mpi::rank"], [2, 1, 1, "_CPPv4N5cudaq11noise_modelE", "cudaq::noise_model"], [2, 0, 1, "_CPPv4N5cudaq11noise_model15PredicateFuncTyE", "cudaq::noise_model::PredicateFuncTy"], [2, 3, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel"], [2, 3, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel"], [2, 2, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::QuantumOp"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::channel"], [2, 4, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::channel"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::numControls"], [2, 4, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::numControls"], [2, 4, 1, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli", "cudaq::noise_model::add_all_qubit_channel::quantumOp"], [2, 3, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy", "cudaq::noise_model::add_channel"], [2, 3, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel"], [2, 3, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy", "cudaq::noise_model::add_channel"], [2, 3, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel"], [2, 2, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy", "cudaq::noise_model::add_channel::QuantumOp"], [2, 2, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::QuantumOp"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::channel"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::channel"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy", "cudaq::noise_model::add_channel::pred"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy", "cudaq::noise_model::add_channel::pred"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy", "cudaq::noise_model::add_channel::quantumOp"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::quantumOp"], [2, 4, 1, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::qubits"], [2, 4, 1, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel", "cudaq::noise_model::add_channel::qubits"], [2, 3, 1, "_CPPv4NK5cudaq11noise_model5emptyEv", "cudaq::noise_model::empty"], [2, 3, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels"], [2, 3, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels"], [2, 2, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::QuantumOp"], [2, 4, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::controlQubits"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::controlQubits"], [2, 4, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::params"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::params"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::quantumOp"], [2, 4, 1, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::targetQubits"], [2, 4, 1, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE", "cudaq::noise_model::get_channels::targetQubits"], [2, 3, 1, "_CPPv4N5cudaq11noise_model11noise_modelEv", "cudaq::noise_model::noise_model"], [2, 6, 1, "_CPPv4N5cudaq16noise_model_typeE", "cudaq::noise_model_type"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type25amplitude_damping_channelE", "cudaq::noise_model_type::amplitude_damping_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type16bit_flip_channelE", "cudaq::noise_model_type::bit_flip_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type22depolarization_channelE", "cudaq::noise_model_type::depolarization_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type18phase_flip_channelE", "cudaq::noise_model_type::phase_flip_channel"], [2, 7, 1, "_CPPv4N5cudaq16noise_model_type7unknownE", "cudaq::noise_model_type::unknown"], [2, 3, 1, "_CPPv4N5cudaq18num_available_gpusEv", "cudaq::num_available_gpus"], [2, 3, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe"], [2, 2, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::Args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::H"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::H"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::H"], [2, 2, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::QuantumKernel"], [2, 2, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::SpinOpContainer"], [2, 4, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::args"], [2, 4, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::options"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args", "cudaq::observe::shots"], [2, 4, 1, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args", "cudaq::observe::termList"], [2, 1, 1, "_CPPv4N5cudaq15observe_optionsE", "cudaq::observe_options"], [2, 1, 1, "_CPPv4N5cudaq14observe_resultE", "cudaq::observe_result"], [2, 3, 1, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType", "cudaq::observe_result::counts"], [2, 2, 1, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType", "cudaq::observe_result::counts::SpinOpType"], [2, 4, 1, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType", "cudaq::observe_result::counts::term"], [2, 3, 1, "_CPPv4N5cudaq14observe_result4dumpEv", "cudaq::observe_result::dump"], [2, 3, 1, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType", "cudaq::observe_result::expectation"], [2, 3, 1, "_CPPv4N5cudaq14observe_result11expectationEv", "cudaq::observe_result::expectation"], [2, 2, 1, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType", "cudaq::observe_result::expectation::SpinOpType"], [2, 4, 1, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType", "cudaq::observe_result::expectation::term"], [2, 3, 1, "_CPPv4N5cudaq14observe_result14id_coefficientEv", "cudaq::observe_result::id_coefficient"], [2, 3, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op", "cudaq::observe_result::observe_result"], [2, 3, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op", "cudaq::observe_result::observe_result::H"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result::H"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result::counts"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op", "cudaq::observe_result::observe_result::e"], [2, 4, 1, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result", "cudaq::observe_result::observe_result::e"], [2, 3, 1, "_CPPv4N5cudaq14observe_resultcvdEv", "cudaq::observe_result::operator double"], [2, 3, 1, "_CPPv4N5cudaq14observe_result8raw_dataEv", "cudaq::observe_result::raw_data"], [2, 1, 1, "_CPPv4N5cudaq20optimizable_functionE", "cudaq::optimizable_function"], [2, 0, 1, "_CPPv4N5cudaq19optimization_resultE", "cudaq::optimization_result"], [2, 1, 1, "_CPPv4N5cudaq9optimizerE", "cudaq::optimizer"], [2, 3, 1, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function", "cudaq::optimizer::optimize"], [2, 4, 1, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function", "cudaq::optimizer::optimize::dim"], [2, 4, 1, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function", "cudaq::optimizer::optimize::opt_function"], [2, 3, 1, "_CPPv4N5cudaq9optimizer17requiresGradientsEv", "cudaq::optimizer::requiresGradients"], [2, 0, 1, "_CPPv4N5cudaq4orcaE", "cudaq::orca"], [2, 3, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample"], [2, 3, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::ps_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async"], [2, 3, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::bs_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::input_state"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::loop_lengths"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::n_samples"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::ps_angles"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE", "cudaq::orca::sample_async::qpu_id"], [2, 1, 1, "_CPPv4N5cudaq18phase_flip_channelE", "cudaq::phase_flip_channel"], [2, 1, 1, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE", "cudaq::qreg"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE", "cudaq::qreg::Levels"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE", "cudaq::qreg::N"], [2, 3, 1, "_CPPv4N5cudaq4qreg4backENSt6size_tE", "cudaq::qreg::back"], [2, 3, 1, "_CPPv4N5cudaq4qreg4backEv", "cudaq::qreg::back"], [2, 4, 1, "_CPPv4N5cudaq4qreg4backENSt6size_tE", "cudaq::qreg::back::count"], [2, 3, 1, "_CPPv4N5cudaq4qreg5beginEv", "cudaq::qreg::begin"], [2, 3, 1, "_CPPv4N5cudaq4qreg5clearEv", "cudaq::qreg::clear"], [2, 3, 1, "_CPPv4N5cudaq4qreg5frontENSt6size_tE", "cudaq::qreg::front"], [2, 3, 1, "_CPPv4N5cudaq4qreg5frontEv", "cudaq::qreg::front"], [2, 4, 1, "_CPPv4N5cudaq4qreg5frontENSt6size_tE", "cudaq::qreg::front::count"], [2, 3, 1, "_CPPv4N5cudaq4qregixEKNSt6size_tE", "cudaq::qreg::operator[]"], [2, 4, 1, "_CPPv4N5cudaq4qregixEKNSt6size_tE", "cudaq::qreg::operator[]::idx"], [2, 3, 1, "_CPPv4NK5cudaq4qreg4sizeEv", "cudaq::qreg::size"], [2, 3, 1, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE", "cudaq::qreg::slice"], [2, 4, 1, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE", "cudaq::qreg::slice::size"], [2, 4, 1, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE", "cudaq::qreg::slice::start"], [2, 0, 1, "_CPPv4N5cudaq4qreg10value_typeE", "cudaq::qreg::value_type"], [2, 1, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE", "cudaq::qspan"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE", "cudaq::qspan::Levels"], [2, 2, 1, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE", "cudaq::qspan::N"], [2, 1, 1, "_CPPv4N5cudaq16quantum_platformE", "cudaq::quantum_platform"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform11clear_shotsEv", "cudaq::quantum_platform::clear_shots"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12connectivityEv", "cudaq::quantum_platform::connectivity"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask", "cudaq::quantum_platform::enqueueAsyncTask"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE", "cudaq::quantum_platform::enqueueAsyncTask"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE", "cudaq::quantum_platform::enqueueAsyncTask::f"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask", "cudaq::quantum_platform::enqueueAsyncTask::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE", "cudaq::quantum_platform::enqueueAsyncTask::qpu_id"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask", "cudaq::quantum_platform::enqueueAsyncTask::t"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12getLogStreamEv", "cudaq::quantum_platform::getLogStream"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform15get_current_qpuEv", "cudaq::quantum_platform::get_current_qpu"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform12get_exec_ctxEv", "cudaq::quantum_platform::get_exec_ctx"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsENSt6size_tE", "cudaq::quantum_platform::get_num_qubits"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsEv", "cudaq::quantum_platform::get_num_qubits"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsENSt6size_tE", "cudaq::quantum_platform::get_num_qubits::qpu_id"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform23get_remote_capabilitiesEKNSt6size_tE", "cudaq::quantum_platform::get_remote_capabilities"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform23get_remote_capabilitiesEKNSt6size_tE", "cudaq::quantum_platform::get_remote_capabilities::qpuId"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9get_shotsEv", "cudaq::quantum_platform::get_shots"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform11is_emulatedEKNSt6size_tE", "cudaq::quantum_platform::is_emulated"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform11is_emulatedEKNSt6size_tE", "cudaq::quantum_platform::is_emulated::qpuId"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9is_remoteEKNSt6size_tE", "cudaq::quantum_platform::is_remote"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9is_remoteEKNSt6size_tE", "cudaq::quantum_platform::is_remote::qpuId"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform12is_simulatorEKNSt6size_tE", "cudaq::quantum_platform::is_simulator"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform12is_simulatorEKNSt6size_tE", "cudaq::quantum_platform::is_simulator::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::H"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::gradient"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::kernelArgs"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::kernelName"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::n_params"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::optimizer"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE", "cudaq::quantum_platform::launchVQE::shots"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14list_platformsEv", "cudaq::quantum_platform::list_platforms"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform4nameEv", "cudaq::quantum_platform::name"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform8num_qpusEv", "cudaq::quantum_platform::num_qpus"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform15onRandomSeedSetENSt6size_tE", "cudaq::quantum_platform::onRandomSeedSet"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform15onRandomSeedSetENSt6size_tE", "cudaq::quantum_platform::onRandomSeedSet::seed"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14resetLogStreamEv", "cudaq::quantum_platform::resetLogStream"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform14reset_exec_ctxENSt6size_tE", "cudaq::quantum_platform::reset_exec_ctx"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform14reset_exec_ctxENSt6size_tE", "cudaq::quantum_platform::reset_exec_ctx::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform11reset_noiseEv", "cudaq::quantum_platform::reset_noise"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12setLogStreamERNSt7ostreamE", "cudaq::quantum_platform::setLogStream"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform12setLogStreamERNSt7ostreamE", "cudaq::quantum_platform::setLogStream::logStream"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform16setTargetBackendERKNSt6stringE", "cudaq::quantum_platform::setTargetBackend"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform16setTargetBackendERKNSt6stringE", "cudaq::quantum_platform::setTargetBackend::name"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform15set_current_qpuEKNSt6size_tE", "cudaq::quantum_platform::set_current_qpu"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform15set_current_qpuEKNSt6size_tE", "cudaq::quantum_platform::set_current_qpu::device_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE", "cudaq::quantum_platform::set_exec_ctx"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE", "cudaq::quantum_platform::set_exec_ctx::ctx"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE", "cudaq::quantum_platform::set_exec_ctx::qpu_id"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9set_noiseEPK11noise_model", "cudaq::quantum_platform::set_noise"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9set_noiseEPK11noise_model", "cudaq::quantum_platform::set_noise::model"], [2, 3, 1, "_CPPv4N5cudaq16quantum_platform9set_shotsEi", "cudaq::quantum_platform::set_shots"], [2, 4, 1, "_CPPv4N5cudaq16quantum_platform9set_shotsEi", "cudaq::quantum_platform::set_shots::numShots"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform29supports_conditional_feedbackEKNSt6size_tE", "cudaq::quantum_platform::supports_conditional_feedback"], [2, 4, 1, "_CPPv4NK5cudaq16quantum_platform29supports_conditional_feedbackEKNSt6size_tE", "cudaq::quantum_platform::supports_conditional_feedback::qpu_id"], [2, 3, 1, "_CPPv4NK5cudaq16quantum_platform26supports_task_distributionEv", "cudaq::quantum_platform::supports_task_distribution"], [2, 0, 1, "_CPPv4N5cudaq5qubitE", "cudaq::qubit"], [2, 1, 1, "_CPPv4I_NSt6size_tEEN5cudaq5quditE", "cudaq::qudit"], [2, 2, 1, "_CPPv4I_NSt6size_tEEN5cudaq5quditE", "cudaq::qudit::Levels"], [2, 3, 1, "_CPPv4N5cudaq5qudit5quditEv", "cudaq::qudit::qudit"], [2, 1, 1, "_CPPv4I_NSt6size_tEEN5cudaq7qvectorE", "cudaq::qvector"], [2, 2, 1, "_CPPv4I_NSt6size_tEEN5cudaq7qvectorE", "cudaq::qvector::Levels"], [2, 3, 1, "_CPPv4N5cudaq7qvector4backENSt6size_tE", "cudaq::qvector::back"], [2, 3, 1, "_CPPv4N5cudaq7qvector4backEv", "cudaq::qvector::back"], [2, 4, 1, "_CPPv4N5cudaq7qvector4backENSt6size_tE", "cudaq::qvector::back::count"], [2, 3, 1, "_CPPv4N5cudaq7qvector5beginEv", "cudaq::qvector::begin"], [2, 3, 1, "_CPPv4N5cudaq7qvector5clearEv", "cudaq::qvector::clear"], [2, 3, 1, "_CPPv4N5cudaq7qvector3endEv", "cudaq::qvector::end"], [2, 3, 1, "_CPPv4N5cudaq7qvector5frontENSt6size_tE", "cudaq::qvector::front"], [2, 3, 1, "_CPPv4N5cudaq7qvector5frontEv", "cudaq::qvector::front"], [2, 4, 1, "_CPPv4N5cudaq7qvector5frontENSt6size_tE", "cudaq::qvector::front::count"], [2, 3, 1, "_CPPv4N5cudaq7qvectoraSERK7qvector", "cudaq::qvector::operator="], [2, 3, 1, "_CPPv4N5cudaq7qvectorixEKNSt6size_tE", "cudaq::qvector::operator[]"], [2, 4, 1, "_CPPv4N5cudaq7qvectorixEKNSt6size_tE", "cudaq::qvector::operator[]::idx"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorENSt6size_tE", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERK5state", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERK7qvector", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb", "cudaq::qvector::qvector"], [2, 3, 1, "_CPPv4N5cudaq7qvector7qvectorERR7qvector", "cudaq::qvector::qvector"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorENSt6size_tE", "cudaq::qvector::qvector::size"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorERK5state", "cudaq::qvector::qvector::state"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb", "cudaq::qvector::qvector::validate"], [2, 4, 1, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb", "cudaq::qvector::qvector::vector"], [2, 3, 1, "_CPPv4NK5cudaq7qvector4sizeEv", "cudaq::qvector::size"], [2, 3, 1, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE", "cudaq::qvector::slice"], [2, 4, 1, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE", "cudaq::qvector::slice::size"], [2, 4, 1, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE", "cudaq::qvector::slice::start"], [2, 0, 1, "_CPPv4N5cudaq7qvector10value_typeE", "cudaq::qvector::value_type"], [2, 1, 1, "_CPPv4I_NSt6size_tEEN5cudaq5qviewE", "cudaq::qview"], [2, 2, 1, "_CPPv4I_NSt6size_tEEN5cudaq5qviewE", "cudaq::qview::Levels"], [2, 0, 1, "_CPPv4N5cudaq5qview10value_typeE", "cudaq::qview::value_type"], [2, 3, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType", "cudaq::range"], [2, 3, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range"], [2, 3, 1, "_CPPv4N5cudaq5rangeENSt6size_tE", "cudaq::range"], [2, 2, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType", "cudaq::range::ElementType"], [2, 2, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::ElementType"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType", "cudaq::range::N"], [2, 4, 1, "_CPPv4N5cudaq5rangeENSt6size_tE", "cudaq::range::N"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::start"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::step"], [2, 4, 1, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType", "cudaq::range::stop"], [2, 0, 1, "_CPPv4N5cudaq4realE", "cudaq::real"], [2, 0, 1, "_CPPv4N5cudaq8registryE", "cudaq::registry"], [2, 1, 1, "_CPPv4I0EN5cudaq8registry14RegisteredTypeE", "cudaq::registry::RegisteredType"], [2, 2, 1, "_CPPv4I0EN5cudaq8registry14RegisteredTypeE", "cudaq::registry::RegisteredType::T"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample"], [2, 3, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::Args"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::QuantumKernel"], [2, 2, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::QuantumKernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::args"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args", "cudaq::sample::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::kernel"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args", "cudaq::sample::options"], [2, 4, 1, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args", "cudaq::sample::shots"], [2, 1, 1, "_CPPv4N5cudaq14sample_optionsE", "cudaq::sample_options"], [2, 1, 1, "_CPPv4N5cudaq13sample_resultE", "cudaq::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResult", "cudaq::sample_result::append"], [2, 4, 1, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResult", "cudaq::sample_result::append::result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result5beginEv", "cudaq::sample_result::begin"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result5beginEv", "cudaq::sample_result::begin"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result6cbeginEv", "cudaq::sample_result::cbegin"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result4cendEv", "cudaq::sample_result::cend"], [2, 3, 1, "_CPPv4N5cudaq13sample_result5clearEv", "cudaq::sample_result::clear"], [2, 3, 1, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::count"], [2, 4, 1, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::count::bitString"], [2, 4, 1, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::count::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::sample_result::deserialize"], [2, 4, 1, "_CPPv4N5cudaq13sample_result11deserializeERNSt6vectorINSt6size_tEEE", "cudaq::sample_result::deserialize::data"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result4dumpERNSt7ostreamE", "cudaq::sample_result::dump"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result4dumpEv", "cudaq::sample_result::dump"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result4dumpERNSt7ostreamE", "cudaq::sample_result::dump::os"], [2, 3, 1, "_CPPv4N5cudaq13sample_result3endEv", "cudaq::sample_result::end"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result3endEv", "cudaq::sample_result::end"], [2, 3, 1, "_CPPv4N5cudaq13sample_result9exp_val_zEKNSt11string_viewE", "cudaq::sample_result::exp_val_z"], [2, 4, 1, "_CPPv4N5cudaq13sample_result9exp_val_zEKNSt11string_viewE", "cudaq::sample_result::exp_val_z::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result11expectationEKNSt11string_viewE", "cudaq::sample_result::expectation"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result11expectationEKNSt11string_viewE", "cudaq::sample_result::expectation::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal"], [2, 3, 1, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::marginalIndices"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::marginalIndices"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::registerName"], [2, 4, 1, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::get_marginal::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result15has_even_parityENSt11string_viewE", "cudaq::sample_result::has_even_parity"], [2, 4, 1, "_CPPv4N5cudaq13sample_result15has_even_parityENSt11string_viewE", "cudaq::sample_result::has_even_parity::bitString"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result15has_expectationEKNSt11string_viewE", "cudaq::sample_result::has_expectation"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result15has_expectationEKNSt11string_viewE", "cudaq::sample_result::has_expectation::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13most_probableEKNSt11string_viewE", "cudaq::sample_result::most_probable"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13most_probableEKNSt11string_viewE", "cudaq::sample_result::most_probable::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_resultpLERK13sample_result", "cudaq::sample_result::operator+="], [2, 4, 1, "_CPPv4N5cudaq13sample_resultpLERK13sample_result", "cudaq::sample_result::operator+=::other"], [2, 3, 1, "_CPPv4N5cudaq13sample_resultaSER13sample_result", "cudaq::sample_result::operator="], [2, 4, 1, "_CPPv4N5cudaq13sample_resultaSER13sample_result", "cudaq::sample_result::operator=::counts"], [2, 3, 1, "_CPPv4NK5cudaq13sample_resulteqERK13sample_result", "cudaq::sample_result::operator=="], [2, 4, 1, "_CPPv4NK5cudaq13sample_resulteqERK13sample_result", "cudaq::sample_result::operator==::counts"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::probability"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::probability::bitString"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE", "cudaq::sample_result::probability::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result14register_namesEv", "cudaq::sample_result::register_names"], [2, 3, 1, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::reorder"], [2, 4, 1, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::reorder::index"], [2, 4, 1, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE", "cudaq::sample_result::reorder::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultER15ExecutionResult", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERK13sample_result", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultERR15ExecutionResult", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result"], [2, 3, 1, "_CPPv4N5cudaq13sample_result13sample_resultEv", "cudaq::sample_result::sample_result"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result::preComputedExp"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultER15ExecutionResult", "cudaq::sample_result::sample_result::result"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultERR15ExecutionResult", "cudaq::sample_result::sample_result::result"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultERNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result::results"], [2, 4, 1, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE", "cudaq::sample_result::sample_result::results"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result9serializeEv", "cudaq::sample_result::serialize"], [2, 3, 1, "_CPPv4N5cudaq13sample_result4sizeEKNSt11string_viewE", "cudaq::sample_result::size"], [2, 4, 1, "_CPPv4N5cudaq13sample_result4sizeEKNSt11string_viewE", "cudaq::sample_result::size::registerName"], [2, 3, 1, "_CPPv4NK5cudaq13sample_result6to_mapEKNSt11string_viewE", "cudaq::sample_result::to_map"], [2, 4, 1, "_CPPv4NK5cudaq13sample_result6to_mapEKNSt11string_viewE", "cudaq::sample_result::to_map::registerName"], [2, 3, 1, "_CPPv4N5cudaq13sample_resultD0Ev", "cudaq::sample_result::~sample_result"], [2, 3, 1, "_CPPv4N5cudaq9set_noiseERKN5cudaq11noise_modelE", "cudaq::set_noise"], [2, 4, 1, "_CPPv4N5cudaq9set_noiseERKN5cudaq11noise_modelE", "cudaq::set_noise::model"], [2, 3, 1, "_CPPv4N5cudaq15set_random_seedENSt6size_tE", "cudaq::set_random_seed"], [2, 4, 1, "_CPPv4N5cudaq15set_random_seedENSt6size_tE", "cudaq::set_random_seed::seed"], [2, 6, 1, "_CPPv4N5cudaq20simulation_precisionE", "cudaq::simulation_precision"], [2, 7, 1, "_CPPv4N5cudaq20simulation_precision4fp32E", "cudaq::simulation_precision::fp32"], [2, 7, 1, "_CPPv4N5cudaq20simulation_precision4fp64E", "cudaq::simulation_precision::fp64"], [2, 1, 1, "_CPPv4N5cudaq7spin_opE", "cudaq::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op5beginEv", "cudaq::spin_op::begin"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op5beginEv", "cudaq::spin_op::begin"], [2, 0, 1, "_CPPv4N5cudaq7spin_op12csr_spmatrixE", "cudaq::spin_op::csr_spmatrix"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op16distribute_termsENSt6size_tE", "cudaq::spin_op::distribute_terms"], [2, 4, 1, "_CPPv4NK5cudaq7spin_op16distribute_termsENSt6size_tE", "cudaq::spin_op::distribute_terms::numChunks"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op4dumpEv", "cudaq::spin_op::dump"], [2, 3, 1, "_CPPv4N5cudaq7spin_op3endEv", "cudaq::spin_op::end"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op3endEv", "cudaq::spin_op::end"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op14for_each_pauliERRNSt8functionIFv5pauliNSt6size_tEEEE", "cudaq::spin_op::for_each_pauli"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op13for_each_termERRNSt8functionIFvR7spin_opEEE", "cudaq::spin_op::for_each_term"], [2, 3, 1, "_CPPv4N5cudaq7spin_op9from_wordERKNSt6stringE", "cudaq::spin_op::from_word"], [2, 4, 1, "_CPPv4N5cudaq7spin_op9from_wordERKNSt6stringE", "cudaq::spin_op::from_word::pauliWord"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op21getDataRepresentationEv", "cudaq::spin_op::getDataRepresentation"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op12getDataTupleEv", "cudaq::spin_op::getDataTuple"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op15get_coefficientEv", "cudaq::spin_op::get_coefficient"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op12get_raw_dataEv", "cudaq::spin_op::get_raw_data"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op11is_identityEv", "cudaq::spin_op::is_identity"], [2, 1, 1, "_CPPv4I0EN5cudaq7spin_op8iteratorE", "cudaq::spin_op::iterator"], [2, 2, 1, "_CPPv4I0EN5cudaq7spin_op8iteratorE", "cudaq::spin_op::iterator::QualifiedSpinOp"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op10num_qubitsEv", "cudaq::spin_op::num_qubits"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op9num_termsEv", "cudaq::spin_op::num_terms"], [2, 3, 1, "_CPPv4N5cudaq7spin_opmLEKNSt7complexIdEE", "cudaq::spin_op::operator*="], [2, 3, 1, "_CPPv4N5cudaq7spin_opmLEKd", "cudaq::spin_op::operator*="], [2, 3, 1, "_CPPv4N5cudaq7spin_opmLERK7spin_op", "cudaq::spin_op::operator*="], [2, 4, 1, "_CPPv4N5cudaq7spin_opmLEKNSt7complexIdEE", "cudaq::spin_op::operator*=::v"], [2, 4, 1, "_CPPv4N5cudaq7spin_opmLEKd", "cudaq::spin_op::operator*=::v"], [2, 4, 1, "_CPPv4N5cudaq7spin_opmLERK7spin_op", "cudaq::spin_op::operator*=::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_oppLERK7spin_op", "cudaq::spin_op::operator+="], [2, 4, 1, "_CPPv4N5cudaq7spin_oppLERK7spin_op", "cudaq::spin_op::operator+=::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_opmIERK7spin_op", "cudaq::spin_op::operator-="], [2, 4, 1, "_CPPv4N5cudaq7spin_opmIERK7spin_op", "cudaq::spin_op::operator-=::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_opaSERK7spin_op", "cudaq::spin_op::operator="], [2, 3, 1, "_CPPv4NK5cudaq7spin_opeqERK7spin_op", "cudaq::spin_op::operator=="], [2, 4, 1, "_CPPv4NK5cudaq7spin_opeqERK7spin_op", "cudaq::spin_op::operator==::v"], [2, 3, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random"], [2, 4, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random::nQubits"], [2, 4, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random::nTerms"], [2, 4, 1, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj", "cudaq::spin_op::random::seed"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opENSt6size_tE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERK7spin_op", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt13unordered_mapI12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opERNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op"], [2, 3, 1, "_CPPv4N5cudaq7spin_op7spin_opEv", "cudaq::spin_op::spin_op"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt13unordered_mapI12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op::_terms"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE", "cudaq::spin_op::spin_op::bsf"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE", "cudaq::spin_op::spin_op::coeff"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE", "cudaq::spin_op::spin_op::coeff"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE", "cudaq::spin_op::spin_op::coeffs"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE", "cudaq::spin_op::spin_op::data_rep"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE", "cudaq::spin_op::spin_op::id"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE", "cudaq::spin_op::spin_op::nQubits"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opENSt6size_tE", "cudaq::spin_op::spin_op::numQubits"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERK7spin_op", "cudaq::spin_op::spin_op::o"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE", "cudaq::spin_op::spin_op::term"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERKNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op::termData"], [2, 4, 1, "_CPPv4N5cudaq7spin_op7spin_opERNSt4pairIK12spin_op_termNSt7complexIdEEEE", "cudaq::spin_op::spin_op::termData"], [2, 0, 1, "_CPPv4N5cudaq7spin_op12spin_op_termE", "cudaq::spin_op::spin_op_term"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op9to_matrixEv", "cudaq::spin_op::to_matrix"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op16to_sparse_matrixEv", "cudaq::spin_op::to_sparse_matrix"], [2, 3, 1, "_CPPv4NK5cudaq7spin_op9to_stringEb", "cudaq::spin_op::to_string"], [2, 4, 1, "_CPPv4NK5cudaq7spin_op9to_stringEb", "cudaq::spin_op::to_string::printCoefficients"], [2, 3, 1, "_CPPv4N5cudaq7spin_opD0Ev", "cudaq::spin_op::~spin_op"], [2, 1, 1, "_CPPv4N5cudaq5stateE", "cudaq::state"], [2, 3, 1, "_CPPv4N5cudaq5state9amplitudeERKNSt6vectorIiEE", "cudaq::state::amplitude"], [2, 4, 1, "_CPPv4N5cudaq5state9amplitudeERKNSt6vectorIiEE", "cudaq::state::amplitude::basisState"], [2, 3, 1, "_CPPv4N5cudaq5state10amplitudesERKNSt6vectorINSt6vectorIiEEEE", "cudaq::state::amplitudes"], [2, 4, 1, "_CPPv4N5cudaq5state10amplitudesERKNSt6vectorINSt6vectorIiEEEE", "cudaq::state::amplitudes::basisStates"], [2, 3, 1, "_CPPv4NK5cudaq5state4dumpERNSt7ostreamE", "cudaq::state::dump"], [2, 3, 1, "_CPPv4NK5cudaq5state4dumpEv", "cudaq::state::dump"], [2, 4, 1, "_CPPv4NK5cudaq5state4dumpERNSt7ostreamE", "cudaq::state::dump::os"], [2, 3, 1, "_CPPv4N5cudaq5state9from_dataERK10state_data", "cudaq::state::from_data"], [2, 4, 1, "_CPPv4N5cudaq5state9from_dataERK10state_data", "cudaq::state::from_data::data"], [2, 3, 1, "_CPPv4NK5cudaq5state14get_num_qubitsEv", "cudaq::state::get_num_qubits"], [2, 3, 1, "_CPPv4NK5cudaq5state15get_num_tensorsEv", "cudaq::state::get_num_tensors"], [2, 3, 1, "_CPPv4NK5cudaq5state13get_precisionEv", "cudaq::state::get_precision"], [2, 3, 1, "_CPPv4NK5cudaq5state10get_tensorENSt6size_tE", "cudaq::state::get_tensor"], [2, 4, 1, "_CPPv4NK5cudaq5state10get_tensorENSt6size_tE", "cudaq::state::get_tensor::tensorIdx"], [2, 3, 1, "_CPPv4NK5cudaq5state11get_tensorsEv", "cudaq::state::get_tensors"], [2, 3, 1, "_CPPv4NK5cudaq5state9is_on_gpuEv", "cudaq::state::is_on_gpu"], [2, 3, 1, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE", "cudaq::state::operator()"], [2, 3, 1, "_CPPv4NK5cudaq5stateclERKNSt16initializer_listINSt6size_tEEENSt6size_tE", "cudaq::state::operator()"], [2, 4, 1, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE", "cudaq::state::operator()::idx"], [2, 4, 1, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE", "cudaq::state::operator()::jdx"], [2, 4, 1, "_CPPv4NK5cudaq5stateclERKNSt16initializer_listINSt6size_tEEENSt6size_tE", "cudaq::state::operator()::tensorIdx"], [2, 3, 1, "_CPPv4N5cudaq5stateaSERR5state", "cudaq::state::operator="], [2, 4, 1, "_CPPv4N5cudaq5stateaSERR5state", "cudaq::state::operator=::other"], [2, 3, 1, "_CPPv4NK5cudaq5stateixENSt6size_tE", "cudaq::state::operator[]"], [2, 4, 1, "_CPPv4NK5cudaq5stateixENSt6size_tE", "cudaq::state::operator[]::idx"], [2, 3, 1, "_CPPv4N5cudaq5state7overlapERK5state", "cudaq::state::overlap"], [2, 4, 1, "_CPPv4N5cudaq5state7overlapERK5state", "cudaq::state::overlap::other"], [2, 3, 1, "_CPPv4N5cudaq5state5stateEP15SimulationState", "cudaq::state::state"], [2, 3, 1, "_CPPv4N5cudaq5state5stateERK5state", "cudaq::state::state"], [2, 4, 1, "_CPPv4N5cudaq5state5stateERK5state", "cudaq::state::state::other"], [2, 4, 1, "_CPPv4N5cudaq5state5stateEP15SimulationState", "cudaq::state::state::ptrToOwn"], [2, 3, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host"], [2, 2, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host::ScalarType"], [2, 4, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host::hostPtr"], [2, 4, 1, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE", "cudaq::state::to_host::numElements"], [2, 0, 1, "_CPPv4N5cudaq10state_dataE", "cudaq::state_data"], [2, 0, 1, "_CPPv4N5cudaq6tensorE", "cudaq::tensor"], [2, 3, 1, "_CPPv4N5cudaq11unset_noiseEv", "cudaq::unset_noise"], [2, 1, 1, "_CPPv4N5nvqir18MPSSimulationStateE", "nvqir::MPSSimulationState"], [2, 1, 1, "_CPPv4N5nvqir24TensorNetSimulationStateE", "nvqir::TensorNetSimulationState"], [3, 8, 0, "-", "cudaq"]], "cudaq": [[3, 9, 1, "", "AmplitudeDampingChannel"], [3, 9, 1, "", "AsyncEvolveResult"], [3, 9, 1, "", "AsyncObserveResult"], [3, 9, 1, "", "AsyncSampleResult"], [3, 9, 1, "", "AsyncStateResult"], [3, 9, 1, "", "BitFlipChannel"], [3, 9, 1, "", "ComplexMatrix"], [3, 9, 1, "", "DepolarizationChannel"], [3, 9, 1, "", "EvolveResult"], [3, 11, 1, "", "Kernel"], [3, 9, 1, "", "KrausChannel"], [3, 9, 1, "", "KrausOperator"], [3, 9, 1, "", "NoiseModel"], [3, 9, 1, "", "ObserveResult"], [3, 9, 1, "", "OptimizationResult"], [3, 9, 1, "", "PhaseFlipChannel"], [3, 9, 1, "", "PyKernel"], [3, 9, 1, "", "PyKernelDecorator"], [3, 9, 1, "", "QuakeValue"], [3, 9, 1, "", "SampleResult"], [3, 9, 1, "", "Schedule"], [3, 9, 1, "", "SimulationPrecision"], [3, 9, 1, "", "SpinOperator"], [3, 9, 1, "", "State"], [3, 9, 1, "", "Target"], [3, 9, 1, "", "Tensor"], [3, 13, 1, "", "draw"], [3, 13, 1, "", "evolve"], [3, 13, 1, "", "evolve_async"], [3, 13, 1, "", "get_state"], [3, 13, 1, "", "get_state_async"], [3, 13, 1, "", "get_target"], [3, 13, 1, "", "get_targets"], [3, 13, 1, "", "has_target"], [3, 10, 1, "", "initialize_cudaq"], [3, 13, 1, "", "kernel"], [3, 13, 1, "", "make_kernel"], [3, 10, 1, "", "num_available_gpus"], [3, 13, 1, "", "observe"], [3, 13, 1, "", "observe_async"], [3, 11, 1, "", "qreg"], [3, 9, 1, "", "qubit"], [3, 9, 1, "", "qvector"], [3, 13, 1, "", "reset_target"], [3, 13, 1, "", "sample"], [3, 13, 1, "", "sample_async"], [3, 13, 1, "", "set_noise"], [3, 10, 1, "", "set_random_seed"], [3, 13, 1, "", "set_target"], [3, 13, 1, "", "translate"], [3, 13, 1, "", "unset_noise"], [3, 13, 1, "", "vqe"]], "cudaq.AmplitudeDampingChannel": [[3, 10, 1, "", "__init__"]], "cudaq.AsyncEvolveResult": [[3, 10, 1, "", "get"]], "cudaq.AsyncObserveResult": [[3, 10, 1, "", "get"]], "cudaq.AsyncSampleResult": [[3, 10, 1, "", "get"]], "cudaq.AsyncStateResult": [[3, 10, 1, "", "get"]], "cudaq.BitFlipChannel": [[3, 10, 1, "", "__init__"]], "cudaq.ComplexMatrix": [[3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "__str__"], [3, 10, 1, "", "minimal_eigenvalue"], [3, 10, 1, "", "num_columns"], [3, 10, 1, "", "num_rows"], [3, 10, 1, "", "to_numpy"]], "cudaq.DepolarizationChannel": [[3, 10, 1, "", "__init__"]], "cudaq.EvolveResult": [[3, 10, 1, "", "expectation_values"], [3, 10, 1, "", "final_expectation_values"], [3, 10, 1, "", "final_state"], [3, 10, 1, "", "intermediate_states"]], "cudaq.KrausChannel": [[3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "append"]], "cudaq.KrausOperator": [[3, 12, 1, "", "col_count"], [3, 12, 1, "", "row_count"]], "cudaq.NoiseModel": [[3, 10, 1, "", "__init__"], [3, 10, 1, "", "add_all_qubit_channel"], [3, 10, 1, "", "add_channel"], [3, 10, 1, "", "get_channels"]], "cudaq.ObserveResult": [[3, 10, 1, "", "counts"], [3, 10, 1, "", "dump"], [3, 10, 1, "", "expectation"], [3, 10, 1, "", "expectation_z"], [3, 10, 1, "", "get_spin"]], "cudaq.PhaseFlipChannel": [[3, 10, 1, "", "__init__"]], "cudaq.PyKernel": [[3, 11, 1, "", "argument_count"], [3, 11, 1, "", "arguments"], [3, 11, 1, "", "name"]], "cudaq.PyKernelDecorator": [[3, 10, 1, "", "__call__"], [3, 10, 1, "", "__str__"], [3, 10, 1, "", "compile"], [3, 10, 1, "", "extract_c_function_pointer"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "merge_kernel"], [3, 10, 1, "", "synthesize_callable_arguments"], [3, 10, 1, "", "to_json"], [3, 10, 1, "", "type_to_str"]], "cudaq.QuakeValue": [[3, 10, 1, "", "__add__"], [3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "__mul__"], [3, 10, 1, "", "__neg__"], [3, 10, 1, "", "__radd__"], [3, 10, 1, "", "__rmul__"], [3, 10, 1, "", "__rsub__"], [3, 10, 1, "", "__sub__"], [3, 10, 1, "", "slice"]], "cudaq.SampleResult": [[3, 10, 1, "", "__getitem__"], [3, 10, 1, "", "__iter__"], [3, 10, 1, "", "__len__"], [3, 10, 1, "", "clear"], [3, 10, 1, "", "count"], [3, 10, 1, "", "deserialize"], [3, 10, 1, "", "dump"], [3, 10, 1, "", "expectation"], [3, 10, 1, "", "expectation_z"], [3, 10, 1, "", "get_marginal_counts"], [3, 10, 1, "", "get_register_counts"], [3, 10, 1, "", "get_sequential_data"], [3, 10, 1, "", "items"], [3, 10, 1, "", "most_probable"], [3, 10, 1, "", "probability"], [3, 11, 1, "", "register_names"], [3, 10, 1, "", "serialize"], [3, 10, 1, "", "values"]], "cudaq.SimulationPrecision": [[3, 12, 1, "", "name"]], "cudaq.State": [[3, 10, 1, "", "amplitude"], [3, 10, 1, "", "amplitudes"], [3, 10, 1, "", "dump"], [3, 10, 1, "", "from_data"], [3, 10, 1, "", "getTensor"], [3, 10, 1, "", "getTensors"], [3, 10, 1, "", "is_on_gpu"], [3, 10, 1, "", "num_qubits"], [3, 10, 1, "", "overlap"]], "cudaq.Target": [[3, 12, 1, "", "description"], [3, 10, 1, "", "get_precision"], [3, 10, 1, "", "is_emulated"], [3, 10, 1, "", "is_remote"], [3, 12, 1, "", "name"], [3, 10, 1, "", "num_qpus"], [3, 12, 1, "", "platform"], [3, 12, 1, "", "simulator"]], "cudaq.gradients": [[3, 9, 1, "", "CentralDifference"], [3, 9, 1, "", "ForwardDifference"], [3, 9, 1, "", "ParameterShift"], [3, 9, 1, "", "gradient"]], "cudaq.gradients.CentralDifference": [[3, 10, 1, "", "compute"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "to_json"]], "cudaq.gradients.ForwardDifference": [[3, 10, 1, "", "compute"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "to_json"]], "cudaq.gradients.ParameterShift": [[3, 10, 1, "", "compute"], [3, 10, 1, "", "from_json"], [3, 10, 1, "", "to_json"]], "cudaq.mpi": [[3, 10, 1, "", "all_gather"], [3, 10, 1, "", "broadcast"], [3, 10, 1, "", "finalize"], [3, 10, 1, "", "initialize"], [3, 10, 1, "", "is_initialized"], [3, 10, 1, "", "num_ranks"], [3, 10, 1, "", "rank"]], "cudaq.operator.cudm_state": [[3, 9, 1, "", "CuDensityMatState"], [3, 13, 1, "", "to_cupy_array"]], "cudaq.operator.definitions": [[3, 9, 1, "", "SpinOperator"]], "cudaq.operator.expressions": [[3, 9, 1, "", "ElementaryOperator"], [3, 9, 1, "", "OperatorSum"], [3, 9, 1, "", "ProductOperator"], [3, 9, 1, "", "RydbergHamiltonian"], [3, 9, 1, "", "ScalarOperator"]], "cudaq.operator.expressions.ElementaryOperator": [[3, 10, 1, "", "define"]], "cudaq.operator.expressions.RydbergHamiltonian": [[3, 10, 1, "", "__init__"]], "cudaq.operator.integrator": [[3, 9, 1, "", "BaseIntegrator"]], "cudaq.optimizers": [[3, 9, 1, "", "COBYLA"], [3, 9, 1, "", "GradientDescent"], [3, 9, 1, "", "LBFGS"], [3, 9, 1, "", "NelderMead"], [3, 9, 1, "", "optimizer"]], "cudaq.optimizers.COBYLA": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.optimizers.GradientDescent": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.optimizers.LBFGS": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.optimizers.NelderMead": [[3, 10, 1, "", "from_json"], [3, 12, 1, "", "initial_parameters"], [3, 12, 1, "", "lower_bounds"], [3, 12, 1, "", "max_iterations"], [3, 10, 1, "", "optimize"], [3, 10, 1, "", "requires_gradients"], [3, 10, 1, "", "to_json"], [3, 12, 1, "", "upper_bounds"]], "cudaq.orca": [[3, 10, 1, "", "sample"]], "cudaq.spin": [[3, 13, 1, "", "i"], [3, 13, 1, "", "x"], [3, 13, 1, "", "y"], [3, 13, 1, "", "z"]]}, "objtypes": {"0": "cpp:type", "1": "cpp:class", "2": "cpp:templateParam", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:member", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:module", "9": "py:class", "10": "py:method", "11": "py:attribute", "12": "py:property", "13": "py:function"}, "objnames": {"0": ["cpp", "type", "C++ type"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "member", "C++ member"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "module", "Python module"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "property", "Python property"], "13": ["py", "function", "Python function"]}, "titleterms": {"code": [0, 77], "document": 0, "cuda": [0, 2, 3, 4, 5, 8, 9, 13, 21, 22, 23, 29, 32, 33, 34, 35, 50, 51, 52, 53, 56, 57, 58, 59, 60, 63, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83], "q": [0, 2, 3, 4, 5, 8, 9, 13, 21, 22, 23, 29, 32, 33, 34, 35, 50, 51, 52, 53, 56, 57, 58, 59, 60, 63, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83], "api": [0, 2, 3], "quantum": [1, 2, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17, 19, 22, 24, 25, 35, 38, 39, 42, 43, 44, 45, 47, 54, 55, 65, 69, 70], "oper": [1, 2, 28, 42, 43, 52], "unitari": [1, 21], "qubit": [1, 18, 31, 42, 47], "x": 1, "y": 1, "z": 1, "h": 1, "r1": 1, "rx": 1, "ry": 1, "rz": 1, "": [1, 7, 13, 19, 38, 74], "t": 1, "swap": 1, "u3": 1, "adjoint": 1, "control": [1, 36, 67], "measur": [1, 19, 26, 69, 70], "mz": 1, "mx": 1, "my": 1, "user": 1, "defin": 1, "custom": 1, "photon": [1, 25, 56, 69], "qudit": [1, 47], "creat": [1, 73], "annihil": 1, "phase_shift": 1, "beam_splitt": 1, "c": [2, 53, 75, 81], "common": [2, 44], "nois": [2, 18], "model": [2, 13, 18, 21, 40], "kernel": [2, 3, 19, 21, 31, 37, 39, 55, 59, 62], "builder": 2, "algorithm": [2, 5, 7, 12, 19, 35, 38], "platform": [2, 45, 55], "util": 2, "namespac": [2, 41], "python": [3, 53, 75, 77], "program": [3, 38, 44, 58, 60], "construct": [3, 13, 28], "execut": [3, 24, 25, 54], "dynam": [3, 52], "backend": [3, 51, 53, 54, 56], "configur": 3, "data": [3, 9], "type": [3, 47], "optim": [3, 22, 29, 30, 35], "gradient": [3, 23, 29, 35], "noisi": [3, 13, 27, 56], "simul": [3, 9, 13, 20, 21, 27, 54, 55, 56, 61, 74, 77], "mpi": [3, 75, 77], "submodul": 3, "orca": [3, 53, 65], "enhanc": 4, "auxiliari": 4, "field": 4, "mont": 4, "carlo": 4, "hamiltonian": [4, 68], "prepar": [4, 38], "vqe": [4, 13, 23], "run": [4, 13, 20, 60], "afqmc": 4, "molecular": [4, 8], "trial": 4, "wave": 4, "function": [4, 9, 35], "setup": [4, 12, 20, 21], "paramet": [4, 23, 29, 38], "bernstein": 5, "vazirani": 5, "classic": [5, 10, 19], "case": [5, 19], "implement": [5, 8, 9, 23], "cost": 6, "minim": 6, "deutsch": 7, "xor": 7, "oplu": 7, "oracl": 7, "phase": [7, 19, 38], "parallel": [7, 23, 24, 25, 29, 55, 64, 68], "dock": 8, "via": [8, 77], "dc": 8, "qaoa": [8, 9, 14], "set": [8, 13, 53], "up": [8, 13], "problem": [8, 19, 20], "divis": 9, "cluster": 9, "With": [9, 19, 20], "coreset": 9, "us": [9, 10, 21, 22, 23, 47, 65, 77, 79], "preprocess": 9, "scale": 9, "hadamard": 10, "test": 10, "determin": [10, 12, 19], "krylov": [10, 12], "subspac": [10, 12], "decomposit": 10, "matrix": [10, 12, 18, 56], "element": [10, 12], "numer": [10, 52], "result": [10, 19], "refer": [10, 12], "sampl": [10, 24, 25, 35, 38, 60], "perform": [10, 13, 30], "multi": [10, 12, 55, 56, 67, 68], "gpu": [10, 54, 56, 60, 68, 77], "evalu": [10, 21], "qksd": 10, "diagon": 10, "hybrid": 11, "neural": 11, "network": [11, 56], "h_2": 12, "molecul": 12, "comput": [12, 20, 44, 53, 64, 65, 70, 77], "ground": [12, 13], "state": [12, 13, 24, 25, 38, 55, 56, 69, 70], "energi": [12, 38], "anderson": 13, "impur": 13, "solver": 13, "infleqt": [13, 53, 65], "sqale": 13, "logic": [13, 26], "variat": [13, 22], "eigensolv": [13, 22], "qx": 13, "circuit": [13, 21, 23, 24, 25, 46, 68, 74], "4": [13, 19], "2": [13, 47], "encod": 13, "submiss": [13, 53], "decod": 13, "workflow": [13, 68], "aim": 13, "hardwar": [13, 53, 65], "max": 14, "cut": 14, "fourier": [15, 19], "transform": [15, 19], "revisit": 15, "telepor": 16, "teleport": 16, "explain": 16, "volum": 17, "readout": 18, "error": 18, "mitig": 18, "invers": [18, 19], "confus": 18, "from": [18, 19, 53, 75, 81], "singl": [18, 56], "k": 18, "local": [18, 77], "matric": 18, "full": 18, "factor": 19, "integ": 19, "shor": 19, "solv": 19, "order": 19, "find": 19, "modular": 19, "exponenti": [19, 28], "The": [19, 20, 23], "n": [19, 47], "21": 19, "5": 19, "postscript": 19, "magnet": 20, "suzuki": 20, "trotter": 20, "approxim": 20, "compil": [21, 73, 81], "diffus": 21, "pipelin": 21, "load": [21, 23], "convert": 21, "tensor": [21, 56], "gener": [21, 49], "compar": 21, "choos": 21, "you": 21, "need": 21, "integr": [22, 52, 80, 81], "third": [22, 29, 81], "parti": [22, 29, 81], "activ": 23, "space": 23, "gate": [23, 30, 69, 70], "fusion": [23, 30], "basic": [23, 57], "instal": [23, 75, 76, 77, 82], "relev": 23, "packag": 23, "shift": [23, 29], "an": [23, 81], "larger": 23, "observ": [24, 35, 60], "get": [24, 25, 77], "techniqu": [24, 25], "async": 24, "midcircuit": 26, "condit": 26, "spin": 28, "pauli": 28, "word": 28, "built": [29, 77], "visual": 31, "content": [32, 57, 76], "releas": 33, "languag": 34, "specif": [34, 48], "primit": 35, "cudaq": [35, 42, 43, 47], "deprec": [35, 47], "move": 35, "librari": [35, 75, 81], "flow": 36, "just": 37, "time": [37, 52], "creation": 37, "exampl": [38, 63], "hello": 38, "world": 38, "simpl": 38, "bell": 38, "ghz": 38, "estim": 38, "deuteron": 38, "bind": 38, "sweep": 38, "grover": 38, "iter": 38, "machin": 40, "standard": 41, "intrins": 42, "spin_op": 43, "pattern": 44, "action": [44, 74], "uncomput": 44, "sub": 46, "synthesi": [46, 67], "level": 47, "contain": [47, 77], "qview": 47, "qvector": 47, "qarrai": 47, "qspan": 47, "instead": 47, "qreg": 47, "quak": 49, "dialect": 49, "introduct": [49, 66, 77], "motiv": 49, "applic": 50, "target": [51, 68], "quick": [52, 54, 82], "start": [52, 54, 77, 82], "builtin": 52, "depend": [52, 75, 77], "amazon": [53, 65], "braket": [53, 65], "credenti": 53, "ionq": [53, 65], "anyon": 53, "technologi": 53, "iqm": [53, 65], "oqc": [53, 65], "quantinuum": [53, 65], "quera": [53, 65], "nvidia": [54, 55], "cloud": [54, 77], "select": 54, "multipl": [54, 64, 68], "qpu": 54, "asynchron": 54, "faq": 54, "processor": [55, 64, 68], "mqpu": 55, "distribut": [55, 77], "mode": [55, 56], "remot": [55, 77], "support": [55, 56, 75, 77], "argument": 55, "serial": 55, "access": [55, 77], "vector": 56, "featur": 56, "environ": 56, "variabl": 56, "option": 56, "node": 56, "addit": [56, 77], "trajectori": 56, "openmp": 56, "cpu": 56, "onli": 56, "product": 56, "clifford": 56, "stim": 56, "fermioniq": 56, "default": 56, "build": [58, 62, 75], "your": [58, 60, 73, 82], "first": [58, 60], "what": 59, "i": 59, "troubleshoot": 61, "debug": 61, "verbos": 61, "output": 61, "expect": 64, "valu": 64, "across": [64, 68], "provid": 65, "avail": 68, "batch": 68, "term": 68, "101": [69, 70], "work": 71, "ir": 71, "extend": [72, 74], "own": 73, "pass": 73, "new": 74, "circuitsimul": 74, "requir": [74, 77], "subtyp": 74, "method": 74, "overrid": 74, "let": 74, "see": 74, "thi": 74, "sourc": 75, "prerequisit": 75, "toolchain": [75, 81], "host": [75, 77], "runtim": 75, "guid": 76, "docker": 77, "singular": 77, "wheel": 77, "pre": 77, "binari": [77, 81], "develop": 77, "v": 77, "connect": 77, "tunnel": 77, "ssh": 77, "dgx": 77, "jupyterlab": 77, "tool": [77, 80], "pypi": 77, "In": 77, "imag": 77, "updat": 77, "compat": 77, "system": 77, "next": 77, "step": 77, "cmake": 78, "project": 79, "other": 80, "softwar": 80, "call": 81, "interfac": 81, "between": 81, "differ": 81, "valid": 82, "version": 83}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Common Quantum Programming Patterns": [[44, "common-quantum-programming-patterns"]], "Compute-Action-Uncompute": [[44, "compute-action-uncompute"]], "Machine Model": [[40, "machine-model"]], "Quantum Intrinsic Operations": [[42, "quantum-intrinsic-operations"]], "Operations on cudaq::qubit": [[42, "operations-on-cudaq-qubit"]], "Namespace and Standard": [[41, "namespace-and-standard"]], "Quantum Operators": [[43, "quantum-operators"]], "cudaq::spin_op": [[43, "cudaq-spin-op"]], "Quantum Types": [[47, "quantum-types"]], "cudaq::qudit<Levels>": [[47, "cudaq-qudit-levels"]], "cudaq::qubit": [[47, "cudaq-qubit"]], "Quantum Containers": [[47, "quantum-containers"]], "cudaq::qview<Levels = 2>": [[47, "cudaq-qview-levels-2"]], "cudaq::qvector<Levels = 2>": [[47, "cudaq-qvector-levels-2"]], "cudaq::qarray<N, Levels = 2>": [[47, "cudaq-qarray-n-levels-2"]], "cudaq::qspan<N, Levels> (Deprecated. Use cudaq::qview<Levels> instead.)": [[47, "cudaq-qspan-n-levels-deprecated-use-cudaq-qview-levels-instead"]], "cudaq::qreg<N, Levels> (Deprecated. Use cudaq::qvector<Levels> instead.)": [[47, "cudaq-qreg-n-levels-deprecated-use-cudaq-qvector-levels-instead"]], "Sub-circuit Synthesis": [[46, "sub-circuit-synthesis"]], "Specifications": [[48, "specifications"]], "Quake Dialect": [[49, "quake-dialect"]], "General Introduction": [[49, "general-introduction"]], "Motivation": [[49, "motivation"]], "Quantum Platform": [[45, "quantum-platform"]], "Control Flow": [[36, "control-flow"]], "Example Programs": [[38, "example-programs"]], "Hello World - Simple Bell State": [[38, "hello-world-simple-bell-state"]], "GHZ State Preparation and Sampling": [[38, "ghz-state-preparation-and-sampling"]], "Quantum Phase Estimation": [[38, "quantum-phase-estimation"]], "Deuteron Binding Energy Parameter Sweep": [[38, "deuteron-binding-energy-parameter-sweep"]], "Grover\u2019s Algorithm": [[38, "grover-s-algorithm"]], "Iterative Phase Estimation": [[38, "iterative-phase-estimation"]], "Just-in-Time Kernel Creation": [[37, "just-in-time-kernel-creation"]], "Quantum Kernels": [[39, "quantum-kernels"]], "Quantum Algorithmic Primitives": [[35, "quantum-algorithmic-primitives"]], "cudaq::sample": [[35, "cudaq-sample"]], "cudaq::observe": [[35, "cudaq-observe"]], "cudaq::optimizer (deprecated, functionality moved to CUDA-Q libraries)": [[35, "cudaq-optimizer-deprecated-functionality-moved-to-cuda-q-libraries"]], "cudaq::gradient (deprecated, functionality moved to CUDA-Q libraries)": [[35, "cudaq-gradient-deprecated-functionality-moved-to-cuda-q-libraries"]], "CUDA-Q by Example": [[63, "cuda-q-by-example"]], "Computing Expectation Values": [[64, "computing-expectation-values"]], "Parallelizing across Multiple Processors": [[64, "parallelizing-across-multiple-processors"]], "Building Kernels": [[62, "building-kernels"]], "Troubleshooting": [[61, "troubleshooting"]], "Debugging and Verbose Simulation Output": [[61, "debugging-and-verbose-simulation-output"]], "Running your first CUDA-Q Program": [[60, "running-your-first-cuda-q-program"]], "Sample": [[60, "sample"], [24, "Sample"], [25, "Sample"]], "Observe": [[60, "observe"], [24, "Observe"]], "Running on a GPU": [[60, "running-on-a-gpu"]], "Photonics 101": [[69, "photonics-101"]], "Quantum Photonic States": [[69, "quantum-photonic-states"]], "Quantum Photonics Gates": [[69, "quantum-photonics-gates"]], "Measurements": [[69, "measurements"], [70, "measurements"], [26, "Measurements"]], "Introduction": [[66, "introduction"], [77, "introduction"]], "Multi-control Synthesis": [[67, "multi-control-synthesis"]], "Multi-GPU Workflows": [[68, "multi-gpu-workflows"]], "Available Targets": [[68, "available-targets"]], "Parallelization across Multiple Processors": [[68, "parallelization-across-multiple-processors"]], "Batching Hamiltonian Terms": [[68, "batching-hamiltonian-terms"]], "Circuit Batching": [[68, "circuit-batching"]], "Using Quantum Hardware Providers": [[65, "using-quantum-hardware-providers"]], "Amazon Braket": [[65, "amazon-braket"], [53, "amazon-braket"]], "Infleqtion": [[65, "infleqtion"], [53, "infleqtion"]], "IonQ": [[65, "ionq"], [53, "ionq"]], "IQM": [[65, "iqm"], [53, "iqm"]], "OQC": [[65, "oqc"], [53, "oqc"]], "ORCA Computing": [[65, "orca-computing"], [53, "orca-computing"]], "Quantinuum": [[65, "quantinuum"], [53, "quantinuum"]], "QuEra Computing": [[65, "quera-computing"], [53, "quera-computing"]], "Working with the CUDA-Q IR": [[71, "working-with-the-cuda-q-ir"]], "Extending CUDA-Q with a new Simulator": [[74, "extending-cuda-q-with-a-new-simulator"]], "CircuitSimulator": [[74, "circuitsimulator"]], "Required Circuit Simulator Subtype Method Overrides": [[74, "id1"]], "Let\u2019s see this in action": [[74, "let-s-see-this-in-action"]], "Quantum Computing 101": [[70, "quantum-computing-101"]], "Quantum States": [[70, "quantum-states"]], "Quantum Gates": [[70, "quantum-gates"]], "Create your own CUDA-Q Compiler Pass": [[73, "create-your-own-cuda-q-compiler-pass"]], "Extending CUDA-Q": [[72, "extending-cuda-q"]], "What is a CUDA-Q kernel?": [[59, "what-is-a-cuda-q-kernel"]], "Building your first CUDA-Q Program": [[58, "building-your-first-cuda-q-program"]], "CUDA-Q Simulation Backends": [[56, "cuda-q-simulation-backends"]], "State Vector Simulators": [[56, "state-vector-simulators"]], "Features": [[56, "features"]], "Single-GPU": [[56, "single-gpu"]], "Environment variable options supported in single-GPU mode": [[56, "id6"]], "Multi-node multi-GPU": [[56, "multi-node-multi-gpu"], [56, "id2"]], "Additional environment variable options for multi-node multi-GPU mode": [[56, "id7"]], "Trajectory Noisy Simulation": [[56, "trajectory-noisy-simulation"]], "Additional environment variable options for trajectory simulation": [[56, "id8"]], "OpenMP CPU-only": [[56, "openmp-cpu-only"], [56, "id3"]], "Tensor Network Simulators": [[56, "tensor-network-simulators"]], "Matrix product state": [[56, "matrix-product-state"]], "Clifford-Only Simulator": [[56, "clifford-only-simulator"]], "Stim (CPU)": [[56, "stim-cpu"]], "Photonics Simulators": [[56, "photonics-simulators"]], "Fermioniq": [[56, "fermioniq"]], "Default Simulator": [[56, "default-simulator"]], "CUDA-Q Basics": [[57, "cuda-q-basics"]], "Contents": [[57, null], [76, null], [32, null]], "Multi-Processor Platforms": [[55, "multi-processor-platforms"]], "NVIDIA MQPU Platform": [[55, "nvidia-mqpu-platform"]], "Parallel distribution mode": [[55, "parallel-distribution-mode"]], "Remote MQPU Platform": [[55, "remote-mqpu-platform"]], "Supported Kernel Arguments": [[55, "supported-kernel-arguments"]], "Kernel argument serialization": [[55, "id4"]], "Accessing Simulated Quantum State": [[55, "accessing-simulated-quantum-state"]], "NVIDIA Quantum Cloud": [[54, "nvidia-quantum-cloud"]], "Quick Start": [[54, "quick-start"], [52, "quick-start"], [82, "quick-start"]], "Simulator Backend Selection": [[54, "simulator-backend-selection"]], "Multiple GPUs": [[54, "multiple-gpus"]], "Simulator Backends": [[54, "id1"]], "Multiple QPUs Asynchronous Execution": [[54, "multiple-qpus-asynchronous-execution"]], "FAQ": [[54, "faq"]], "CUDA-Q Hardware Backends": [[53, "cuda-q-hardware-backends"]], "Setting Credentials": [[53, "setting-credentials"], [53, "id1"], [53, "ionq-backend"], [53, "anyon-backend"], [53, "id10"], [53, "id13"], [53, "id16"], [53, "quantinuum-backend"], [53, "quera-backend"]], "Submission from C++": [[53, "submission-from-c"], [53, "id2"], [53, "id5"], [53, "id8"], [53, "id11"], [53, "id14"], [53, "id17"], [53, "id20"], [53, "id23"]], "Submission from Python": [[53, "submission-from-python"], [53, "id3"], [53, "id6"], [53, "id9"], [53, "id12"], [53, "id15"], [53, "id18"], [53, "id21"], [53, "id24"]], "Anyon Technologies/Anyon Computing": [[53, "anyon-technologies-anyon-computing"]], "CUDA-Q Applications": [[50, "cuda-q-applications"]], "CUDA-Q Dynamics": [[52, "cuda-q-dynamics"]], "Operator": [[52, "operator"]], "Builtin Operators": [[52, "id1"]], "Time-Dependent Dynamics": [[52, "time-dependent-dynamics"]], "Numerical Integrators": [[52, "numerical-integrators"], [52, "id2"]], "CUDA-Q Backends": [[51, "cuda-q-backends"]], "Backend Targets": [[51, null]], "Installation Guide": [[76, "installation-guide"]], "CUDA-Q and CMake": [[78, "cuda-q-and-cmake"]], "Installation from Source": [[75, "installation-from-source"]], "Prerequisites": [[75, "prerequisites"]], "Build Dependencies": [[75, "build-dependencies"]], "CUDA": [[75, "cuda"]], "Toolchain": [[75, "toolchain"]], "Building CUDA-Q": [[75, "building-cuda-q"]], "Python Support": [[75, "python-support"]], "C++ Support": [[75, "c-support"]], "Installation on the Host": [[75, "installation-on-the-host"]], "CUDA Runtime Libraries": [[75, "cuda-runtime-libraries"]], "MPI": [[75, "mpi"]], "Using CUDA and CUDA-Q in a Project": [[79, "using-cuda-and-cuda-q-in-a-project"]], "Local Installation": [[77, "local-installation"]], "Docker": [[77, "docker"]], "Singularity": [[77, "singularity"]], "Python wheels": [[77, "python-wheels"]], "Pre-built binaries": [[77, "pre-built-binaries"]], "Development with VS Code": [[77, "development-with-vs-code"]], "Using a Docker container": [[77, "using-a-docker-container"]], "Using a Singularity container": [[77, "using-a-singularity-container"]], "Connecting to a Remote Host": [[77, "connecting-to-a-remote-host"]], "Developing with Remote Tunnels": [[77, "developing-with-remote-tunnels"]], "Remote Access via SSH": [[77, "remote-access-via-ssh"]], "DGX Cloud": [[77, "dgx-cloud"]], "Get Started": [[77, "get-started"]], "Use JupyterLab": [[77, "use-jupyterlab"]], "Use VS Code": [[77, "use-vs-code"]], "Additional CUDA Tools": [[77, "additional-cuda-tools"]], "Installation via PyPI": [[77, "installation-via-pypi"]], "Installation In Container Images": [[77, "installation-in-container-images"]], "Installing Pre-built Binaries": [[77, "installing-pre-built-binaries"]], "Distributed Computing with MPI": [[77, "distributed-computing-with-mpi"]], "Updating CUDA-Q": [[77, "updating-cuda-q"]], "Dependencies and Compatibility": [[77, "dependencies-and-compatibility"]], "Supported Systems": [[77, "id10"]], "Requirements for GPU Simulation": [[77, "id11"]], "Next Steps": [[77, "next-steps"]], "CUDA-Q Versions": [[83, "cuda-q-versions"]], "Integrating with Third-Party Libraries": [[81, "integrating-with-third-party-libraries"]], "Calling a CUDA-Q library from C++": [[81, "calling-a-cuda-q-library-from-c"]], "Calling an C++ library from CUDA-Q": [[81, "calling-an-c-library-from-cuda-q"]], "Interfacing between binaries compiled with a different toolchains": [[81, "interfacing-between-binaries-compiled-with-a-different-toolchains"]], "Integration with other Software Tools": [[80, "integration-with-other-software-tools"]], "Install CUDA-Q": [[82, "install-cuda-q"]], "Validate your Installation": [[82, "validate-your-installation"]], "Language Specification": [[34, "language-specification"]], "CUDA-Q": [[34, null], [32, "cuda-q"]], "Visualization": [[31, "Visualization"]], "Qubit Visualization": [[31, "Qubit-Visualization"]], "Kernel Visualization": [[31, "Kernel-Visualization"]], "CUDA-Q Releases": [[33, "cuda-q-releases"]], "Optimizing Performance": [[30, "Optimizing-Performance"]], "Gate Fusion": [[30, "Gate-Fusion"]], "Using the Hadamard Test to Determine Quantum Krylov Subspace Decomposition Matrix Elements": [[10, "Using-the-Hadamard-Test-to-Determine-Quantum-Krylov-Subspace-Decomposition-Matrix-Elements"]], "Numerical result as a reference:": [[10, "Numerical-result-as-a-reference:"]], "Using Sample to perform the Hadamard test": [[10, "Using-Sample-to-perform-the-Hadamard-test"]], "Multi-GPU evaluation of QKSD matrix elements using the Hadamard Test": [[10, "Multi-GPU-evaluation-of-QKSD-matrix-elements-using-the-Hadamard-Test"]], "Classically Diagonalize the Subspace Matrix": [[10, "Classically-Diagonalize-the-Subspace-Matrix"]], "Hybrid Quantum Neural Networks": [[11, "Hybrid-Quantum-Neural-Networks"]], "Max-Cut with QAOA": [[14, "Max-Cut-with-QAOA"]], "Anderson Impurity Model ground state solver on Infleqtion\u2019s Sqale": [[13, "Anderson-Impurity-Model-ground-state-solver-on-Infleqtion's-Sqale"]], "Performing logical Variational Quantum Eigensolver (VQE) with CUDA-QX": [[13, "Performing-logical-Variational-Quantum-Eigensolver-(VQE)-with-CUDA-QX"]], "Constructing circuits in the [[4,2,2]] encoding": [[13, "Constructing-circuits-in-the-[[4,2,2]]-encoding"]], "Setting up submission and decoding workflow": [[13, "Setting-up-submission-and-decoding-workflow"]], "Running a CUDA-Q noisy simulation": [[13, "Running-a-CUDA-Q-noisy-simulation"]], "Running logical AIM on Infleqtion\u2019s hardware": [[13, "Running-logical-AIM-on-Infleqtion's-hardware"]], "Multi-reference Quantum Krylov Algorithm - H_2 Molecule": [[12, "Multi-reference-Quantum-Krylov-Algorithm---H_2-Molecule"]], "Setup": [[12, "Setup"]], "Computing the matrix elements": [[12, "Computing-the-matrix-elements"]], "Determining the ground state energy of the subspace": [[12, "Determining-the-ground-state-energy-of-the-subspace"]], "Deutsch\u2019s Algorithm": [[7, "Deutsch's-Algorithm"]], "XOR \\oplus": [[7, "XOR-\\oplus"]], "Quantum oracles": [[7, "Quantum-oracles"]], "Phase oracle": [[7, "Phase-oracle"]], "Quantum parallelism": [[7, "Quantum-parallelism"]], "Deutsch\u2019s Algorithm:": [[7, "Deutsch's-Algorithm:"]], "Cost Minimization": [[6, "Cost-Minimization"]], "Bernstein-Vazirani Algorithm": [[5, "Bernstein-Vazirani-Algorithm"]], "Classical case": [[5, "Classical-case"]], "Quantum case": [[5, "Quantum-case"]], "Implementing in CUDA-Q": [[5, "Implementing-in-CUDA-Q"]], "Molecular docking via DC-QAOA": [[8, "Molecular-docking-via-DC-QAOA"]], "Setting up the Molecular Docking Problem": [[8, "Setting-up-the-Molecular-Docking-Problem"]], "CUDA-Q Implementation": [[8, "CUDA-Q-Implementation"]], "Divisive Clustering With Coresets Using CUDA-Q": [[9, "Divisive-Clustering-With-Coresets-Using-CUDA-Q"]], "Data preprocessing": [[9, "Data-preprocessing"]], "Quantum functions": [[9, "Quantum-functions"]], "Divisive Clustering Function": [[9, "Divisive-Clustering-Function"]], "QAOA Implementation": [[9, "QAOA-Implementation"]], "Scaling simulations with CUDA-Q": [[9, "Scaling-simulations-with-CUDA-Q"]], "Quantum Volume": [[17, "Quantum-Volume"]], "Factoring Integers With Shor\u2019s Algorithm": [[19, "Factoring-Integers-With-Shor's-Algorithm"]], "Shor\u2019s algorithm": [[19, "Shor's-algorithm"]], "Solving the order-finding problem classically": [[19, "Solving-the-order-finding-problem-classically"]], "Solving the order-finding problem with a quantum algorithm": [[19, "Solving-the-order-finding-problem-with-a-quantum-algorithm"]], "Inverse quantum Fourier transform": [[19, "Inverse-quantum-Fourier-transform"]], "Quantum kernels for modular exponentiation": [[19, "Quantum-kernels-for-modular-exponentiation"]], "The case N = 21 and a = 5:": [[19, "The-case-N-=-21-and-a-=-5:"]], "The case N = 21 and a = 4:": [[19, "The-case-N-=-21-and-a-=-4:"]], "Determining the order from the measurement results of the phase kernel": [[19, "Determining-the-order-from-the-measurement-results-of-the-phase-kernel"]], "Postscript": [[19, "Postscript"]], "Readout Error Mitigation": [[18, "Readout-Error-Mitigation"]], "Inverse confusion matrix from single-qubit noise model": [[18, "Inverse-confusion-matrix-from-single-qubit-noise-model"]], "Inverse confusion matrix from k local confusion matrices": [[18, "Inverse-confusion-matrix-from-k-local-confusion-matrices"]], "Inverse of full confusion matrix": [[18, "Inverse-of-full-confusion-matrix"]], "Quantum Teleporation": [[16, "Quantum-Teleporation"]], "Teleportation explained": [[16, "Teleportation-explained"]], "Quantum Fourier Transform": [[15, "Quantum-Fourier-Transform"]], "Quantum Fourier Transform revisited": [[15, "Quantum-Fourier-Transform-revisited"]], "Compiling Unitaries Using Diffusion Models": [[21, "Compiling-Unitaries-Using-Diffusion-Models"]], "Diffusion model pipeline": [[21, "Diffusion-model-pipeline"]], "Setup and compilation": [[21, "Setup-and-compilation"]], "Load model": [[21, "Load-model"]], "Unitary compilation": [[21, "Unitary-compilation"]], "Convert tensors to CUDA-Q": [[21, "Convert-tensors-to-CUDA-Q"]], "Evaluate generated circuits": [[21, "Evaluate-generated-circuits"]], "Simulate kernels": [[21, "Simulate-kernels"]], "Compare unitaries": [[21, "Compare-unitaries"]], "Choosing the circuit you need": [[21, "Choosing-the-circuit-you-need"]], "VQE with gradients, active spaces, and gate fusion": [[23, "VQE-with-gradients,-active-spaces,-and-gate-fusion"]], "The Basics of VQE": [[23, "The-Basics-of-VQE"]], "Installing/Loading Relevant Packages": [[23, "Installing/Loading-Relevant-Packages"]], "Implementing VQE in CUDA-Q": [[23, "Implementing-VQE-in-CUDA-Q"]], "Parallel Parameter Shift Gradients": [[23, "Parallel-Parameter-Shift-Gradients"], [29, "Parallel-Parameter-Shift-Gradients"]], "Using an Active Space": [[23, "Using-an-Active-Space"]], "Gate Fusion for Larger Circuits": [[23, "Gate-Fusion-for-Larger-Circuits"]], "Computing Magnetization With The Suzuki-Trotter Approximation": [[20, "Computing-Magnetization-With-The-Suzuki-Trotter-Approximation"]], "Problem Setup": [[20, "Problem-Setup"]], "Running the Simulation": [[20, "Running-the-Simulation"]], "Executing Quantum Circuits": [[24, "Executing-Quantum-Circuits"]], "Get state": [[24, "Get-state"], [25, "Get-state"]], "Parallelization Techniques": [[24, "Parallelization-Techniques"], [25, "Parallelization-Techniques"]], "Observe Async": [[24, "Observe-Async"]], "Sample Async": [[24, "Sample-Async"]], "Get State Async": [[24, "Get-State-Async"]], "Variational Quantum Eigensolver": [[22, "Variational-Quantum-Eigensolver"]], "Using CUDA-Q Optimizers": [[22, "Using-CUDA-Q-Optimizers"]], "Integration with Third-Party Optimizers": [[22, "Integration-with-Third-Party-Optimizers"]], "Optimizers and Gradients": [[29, "Optimizers-and-Gradients"]], "Built in CUDA-Q Optimizers and Gradients": [[29, "Built-in-CUDA-Q-Optimizers-and-Gradients"]], "Third-Party Optimizers": [[29, "Third-Party-Optimizers"]], "Executing Quantum Photonic Circuits": [[25, "Executing-Quantum-Photonic-Circuits"]], "Noisy Simulation": [[27, "Noisy-Simulation"], [3, "noisy-simulation"]], "Operators": [[28, "Operators"], [2, "operators"]], "Constructing Spin Operators": [[28, "Constructing-Spin-Operators"]], "Pauli Words and Exponentiating Pauli Words": [[28, "Pauli-Words-and-Exponentiating-Pauli-Words"]], "Midcircuit Measurement and Conditional Logic": [[26, "Midcircuit-Measurement-and-Conditional-Logic"]], "Quantum Enhanced Auxiliary Field Quantum Monte Carlo": [[4, "Quantum-Enhanced-Auxiliary-Field-Quantum-Monte-Carlo"]], "Hamiltonian preparation for VQE": [[4, "Hamiltonian-preparation-for-VQE"]], "Run VQE with CUDA-Q": [[4, "Run-VQE-with-CUDA-Q"]], "Auxiliary Field Quantum Monte Carlo (AFQMC)": [[4, "Auxiliary-Field-Quantum-Monte-Carlo-(AFQMC)"]], "Preparation of the molecular Hamiltonian": [[4, "Preparation-of-the-molecular-Hamiltonian"]], "Preparation of the trial wave function": [[4, "Preparation-of-the-trial-wave-function"]], "Setup of the AFQMC parameters": [[4, "Setup-of-the-AFQMC-parameters"]], "Quantum Operations": [[1, "quantum-operations"]], "Unitary Operations on Qubits": [[1, "unitary-operations-on-qubits"]], "x": [[1, "x"]], "y": [[1, "y"]], "z": [[1, "z"]], "h": [[1, "h"]], "r1": [[1, "r1"]], "rx": [[1, "rx"]], "ry": [[1, "ry"]], "rz": [[1, "rz"]], "s": [[1, "s"]], "t": [[1, "t"]], "swap": [[1, "swap"]], "u3": [[1, "u3"]], "Adjoint and Controlled Operations": [[1, "adjoint-and-controlled-operations"]], "Measurements on Qubits": [[1, "measurements-on-qubits"]], "mz": [[1, "mz"], [1, "id1"]], "mx": [[1, "mx"]], "my": [[1, "my"]], "User-Defined Custom Operations": [[1, "user-defined-custom-operations"]], "Photonic Operations on Qudits": [[1, "photonic-operations-on-qudits"]], "create": [[1, "create"]], "annihilate": [[1, "annihilate"]], "phase_shift": [[1, "phase-shift"]], "beam_splitter": [[1, "beam-splitter"]], "CUDA-Q C++ API": [[2, "cuda-q-c-api"]], "Quantum": [[2, "quantum"]], "Common": [[2, "common"]], "Noise Modeling": [[2, "noise-modeling"]], "Kernel Builder": [[2, "kernel-builder"]], "Algorithms": [[2, "algorithms"]], "Platform": [[2, "platform"]], "Utilities": [[2, "utilities"]], "Namespaces": [[2, "namespaces"]], "Code documentation": [[0, "code-documentation"]], "CUDA-Q API": [[0, null]], "CUDA-Q Python API": [[3, "module-cudaq"]], "Program Construction": [[3, "program-construction"]], "Kernel Execution": [[3, "kernel-execution"]], "Dynamics": [[3, "dynamics"]], "Backend Configuration": [[3, "backend-configuration"]], "Data Types": [[3, "data-types"]], "Optimizers": [[3, "optimizers"]], "Gradients": [[3, "gradients"]], "MPI Submodule": [[3, "mpi-submodule"]], "ORCA Submodule": [[3, "orca-submodule"]]}, "indexentries": {"cudaq (c++ type)": [[2, "_CPPv45cudaq"]], "cudaq::basenvcfsimulatorqpu (c++ class)": [[2, "_CPPv4N5cudaq20BaseNvcfSimulatorQPUE"]], "cudaq::baseremoterestqpu (c++ class)": [[2, "_CPPv4N5cudaq17BaseRemoteRESTQPUE"]], "cudaq::baseremotesimulatorqpu (c++ class)": [[2, "_CPPv4N5cudaq22BaseRemoteSimulatorQPUE"]], "cudaq::cusvstate (c++ class)": [[2, "_CPPv4I0EN5cudaq9CusvStateE"]], "cudaq::executioncontext (c++ class)": [[2, "_CPPv4N5cudaq16ExecutionContextE"]], "cudaq::executioncontext::executioncontext (c++ function)": [[2, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringE"], [2, "_CPPv4N5cudaq16ExecutionContext16ExecutionContextEKNSt6stringENSt6size_tE"]], "cudaq::executioncontext::amplitudemaps (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext13amplitudeMapsE"]], "cudaq::executioncontext::asyncexec (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext9asyncExecE"]], "cudaq::executioncontext::asyncresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext11asyncResultE"]], "cudaq::executioncontext::batchiteration (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext14batchIterationE"]], "cudaq::executioncontext::canhandleobserve (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext16canHandleObserveE"]], "cudaq::executioncontext::expectationvalue (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext16expectationValueE"]], "cudaq::executioncontext::futureresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext12futureResultE"]], "cudaq::executioncontext::hasconditionalsonmeasureresults (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext31hasConditionalsOnMeasureResultsE"]], "cudaq::executioncontext::invocationresultbuffer (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext22invocationResultBufferE"]], "cudaq::executioncontext::kernelname (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext10kernelNameE"]], "cudaq::executioncontext::kerneltrace (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext11kernelTraceE"]], "cudaq::executioncontext::name (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext4nameE"]], "cudaq::executioncontext::noisemodel (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext10noiseModelE"]], "cudaq::executioncontext::numbertrajectories (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext18numberTrajectoriesE"]], "cudaq::executioncontext::optresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext9optResultE"]], "cudaq::executioncontext::overlapcomputestates (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext20overlapComputeStatesE"]], "cudaq::executioncontext::overlapresult (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext13overlapResultE"]], "cudaq::executioncontext::registernames (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext13registerNamesE"]], "cudaq::executioncontext::reorderidx (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext10reorderIdxE"]], "cudaq::executioncontext::result (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext6resultE"]], "cudaq::executioncontext::shots (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext5shotsE"]], "cudaq::executioncontext::simulationstate (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext15simulationStateE"]], "cudaq::executioncontext::spin (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext4spinE"]], "cudaq::executioncontext::totaliterations (c++ member)": [[2, "_CPPv4N5cudaq16ExecutionContext15totalIterationsE"]], "cudaq::executionresult (c++ struct)": [[2, "_CPPv4N5cudaq15ExecutionResultE"]], "cudaq::executionresult::executionresult (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionary"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryNSt6stringE"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultE16CountsDictionaryd"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultENSt6stringE"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultERK15ExecutionResult"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEd"], [2, "_CPPv4N5cudaq15ExecutionResult15ExecutionResultEv"]], "cudaq::executionresult::appendresult (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResult12appendResultENSt6stringENSt6size_tE"]], "cudaq::executionresult::deserialize (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResult11deserializeERNSt6vectorINSt6size_tEEE"]], "cudaq::executionresult::operator= (c++ function)": [[2, "_CPPv4N5cudaq15ExecutionResultaSERK15ExecutionResult"]], "cudaq::executionresult::operator== (c++ function)": [[2, "_CPPv4NK5cudaq15ExecutionResulteqERK15ExecutionResult"]], "cudaq::executionresult::registername (c++ member)": [[2, "_CPPv4N5cudaq15ExecutionResult12registerNameE"]], "cudaq::executionresult::sequentialdata (c++ member)": [[2, "_CPPv4N5cudaq15ExecutionResult14sequentialDataE"]], "cudaq::executionresult::serialize (c++ function)": [[2, "_CPPv4NK5cudaq15ExecutionResult9serializeEv"]], "cudaq::fermioniqbaseqpu (c++ class)": [[2, "_CPPv4N5cudaq16FermioniqBaseQPUE"]], "cudaq::kernelexecutiontask (c++ type)": [[2, "_CPPv4N5cudaq19KernelExecutionTaskE"]], "cudaq::kernelthunkresulttype (c++ struct)": [[2, "_CPPv4N5cudaq21KernelThunkResultTypeE"]], "cudaq::kernelthunktype (c++ type)": [[2, "_CPPv4N5cudaq15KernelThunkTypeE"]], "cudaq::orcaremoterestqpu (c++ class)": [[2, "_CPPv4N5cudaq17OrcaRemoteRESTQPUE"]], "cudaq::qpu (c++ class)": [[2, "_CPPv4N5cudaq3QPUE"]], "cudaq::qpu::qpu (c++ function)": [[2, "_CPPv4N5cudaq3QPU3QPUENSt6size_tE"], [2, "_CPPv4N5cudaq3QPU3QPUERR3QPU"], [2, "_CPPv4N5cudaq3QPU3QPUEv"]], "cudaq::qpu::enqueue (c++ function)": [[2, "_CPPv4N5cudaq3QPU7enqueueER11QuantumTask"]], "cudaq::qpu::getconnectivity (c++ function)": [[2, "_CPPv4N5cudaq3QPU15getConnectivityEv"]], "cudaq::qpu::getexecutionthreadid (c++ function)": [[2, "_CPPv4NK5cudaq3QPU20getExecutionThreadIdEv"]], "cudaq::qpu::getnumqubits (c++ function)": [[2, "_CPPv4N5cudaq3QPU12getNumQubitsEv"]], "cudaq::qpu::getremotecapabilities (c++ function)": [[2, "_CPPv4NK5cudaq3QPU21getRemoteCapabilitiesEv"]], "cudaq::qpu::isemulated (c++ function)": [[2, "_CPPv4N5cudaq3QPU10isEmulatedEv"]], "cudaq::qpu::issimulator (c++ function)": [[2, "_CPPv4N5cudaq3QPU11isSimulatorEv"]], "cudaq::qpu::launchkernel (c++ function)": [[2, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringE15KernelThunkTypePvNSt8uint64_tENSt8uint64_tERKNSt6vectorIPvEE"], [2, "_CPPv4N5cudaq3QPU12launchKernelERKNSt6stringERKNSt6vectorIPvEE"]], "cudaq::qpu::launchserializedcodeexecution (c++ function)": [[2, "_CPPv4N5cudaq3QPU29launchSerializedCodeExecutionERKNSt6stringERN5cudaq30SerializedCodeExecutionContextE"]], "cudaq::qpu::onrandomseedset (c++ function)": [[2, "_CPPv4N5cudaq3QPU15onRandomSeedSetENSt6size_tE"]], "cudaq::qpu::resetexecutioncontext (c++ function)": [[2, "_CPPv4N5cudaq3QPU21resetExecutionContextEv"]], "cudaq::qpu::setexecutioncontext (c++ function)": [[2, "_CPPv4N5cudaq3QPU19setExecutionContextEP16ExecutionContext"]], "cudaq::qpu::setid (c++ function)": [[2, "_CPPv4N5cudaq3QPU5setIdENSt6size_tE"]], "cudaq::qpu::setshots (c++ function)": [[2, "_CPPv4N5cudaq3QPU8setShotsEi"]], "cudaq::qpu::supportsconditionalfeedback (c++ function)": [[2, "_CPPv4N5cudaq3QPU27supportsConditionalFeedbackEv"]], "cudaq::qpu::~qpu (c++ function)": [[2, "_CPPv4N5cudaq3QPUD0Ev"]], "cudaq::querabaseqpu (c++ class)": [[2, "_CPPv4N5cudaq12QuEraBaseQPUE"]], "cudaq::quakevalue (c++ class)": [[2, "_CPPv4N5cudaq10QuakeValueE"]], "cudaq::quakevalue::quakevalue (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEN4mlir5ValueE"], [2, "_CPPv4N5cudaq10QuakeValue10QuakeValueERN4mlir20ImplicitLocOpBuilderEd"]], "cudaq::quakevalue::canvalidatenumelements (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue22canValidateNumElementsEv"]], "cudaq::quakevalue::constantsize (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue12constantSizeEv"]], "cudaq::quakevalue::dump (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue4dumpERNSt7ostreamE"], [2, "_CPPv4N5cudaq10QuakeValue4dumpEv"]], "cudaq::quakevalue::getrequiredelements (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue19getRequiredElementsEv"]], "cudaq::quakevalue::getvalue (c++ function)": [[2, "_CPPv4NK5cudaq10QuakeValue8getValueEv"]], "cudaq::quakevalue::inverse (c++ function)": [[2, "_CPPv4NK5cudaq10QuakeValue7inverseEv"]], "cudaq::quakevalue::isstdvec (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue8isStdVecEv"]], "cudaq::quakevalue::operator* (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValuemlE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValuemlEKd"]], "cudaq::quakevalue::operator+ (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValueplE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValueplEKd"], [2, "_CPPv4N5cudaq10QuakeValueplEKi"]], "cudaq::quakevalue::operator- (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValuemiE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValuemiEKd"], [2, "_CPPv4N5cudaq10QuakeValuemiEKi"], [2, "_CPPv4NK5cudaq10QuakeValuemiEv"]], "cudaq::quakevalue::operator/ (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValuedvE10QuakeValue"], [2, "_CPPv4N5cudaq10QuakeValuedvEKd"]], "cudaq::quakevalue::operator[] (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValueixEKNSt6size_tE"], [2, "_CPPv4N5cudaq10QuakeValueixERK10QuakeValue"]], "cudaq::quakevalue::size (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue4sizeEv"]], "cudaq::quakevalue::slice (c++ function)": [[2, "_CPPv4N5cudaq10QuakeValue5sliceEKNSt6size_tEKNSt6size_tE"]], "cudaq::quantumtask (c++ type)": [[2, "_CPPv4N5cudaq11QuantumTaskE"]], "cudaq::qubitconnectivity (c++ type)": [[2, "_CPPv4N5cudaq17QubitConnectivityE"]], "cudaq::qubitedge (c++ type)": [[2, "_CPPv4N5cudaq9QubitEdgeE"]], "cudaq::remotecapabilities (c++ struct)": [[2, "_CPPv4N5cudaq18RemoteCapabilitiesE"]], "cudaq::remotecapabilities::remotecapabilities (c++ function)": [[2, "_CPPv4N5cudaq18RemoteCapabilities18RemoteCapabilitiesEb"]], "cudaq::remotecapabilities::isremotesimulator (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities17isRemoteSimulatorE"]], "cudaq::remotecapabilities::serializedcodeexec (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities18serializedCodeExecE"]], "cudaq::remotecapabilities::stateoverlap (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities12stateOverlapE"]], "cudaq::remotecapabilities::vqe (c++ member)": [[2, "_CPPv4N5cudaq18RemoteCapabilities3vqeE"]], "cudaq::remotesimulationstate (c++ class)": [[2, "_CPPv4N5cudaq21RemoteSimulationStateE"]], "cudaq::resources (c++ class)": [[2, "_CPPv4N5cudaq9ResourcesE"]], "cudaq::serializedcodeexecutioncontext (c++ class)": [[2, "_CPPv4N5cudaq30SerializedCodeExecutionContextE"]], "cudaq::simulationstate (c++ class)": [[2, "_CPPv4N5cudaq15SimulationStateE"]], "cudaq::simulationstate::tensor (c++ struct)": [[2, "_CPPv4N5cudaq15SimulationState6TensorE"]], "cudaq::simulationstate::precision (c++ enum)": [[2, "_CPPv4N5cudaq15SimulationState9precisionE"]], "cudaq::simulationstate::precision::fp32 (c++ enumerator)": [[2, "_CPPv4N5cudaq15SimulationState9precision4fp32E"]], "cudaq::simulationstate::precision::fp64 (c++ enumerator)": [[2, "_CPPv4N5cudaq15SimulationState9precision4fp64E"]], "cudaq::tensorstatedata (c++ type)": [[2, "_CPPv4N5cudaq15TensorStateDataE"]], "cudaq::trace (c++ class)": [[2, "_CPPv4N5cudaq5TraceE"]], "cudaq::amplitude_damping_channel (c++ class)": [[2, "_CPPv4N5cudaq25amplitude_damping_channelE"]], "cudaq::async_result (c++ class)": [[2, "_CPPv4I0EN5cudaq12async_resultE"]], "cudaq::async_result::get (c++ function)": [[2, "_CPPv4N5cudaq12async_result3getEv"]], "cudaq::async_sample_result (c++ type)": [[2, "_CPPv4N5cudaq19async_sample_resultE"]], "cudaq::bit_flip_channel (c++ class)": [[2, "_CPPv4N5cudaq16bit_flip_channelE"]], "cudaq::complex (c++ type)": [[2, "_CPPv4N5cudaq7complexE"]], "cudaq::complex_matrix (c++ class)": [[2, "_CPPv4N5cudaq14complex_matrixE"]], "cudaq::complex_matrix::cols (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix4colsEv"]], "cudaq::complex_matrix::complex_matrix (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix14complex_matrixEKNSt6size_tEKNSt6size_tE"], [2, "_CPPv4N5cudaq14complex_matrix14complex_matrixEP10value_typeKNSt6size_tEKNSt6size_tE"]], "cudaq::complex_matrix::data (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix4dataEv"]], "cudaq::complex_matrix::dump (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix4dumpERNSt7ostreamE"], [2, "_CPPv4N5cudaq14complex_matrix4dumpEv"]], "cudaq::complex_matrix::eigenvalues (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix11eigenvaluesEv"]], "cudaq::complex_matrix::eigenvectors (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix12eigenvectorsEv"]], "cudaq::complex_matrix::minimal_eigenvalue (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix18minimal_eigenvalueEv"]], "cudaq::complex_matrix::operator() (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrixclENSt6size_tENSt6size_tE"]], "cudaq::complex_matrix::operator* (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrixmlER14complex_matrix"], [2, "_CPPv4NK5cudaq14complex_matrixmlERNSt6vectorI10value_typeEE"]], "cudaq::complex_matrix::rows (c++ function)": [[2, "_CPPv4NK5cudaq14complex_matrix4rowsEv"]], "cudaq::complex_matrix::set_zero (c++ function)": [[2, "_CPPv4N5cudaq14complex_matrix8set_zeroEv"]], "cudaq::complex_matrix::value_type (c++ type)": [[2, "_CPPv4N5cudaq14complex_matrix10value_typeE"]], "cudaq::depolarization_channel (c++ class)": [[2, "_CPPv4N5cudaq22depolarization_channelE"]], "cudaq::details (c++ type)": [[2, "_CPPv4N5cudaq7detailsE"]], "cudaq::details::kernelbuildertype (c++ class)": [[2, "_CPPv4N5cudaq7details17KernelBuilderTypeE"]], "cudaq::details::kernelbuildertype::kernelbuildertype (c++ function)": [[2, "_CPPv4N5cudaq7details17KernelBuilderType17KernelBuilderTypeERRNSt8functionIFN4mlir4TypeEPN4mlir11MLIRContextEEEE"]], "cudaq::details::kernelbuildertype::create (c++ function)": [[2, "_CPPv4N5cudaq7details17KernelBuilderType6createEPN4mlir11MLIRContextE"]], "cudaq::details::future (c++ class)": [[2, "_CPPv4N5cudaq7details6futureE"]], "cudaq::details::future::future (c++ function)": [[2, "_CPPv4N5cudaq7details6future6futureERNSt6vectorI3JobEERNSt6stringERNSt3mapINSt6stringENSt6stringEEE"], [2, "_CPPv4N5cudaq7details6future6futureERR6future"], [2, "_CPPv4N5cudaq7details6future6futureEv"]], "cudaq::details::kernel_builder_base (c++ class)": [[2, "_CPPv4N5cudaq7details19kernel_builder_baseE"]], "cudaq::details::kernel_builder_base::operator<< (c++ function)": [[2, "_CPPv4N5cudaq7details19kernel_builder_baselsERNSt7ostreamERK19kernel_builder_base"]], "cudaq::draw (c++ function)": [[2, "_CPPv4I0Dp0EN5cudaq4drawENSt6stringERR13QuantumKernelDpRR4Args"]], "cudaq::dyn (c++ member)": [[2, "_CPPv4N5cudaq3dynE"]], "cudaq::get_state (c++ function)": [[2, "_CPPv4I0DpEN5cudaq9get_stateEDaRR13QuantumKernelDpRR4Args"]], "cudaq::gradient (c++ class)": [[2, "_CPPv4N5cudaq8gradientE"]], "cudaq::gradient::clone (c++ function)": [[2, "_CPPv4N5cudaq8gradient5cloneEv"]], "cudaq::gradient::compute (c++ function)": [[2, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq8gradient7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradient::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq8gradient8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq8gradient8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq8gradient8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq8gradient8gradientEv"]], "cudaq::gradient::setargs (c++ function)": [[2, "_CPPv4I0DpEN5cudaq8gradient7setArgsEvR13QuantumKernelDpRR4Args"]], "cudaq::gradient::setkernel (c++ function)": [[2, "_CPPv4I0EN5cudaq8gradient9setKernelEvR13QuantumKernel"]], "cudaq::gradients::central_difference (c++ class)": [[2, "_CPPv4N5cudaq9gradients18central_differenceE"]], "cudaq::gradients::central_difference::clone (c++ function)": [[2, "_CPPv4N5cudaq9gradients18central_difference5cloneEv"]], "cudaq::gradients::central_difference::compute (c++ function)": [[2, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq9gradients18central_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradients::central_difference::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq9gradients18central_difference8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq9gradients18central_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq9gradients18central_difference8gradientEv"]], "cudaq::gradients::forward_difference (c++ class)": [[2, "_CPPv4N5cudaq9gradients18forward_differenceE"]], "cudaq::gradients::forward_difference::clone (c++ function)": [[2, "_CPPv4N5cudaq9gradients18forward_difference5cloneEv"]], "cudaq::gradients::forward_difference::compute (c++ function)": [[2, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq9gradients18forward_difference7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradients::forward_difference::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq9gradients18forward_difference8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq9gradients18forward_difference8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq9gradients18forward_difference8gradientEv"]], "cudaq::gradients::parameter_shift (c++ class)": [[2, "_CPPv4N5cudaq9gradients15parameter_shiftE"]], "cudaq::gradients::parameter_shift::clone (c++ function)": [[2, "_CPPv4N5cudaq9gradients15parameter_shift5cloneEv"]], "cudaq::gradients::parameter_shift::compute (c++ function)": [[2, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERKNSt8functionIFdNSt6vectorIdEEEEEd"], [2, "_CPPv4N5cudaq9gradients15parameter_shift7computeERKNSt6vectorIdEERNSt6vectorIdEERK7spin_opd"]], "cudaq::gradients::parameter_shift::gradient (c++ function)": [[2, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelT"], [2, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientER7KernelTRR10ArgsMapper"], [2, "_CPPv4I00EN5cudaq9gradients15parameter_shift8gradientERR13QuantumKernelRR10ArgsMapper"], [2, "_CPPv4N5cudaq9gradients15parameter_shift8gradientERRNSt8functionIFvNSt6vectorIdEEEEE"], [2, "_CPPv4N5cudaq9gradients15parameter_shift8gradientEv"]], "cudaq::kernel_builder (c++ class)": [[2, "_CPPv4IDpEN5cudaq14kernel_builderE"]], "cudaq::kernel_builder::constantval (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder11constantValEd"]], "cudaq::kernel_builder::getarguments (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder12getArgumentsEv"]], "cudaq::kernel_builder::getnumparams (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder12getNumParamsEv"]], "cudaq::kernel_builder::isargstdvec (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder11isArgStdVecENSt6size_tE"]], "cudaq::kernel_builder::kernel_builder (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder14kernel_builderERNSt6vectorIN7details17KernelBuilderTypeEEE"]], "cudaq::kernel_builder::name (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder4nameEv"]], "cudaq::kernel_builder::qalloc (c++ function)": [[2, "_CPPv4N5cudaq14kernel_builder6qallocE10QuakeValue"], [2, "_CPPv4N5cudaq14kernel_builder6qallocEKNSt6size_tE"], [2, "_CPPv4N5cudaq14kernel_builder6qallocERNSt6vectorINSt7complexIdEEEE"], [2, "_CPPv4N5cudaq14kernel_builder6qallocEv"]], "cudaq::kernel_builder::swap (c++ function)": [[2, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRK10QuakeValueRK10QuakeValueRK10QuakeValue"], [2, "_CPPv4I00EN5cudaq14kernel_builder4swapEvRKNSt6vectorI10QuakeValueEERK10QuakeValueRK10QuakeValue"], [2, "_CPPv4N5cudaq14kernel_builder4swapERK10QuakeValueRK10QuakeValue"]], "cudaq::kraus_channel (c++ class)": [[2, "_CPPv4N5cudaq13kraus_channelE"]], "cudaq::kraus_channel::empty (c++ function)": [[2, "_CPPv4NK5cudaq13kraus_channel5emptyEv"]], "cudaq::kraus_channel::get_ops (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channel7get_opsEv"]], "cudaq::kraus_channel::kraus_channel (c++ function)": [[2, "_CPPv4IDpEN5cudaq13kraus_channel13kraus_channelEDpRRNSt16initializer_listI1TEE"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelERK13kraus_channel"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelERKNSt6vectorI8kraus_opEE"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelERRNSt6vectorI8kraus_opEE"], [2, "_CPPv4N5cudaq13kraus_channel13kraus_channelEv"]], "cudaq::kraus_channel::noise_type (c++ member)": [[2, "_CPPv4N5cudaq13kraus_channel10noise_typeE"]], "cudaq::kraus_channel::operator= (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channelaSERK13kraus_channel"]], "cudaq::kraus_channel::operator[] (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channelixEKNSt6size_tE"]], "cudaq::kraus_channel::parameters (c++ member)": [[2, "_CPPv4N5cudaq13kraus_channel10parametersE"]], "cudaq::kraus_channel::push_back (c++ function)": [[2, "_CPPv4N5cudaq13kraus_channel9push_backE8kraus_op"]], "cudaq::kraus_channel::size (c++ function)": [[2, "_CPPv4NK5cudaq13kraus_channel4sizeEv"]], "cudaq::kraus_op (c++ struct)": [[2, "_CPPv4N5cudaq8kraus_opE"]], "cudaq::kraus_op::adjoint (c++ function)": [[2, "_CPPv4NK5cudaq8kraus_op7adjointEv"]], "cudaq::kraus_op::data (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op4dataE"]], "cudaq::kraus_op::kraus_op (c++ function)": [[2, "_CPPv4I0EN5cudaq8kraus_op8kraus_opERRNSt16initializer_listI1TEE"], [2, "_CPPv4N5cudaq8kraus_op8kraus_opENSt6vectorIN5cudaq7complexEEE"], [2, "_CPPv4N5cudaq8kraus_op8kraus_opERK8kraus_op"]], "cudaq::kraus_op::ncols (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op5nColsE"]], "cudaq::kraus_op::nrows (c++ member)": [[2, "_CPPv4N5cudaq8kraus_op5nRowsE"]], "cudaq::kraus_op::operator= (c++ function)": [[2, "_CPPv4N5cudaq8kraus_opaSERK8kraus_op"]], "cudaq::mpi (c++ type)": [[2, "_CPPv4N5cudaq3mpiE"]], "cudaq::mpi::all_gather (c++ function)": [[2, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIdEERKNSt6vectorIdEE"], [2, "_CPPv4N5cudaq3mpi10all_gatherERNSt6vectorIiEERKNSt6vectorIiEE"]], "cudaq::mpi::all_reduce (c++ function)": [[2, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK14BinaryFunction"], [2, "_CPPv4I00EN5cudaq3mpi10all_reduceE1TRK1TRK4Func"]], "cudaq::mpi::broadcast (c++ function)": [[2, "_CPPv4N5cudaq3mpi9broadcastERNSt6stringEi"], [2, "_CPPv4N5cudaq3mpi9broadcastERNSt6vectorIdEEi"]], "cudaq::mpi::finalize (c++ function)": [[2, "_CPPv4N5cudaq3mpi8finalizeEv"]], "cudaq::mpi::initialize (c++ function)": [[2, "_CPPv4N5cudaq3mpi10initializeEiPPc"], [2, "_CPPv4N5cudaq3mpi10initializeEv"]], "cudaq::mpi::is_initialized (c++ function)": [[2, "_CPPv4N5cudaq3mpi14is_initializedEv"]], "cudaq::mpi::num_ranks (c++ function)": [[2, "_CPPv4N5cudaq3mpi9num_ranksEv"]], "cudaq::mpi::rank (c++ function)": [[2, "_CPPv4N5cudaq3mpi4rankEv"]], "cudaq::noise_model (c++ class)": [[2, "_CPPv4N5cudaq11noise_modelE"]], "cudaq::noise_model::predicatefuncty (c++ type)": [[2, "_CPPv4N5cudaq11noise_model15PredicateFuncTyE"]], "cudaq::noise_model::add_all_qubit_channel (c++ function)": [[2, "_CPPv4IDpEN5cudaq11noise_model21add_all_qubit_channelEvRK13kraus_channeli"], [2, "_CPPv4N5cudaq11noise_model21add_all_qubit_channelERKNSt6stringERK13kraus_channeli"]], "cudaq::noise_model::add_channel (c++ function)": [[2, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRK15PredicateFuncTy"], [2, "_CPPv4IDpEN5cudaq11noise_model11add_channelEvRKNSt6vectorINSt6size_tEEERK13kraus_channel"], [2, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERK15PredicateFuncTy"], [2, "_CPPv4N5cudaq11noise_model11add_channelERKNSt6stringERKNSt6vectorINSt6size_tEEERK13kraus_channel"]], "cudaq::noise_model::empty (c++ function)": [[2, "_CPPv4NK5cudaq11noise_model5emptyEv"]], "cudaq::noise_model::get_channels (c++ function)": [[2, "_CPPv4I0ENK5cudaq11noise_model12get_channelsENSt6vectorI13kraus_channelEERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE"], [2, "_CPPv4NK5cudaq11noise_model12get_channelsERKNSt6stringERKNSt6vectorINSt6size_tEEERKNSt6vectorINSt6size_tEEERKNSt6vectorIdEE"]], "cudaq::noise_model::noise_model (c++ function)": [[2, "_CPPv4N5cudaq11noise_model11noise_modelEv"]], "cudaq::noise_model_type (c++ enum)": [[2, "_CPPv4N5cudaq16noise_model_typeE"]], "cudaq::noise_model_type::amplitude_damping_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type25amplitude_damping_channelE"]], "cudaq::noise_model_type::bit_flip_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type16bit_flip_channelE"]], "cudaq::noise_model_type::depolarization_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type22depolarization_channelE"]], "cudaq::noise_model_type::phase_flip_channel (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type18phase_flip_channelE"]], "cudaq::noise_model_type::unknown (c++ enumerator)": [[2, "_CPPv4N5cudaq16noise_model_type7unknownE"]], "cudaq::num_available_gpus (c++ function)": [[2, "_CPPv4N5cudaq18num_available_gpusEv"]], "cudaq::observe (c++ function)": [[2, "_CPPv4I00Dp0EN5cudaq7observeENSt6vectorI14observe_resultEERR13QuantumKernelRK15SpinOpContainerDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultNSt6size_tERR13QuantumKernel7spin_opDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRK15observe_optionsRR13QuantumKernel7spin_opDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq7observeE14observe_resultRR13QuantumKernel7spin_opDpRR4Args"]], "cudaq::observe_options (c++ struct)": [[2, "_CPPv4N5cudaq15observe_optionsE"]], "cudaq::observe_result (c++ class)": [[2, "_CPPv4N5cudaq14observe_resultE"]], "cudaq::observe_result::counts (c++ function)": [[2, "_CPPv4I0EN5cudaq14observe_result6countsE13sample_result10SpinOpType"]], "cudaq::observe_result::dump (c++ function)": [[2, "_CPPv4N5cudaq14observe_result4dumpEv"]], "cudaq::observe_result::expectation (c++ function)": [[2, "_CPPv4I0EN5cudaq14observe_result11expectationEd10SpinOpType"], [2, "_CPPv4N5cudaq14observe_result11expectationEv"]], "cudaq::observe_result::id_coefficient (c++ function)": [[2, "_CPPv4N5cudaq14observe_result14id_coefficientEv"]], "cudaq::observe_result::observe_result (c++ function)": [[2, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op"], [2, "_CPPv4N5cudaq14observe_result14observe_resultEdRK7spin_op13sample_result"]], "cudaq::observe_result::operator double (c++ function)": [[2, "_CPPv4N5cudaq14observe_resultcvdEv"]], "cudaq::observe_result::raw_data (c++ function)": [[2, "_CPPv4N5cudaq14observe_result8raw_dataEv"]], "cudaq::optimizable_function (c++ class)": [[2, "_CPPv4N5cudaq20optimizable_functionE"]], "cudaq::optimization_result (c++ type)": [[2, "_CPPv4N5cudaq19optimization_resultE"]], "cudaq::optimizer (c++ class)": [[2, "_CPPv4N5cudaq9optimizerE"]], "cudaq::optimizer::optimize (c++ function)": [[2, "_CPPv4N5cudaq9optimizer8optimizeEKiRR20optimizable_function"]], "cudaq::optimizer::requiresgradients (c++ function)": [[2, "_CPPv4N5cudaq9optimizer17requiresGradientsEv"]], "cudaq::orca (c++ type)": [[2, "_CPPv4N5cudaq4orcaE"]], "cudaq::orca::sample (c++ function)": [[2, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE"], [2, "_CPPv4N5cudaq4orca6sampleERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE"]], "cudaq::orca::sample_async (c++ function)": [[2, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEERNSt6vectorIdEEiNSt6size_tE"], [2, "_CPPv4N5cudaq4orca12sample_asyncERNSt6vectorINSt6size_tEEERNSt6vectorINSt6size_tEEERNSt6vectorIdEEiNSt6size_tE"]], "cudaq::phase_flip_channel (c++ class)": [[2, "_CPPv4N5cudaq18phase_flip_channelE"]], "cudaq::qreg (c++ class)": [[2, "_CPPv4I_NSt6size_tE_NSt6size_tE0EN5cudaq4qregE"]], "cudaq::qreg::back (c++ function)": [[2, "_CPPv4N5cudaq4qreg4backENSt6size_tE"], [2, "_CPPv4N5cudaq4qreg4backEv"]], "cudaq::qreg::begin (c++ function)": [[2, "_CPPv4N5cudaq4qreg5beginEv"]], "cudaq::qreg::clear (c++ function)": [[2, "_CPPv4N5cudaq4qreg5clearEv"]], "cudaq::qreg::front (c++ function)": [[2, "_CPPv4N5cudaq4qreg5frontENSt6size_tE"], [2, "_CPPv4N5cudaq4qreg5frontEv"]], "cudaq::qreg::operator[] (c++ function)": [[2, "_CPPv4N5cudaq4qregixEKNSt6size_tE"]], "cudaq::qreg::size (c++ function)": [[2, "_CPPv4NK5cudaq4qreg4sizeEv"]], "cudaq::qreg::slice (c++ function)": [[2, "_CPPv4N5cudaq4qreg5sliceENSt6size_tENSt6size_tE"]], "cudaq::qreg::value_type (c++ type)": [[2, "_CPPv4N5cudaq4qreg10value_typeE"]], "cudaq::qspan (c++ class)": [[2, "_CPPv4I_NSt6size_tE_NSt6size_tEEN5cudaq5qspanE"]], "cudaq::quantum_platform (c++ class)": [[2, "_CPPv4N5cudaq16quantum_platformE"]], "cudaq::quantum_platform::clear_shots (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform11clear_shotsEv"]], "cudaq::quantum_platform::connectivity (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12connectivityEv"]], "cudaq::quantum_platform::enqueueasynctask (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tER19KernelExecutionTask"], [2, "_CPPv4N5cudaq16quantum_platform16enqueueAsyncTaskEKNSt6size_tERNSt8functionIFvvEEE"]], "cudaq::quantum_platform::getlogstream (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12getLogStreamEv"]], "cudaq::quantum_platform::get_current_qpu (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform15get_current_qpuEv"]], "cudaq::quantum_platform::get_exec_ctx (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform12get_exec_ctxEv"]], "cudaq::quantum_platform::get_num_qubits (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsENSt6size_tE"], [2, "_CPPv4N5cudaq16quantum_platform14get_num_qubitsEv"]], "cudaq::quantum_platform::get_remote_capabilities (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform23get_remote_capabilitiesEKNSt6size_tE"]], "cudaq::quantum_platform::get_shots (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9get_shotsEv"]], "cudaq::quantum_platform::is_emulated (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform11is_emulatedEKNSt6size_tE"]], "cudaq::quantum_platform::is_remote (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9is_remoteEKNSt6size_tE"]], "cudaq::quantum_platform::is_simulator (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform12is_simulatorEKNSt6size_tE"]], "cudaq::quantum_platform::launchvqe (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9launchVQEEKNSt6stringEPKvPN5cudaq8gradientEN5cudaq7spin_opERN5cudaq9optimizerEKiKNSt6size_tE"]], "cudaq::quantum_platform::list_platforms (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14list_platformsEv"]], "cudaq::quantum_platform::name (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform4nameEv"]], "cudaq::quantum_platform::num_qpus (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform8num_qpusEv"]], "cudaq::quantum_platform::onrandomseedset (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform15onRandomSeedSetENSt6size_tE"]], "cudaq::quantum_platform::resetlogstream (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14resetLogStreamEv"]], "cudaq::quantum_platform::reset_exec_ctx (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform14reset_exec_ctxENSt6size_tE"]], "cudaq::quantum_platform::reset_noise (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform11reset_noiseEv"]], "cudaq::quantum_platform::setlogstream (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12setLogStreamERNSt7ostreamE"]], "cudaq::quantum_platform::settargetbackend (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform16setTargetBackendERKNSt6stringE"]], "cudaq::quantum_platform::set_current_qpu (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform15set_current_qpuEKNSt6size_tE"]], "cudaq::quantum_platform::set_exec_ctx (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform12set_exec_ctxEPN5cudaq16ExecutionContextENSt6size_tE"]], "cudaq::quantum_platform::set_noise (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9set_noiseEPK11noise_model"]], "cudaq::quantum_platform::set_shots (c++ function)": [[2, "_CPPv4N5cudaq16quantum_platform9set_shotsEi"]], "cudaq::quantum_platform::supports_conditional_feedback (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform29supports_conditional_feedbackEKNSt6size_tE"]], "cudaq::quantum_platform::supports_task_distribution (c++ function)": [[2, "_CPPv4NK5cudaq16quantum_platform26supports_task_distributionEv"]], "cudaq::qubit (c++ type)": [[2, "_CPPv4N5cudaq5qubitE"]], "cudaq::qudit (c++ class)": [[2, "_CPPv4I_NSt6size_tEEN5cudaq5quditE"]], "cudaq::qudit::qudit (c++ function)": [[2, "_CPPv4N5cudaq5qudit5quditEv"]], "cudaq::qvector (c++ class)": [[2, "_CPPv4I_NSt6size_tEEN5cudaq7qvectorE"]], "cudaq::qvector::back (c++ function)": [[2, "_CPPv4N5cudaq7qvector4backENSt6size_tE"], [2, "_CPPv4N5cudaq7qvector4backEv"]], "cudaq::qvector::begin (c++ function)": [[2, "_CPPv4N5cudaq7qvector5beginEv"]], "cudaq::qvector::clear (c++ function)": [[2, "_CPPv4N5cudaq7qvector5clearEv"]], "cudaq::qvector::end (c++ function)": [[2, "_CPPv4N5cudaq7qvector3endEv"]], "cudaq::qvector::front (c++ function)": [[2, "_CPPv4N5cudaq7qvector5frontENSt6size_tE"], [2, "_CPPv4N5cudaq7qvector5frontEv"]], "cudaq::qvector::operator= (c++ function)": [[2, "_CPPv4N5cudaq7qvectoraSERK7qvector"]], "cudaq::qvector::operator[] (c++ function)": [[2, "_CPPv4N5cudaq7qvectorixEKNSt6size_tE"]], "cudaq::qvector::qvector (c++ function)": [[2, "_CPPv4N5cudaq7qvector7qvectorENSt6size_tE"], [2, "_CPPv4N5cudaq7qvector7qvectorERK5state"], [2, "_CPPv4N5cudaq7qvector7qvectorERK7qvector"], [2, "_CPPv4N5cudaq7qvector7qvectorERKNSt6vectorI7complexEEb"], [2, "_CPPv4N5cudaq7qvector7qvectorERR7qvector"]], "cudaq::qvector::size (c++ function)": [[2, "_CPPv4NK5cudaq7qvector4sizeEv"]], "cudaq::qvector::slice (c++ function)": [[2, "_CPPv4N5cudaq7qvector5sliceENSt6size_tENSt6size_tE"]], "cudaq::qvector::value_type (c++ type)": [[2, "_CPPv4N5cudaq7qvector10value_typeE"]], "cudaq::qview (c++ class)": [[2, "_CPPv4I_NSt6size_tEEN5cudaq5qviewE"]], "cudaq::qview::value_type (c++ type)": [[2, "_CPPv4N5cudaq5qview10value_typeE"]], "cudaq::range (c++ function)": [[2, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType"], [2, "_CPPv4I00EN5cudaq5rangeENSt6vectorI11ElementTypeEE11ElementType11ElementType11ElementType"], [2, "_CPPv4N5cudaq5rangeENSt6size_tE"]], "cudaq::real (c++ type)": [[2, "_CPPv4N5cudaq4realE"]], "cudaq::registry (c++ type)": [[2, "_CPPv4N5cudaq8registryE"]], "cudaq::registry::registeredtype (c++ class)": [[2, "_CPPv4I0EN5cudaq8registry14RegisteredTypeE"]], "cudaq::sample (c++ function)": [[2, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRK14sample_optionsRR13QuantumKernelDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq6sampleE13sample_resultRR13QuantumKernelDpRR4Args"], [2, "_CPPv4I0Dp0EN5cudaq6sampleEDaNSt6size_tERR13QuantumKernelDpRR4Args"]], "cudaq::sample_options (c++ struct)": [[2, "_CPPv4N5cudaq14sample_optionsE"]], "cudaq::sample_result (c++ class)": [[2, "_CPPv4N5cudaq13sample_resultE"]], "cudaq::sample_result::append (c++ function)": [[2, "_CPPv4N5cudaq13sample_result6appendER15ExecutionResult"]], "cudaq::sample_result::begin (c++ function)": [[2, "_CPPv4N5cudaq13sample_result5beginEv"], [2, "_CPPv4NK5cudaq13sample_result5beginEv"]], "cudaq::sample_result::cbegin (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result6cbeginEv"]], "cudaq::sample_result::cend (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result4cendEv"]], "cudaq::sample_result::clear (c++ function)": [[2, "_CPPv4N5cudaq13sample_result5clearEv"]], "cudaq::sample_result::count (c++ function)": [[2, "_CPPv4N5cudaq13sample_result5countENSt11string_viewEKNSt11string_viewE"]], "cudaq::sample_result::deserialize (c++ function)": [[2, "_CPPv4N5cudaq13sample_result11deserializeERNSt6vectorINSt6size_tEEE"]], "cudaq::sample_result::dump (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result4dumpERNSt7ostreamE"], [2, "_CPPv4NK5cudaq13sample_result4dumpEv"]], "cudaq::sample_result::end (c++ function)": [[2, "_CPPv4N5cudaq13sample_result3endEv"], [2, "_CPPv4NK5cudaq13sample_result3endEv"]], "cudaq::sample_result::exp_val_z (c++ function)": [[2, "_CPPv4N5cudaq13sample_result9exp_val_zEKNSt11string_viewE"]], "cudaq::sample_result::expectation (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result11expectationEKNSt11string_viewE"]], "cudaq::sample_result::get_marginal (c++ function)": [[2, "_CPPv4N5cudaq13sample_result12get_marginalERKNSt6vectorINSt6size_tEEEKNSt11string_viewE"], [2, "_CPPv4N5cudaq13sample_result12get_marginalERRKNSt6vectorINSt6size_tEEEKNSt11string_viewE"]], "cudaq::sample_result::has_even_parity (c++ function)": [[2, "_CPPv4N5cudaq13sample_result15has_even_parityENSt11string_viewE"]], "cudaq::sample_result::has_expectation (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result15has_expectationEKNSt11string_viewE"]], "cudaq::sample_result::most_probable (c++ function)": [[2, "_CPPv4N5cudaq13sample_result13most_probableEKNSt11string_viewE"]], "cudaq::sample_result::operator+= (c++ function)": [[2, "_CPPv4N5cudaq13sample_resultpLERK13sample_result"]], "cudaq::sample_result::operator= (c++ function)": [[2, "_CPPv4N5cudaq13sample_resultaSER13sample_result"]], "cudaq::sample_result::operator== (c++ function)": [[2, "_CPPv4NK5cudaq13sample_resulteqERK13sample_result"]], "cudaq::sample_result::probability (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result11probabilityENSt11string_viewEKNSt11string_viewE"]], "cudaq::sample_result::register_names (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result14register_namesEv"]], "cudaq::sample_result::reorder (c++ function)": [[2, "_CPPv4N5cudaq13sample_result7reorderERKNSt6vectorINSt6size_tEEEKNSt11string_viewE"]], "cudaq::sample_result::sample_result (c++ function)": [[2, "_CPPv4N5cudaq13sample_result13sample_resultER15ExecutionResult"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERK13sample_result"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERNSt6vectorI15ExecutionResultEE"], [2, "_CPPv4N5cudaq13sample_result13sample_resultERR15ExecutionResult"], [2, "_CPPv4N5cudaq13sample_result13sample_resultEdRNSt6vectorI15ExecutionResultEE"], [2, "_CPPv4N5cudaq13sample_result13sample_resultEv"]], "cudaq::sample_result::serialize (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result9serializeEv"]], "cudaq::sample_result::size (c++ function)": [[2, "_CPPv4N5cudaq13sample_result4sizeEKNSt11string_viewE"]], "cudaq::sample_result::to_map (c++ function)": [[2, "_CPPv4NK5cudaq13sample_result6to_mapEKNSt11string_viewE"]], "cudaq::sample_result::~sample_result (c++ function)": [[2, "_CPPv4N5cudaq13sample_resultD0Ev"]], "cudaq::set_noise (c++ function)": [[2, "_CPPv4N5cudaq9set_noiseERKN5cudaq11noise_modelE"]], "cudaq::set_random_seed (c++ function)": [[2, "_CPPv4N5cudaq15set_random_seedENSt6size_tE"]], "cudaq::simulation_precision (c++ enum)": [[2, "_CPPv4N5cudaq20simulation_precisionE"]], "cudaq::simulation_precision::fp32 (c++ enumerator)": [[2, "_CPPv4N5cudaq20simulation_precision4fp32E"]], "cudaq::simulation_precision::fp64 (c++ enumerator)": [[2, "_CPPv4N5cudaq20simulation_precision4fp64E"]], "cudaq::spin_op (c++ class)": [[2, "_CPPv4N5cudaq7spin_opE"]], "cudaq::spin_op::begin (c++ function)": [[2, "_CPPv4N5cudaq7spin_op5beginEv"], [2, "_CPPv4NK5cudaq7spin_op5beginEv"]], "cudaq::spin_op::csr_spmatrix (c++ type)": [[2, "_CPPv4N5cudaq7spin_op12csr_spmatrixE"]], "cudaq::spin_op::distribute_terms (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op16distribute_termsENSt6size_tE"]], "cudaq::spin_op::dump (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op4dumpEv"]], "cudaq::spin_op::end (c++ function)": [[2, "_CPPv4N5cudaq7spin_op3endEv"], [2, "_CPPv4NK5cudaq7spin_op3endEv"]], "cudaq::spin_op::for_each_pauli (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op14for_each_pauliERRNSt8functionIFv5pauliNSt6size_tEEEE"]], "cudaq::spin_op::for_each_term (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op13for_each_termERRNSt8functionIFvR7spin_opEEE"]], "cudaq::spin_op::from_word (c++ function)": [[2, "_CPPv4N5cudaq7spin_op9from_wordERKNSt6stringE"]], "cudaq::spin_op::getdatarepresentation (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op21getDataRepresentationEv"]], "cudaq::spin_op::getdatatuple (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op12getDataTupleEv"]], "cudaq::spin_op::get_coefficient (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op15get_coefficientEv"]], "cudaq::spin_op::get_raw_data (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op12get_raw_dataEv"]], "cudaq::spin_op::is_identity (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op11is_identityEv"]], "cudaq::spin_op::iterator (c++ struct)": [[2, "_CPPv4I0EN5cudaq7spin_op8iteratorE"]], "cudaq::spin_op::num_qubits (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op10num_qubitsEv"]], "cudaq::spin_op::num_terms (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op9num_termsEv"]], "cudaq::spin_op::operator*= (c++ function)": [[2, "_CPPv4N5cudaq7spin_opmLEKNSt7complexIdEE"], [2, "_CPPv4N5cudaq7spin_opmLEKd"], [2, "_CPPv4N5cudaq7spin_opmLERK7spin_op"]], "cudaq::spin_op::operator+= (c++ function)": [[2, "_CPPv4N5cudaq7spin_oppLERK7spin_op"]], "cudaq::spin_op::operator-= (c++ function)": [[2, "_CPPv4N5cudaq7spin_opmIERK7spin_op"]], "cudaq::spin_op::operator= (c++ function)": [[2, "_CPPv4N5cudaq7spin_opaSERK7spin_op"]], "cudaq::spin_op::operator== (c++ function)": [[2, "_CPPv4NK5cudaq7spin_opeqERK7spin_op"]], "cudaq::spin_op::random (c++ function)": [[2, "_CPPv4N5cudaq7spin_op6randomENSt6size_tENSt6size_tEj"]], "cudaq::spin_op::spin_op (c++ function)": [[2, "_CPPv4N5cudaq7spin_op7spin_opE5pauliKNSt6size_tENSt7complexIdEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opENSt6size_tE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERK12spin_op_termRKNSt7complexIdEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERK7spin_op"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt13unordered_mapI12spin_op_termNSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt4pairIK12spin_op_termNSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorI12spin_op_termEERKNSt6vectorINSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERKNSt6vectorIdEENSt6size_tE"], [2, "_CPPv4N5cudaq7spin_op7spin_opERNSt4pairIK12spin_op_termNSt7complexIdEEEE"], [2, "_CPPv4N5cudaq7spin_op7spin_opEv"]], "cudaq::spin_op::spin_op_term (c++ type)": [[2, "_CPPv4N5cudaq7spin_op12spin_op_termE"]], "cudaq::spin_op::to_matrix (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op9to_matrixEv"]], "cudaq::spin_op::to_sparse_matrix (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op16to_sparse_matrixEv"]], "cudaq::spin_op::to_string (c++ function)": [[2, "_CPPv4NK5cudaq7spin_op9to_stringEb"]], "cudaq::spin_op::~spin_op (c++ function)": [[2, "_CPPv4N5cudaq7spin_opD0Ev"]], "cudaq::state (c++ class)": [[2, "_CPPv4N5cudaq5stateE"]], "cudaq::state::amplitude (c++ function)": [[2, "_CPPv4N5cudaq5state9amplitudeERKNSt6vectorIiEE"]], "cudaq::state::amplitudes (c++ function)": [[2, "_CPPv4N5cudaq5state10amplitudesERKNSt6vectorINSt6vectorIiEEEE"]], "cudaq::state::dump (c++ function)": [[2, "_CPPv4NK5cudaq5state4dumpERNSt7ostreamE"], [2, "_CPPv4NK5cudaq5state4dumpEv"]], "cudaq::state::from_data (c++ function)": [[2, "_CPPv4N5cudaq5state9from_dataERK10state_data"]], "cudaq::state::get_num_qubits (c++ function)": [[2, "_CPPv4NK5cudaq5state14get_num_qubitsEv"]], "cudaq::state::get_num_tensors (c++ function)": [[2, "_CPPv4NK5cudaq5state15get_num_tensorsEv"]], "cudaq::state::get_precision (c++ function)": [[2, "_CPPv4NK5cudaq5state13get_precisionEv"]], "cudaq::state::get_tensor (c++ function)": [[2, "_CPPv4NK5cudaq5state10get_tensorENSt6size_tE"]], "cudaq::state::get_tensors (c++ function)": [[2, "_CPPv4NK5cudaq5state11get_tensorsEv"]], "cudaq::state::is_on_gpu (c++ function)": [[2, "_CPPv4NK5cudaq5state9is_on_gpuEv"]], "cudaq::state::operator() (c++ function)": [[2, "_CPPv4NK5cudaq5stateclENSt6size_tENSt6size_tE"], [2, "_CPPv4NK5cudaq5stateclERKNSt16initializer_listINSt6size_tEEENSt6size_tE"]], "cudaq::state::operator= (c++ function)": [[2, "_CPPv4N5cudaq5stateaSERR5state"]], "cudaq::state::operator[] (c++ function)": [[2, "_CPPv4NK5cudaq5stateixENSt6size_tE"]], "cudaq::state::overlap (c++ function)": [[2, "_CPPv4N5cudaq5state7overlapERK5state"]], "cudaq::state::state (c++ function)": [[2, "_CPPv4N5cudaq5state5stateEP15SimulationState"], [2, "_CPPv4N5cudaq5state5stateERK5state"]], "cudaq::state::to_host (c++ function)": [[2, "_CPPv4I0ENK5cudaq5state7to_hostEvPNSt7complexI10ScalarTypeEENSt6size_tE"]], "cudaq::state_data (c++ type)": [[2, "_CPPv4N5cudaq10state_dataE"]], "cudaq::tensor (c++ type)": [[2, "_CPPv4N5cudaq6tensorE"]], "cudaq::unset_noise (c++ function)": [[2, "_CPPv4N5cudaq11unset_noiseEv"]], "nvqir::mpssimulationstate (c++ class)": [[2, "_CPPv4N5nvqir18MPSSimulationStateE"]], "nvqir::tensornetsimulationstate (c++ class)": [[2, "_CPPv4N5nvqir24TensorNetSimulationStateE"]], "amplitudedampingchannel (class in cudaq)": [[3, "cudaq.AmplitudeDampingChannel"]], "asyncevolveresult (class in cudaq)": [[3, "cudaq.AsyncEvolveResult"]], "asyncobserveresult (class in cudaq)": [[3, "cudaq.AsyncObserveResult"]], "asyncsampleresult (class in cudaq)": [[3, "cudaq.AsyncSampleResult"]], "asyncstateresult (class in cudaq)": [[3, "cudaq.AsyncStateResult"]], "baseintegrator (class in cudaq.operator.integrator)": [[3, "cudaq.operator.integrator.BaseIntegrator"]], "bitflipchannel (class in cudaq)": [[3, "cudaq.BitFlipChannel"]], "cobyla (class in cudaq.optimizers)": [[3, "cudaq.optimizers.COBYLA"]], "centraldifference (class in cudaq.gradients)": [[3, "cudaq.gradients.CentralDifference"]], "complexmatrix (class in cudaq)": [[3, "cudaq.ComplexMatrix"]], "cudensitymatstate (class in cudaq.operator.cudm_state)": [[3, "cudaq.operator.cudm_state.CuDensityMatState"]], "depolarizationchannel (class in cudaq)": [[3, "cudaq.DepolarizationChannel"]], "elementaryoperator (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.ElementaryOperator"]], "evolveresult (class in cudaq)": [[3, "cudaq.EvolveResult"]], "forwarddifference (class in cudaq.gradients)": [[3, "cudaq.gradients.ForwardDifference"]], "gradientdescent (class in cudaq.optimizers)": [[3, "cudaq.optimizers.GradientDescent"]], "kernel (in module cudaq)": [[3, "cudaq.Kernel"]], "krauschannel (class in cudaq)": [[3, "cudaq.KrausChannel"]], "krausoperator (class in cudaq)": [[3, "cudaq.KrausOperator"]], "lbfgs (class in cudaq.optimizers)": [[3, "cudaq.optimizers.LBFGS"]], "neldermead (class in cudaq.optimizers)": [[3, "cudaq.optimizers.NelderMead"]], "noisemodel (class in cudaq)": [[3, "cudaq.NoiseModel"]], "observeresult (class in cudaq)": [[3, "cudaq.ObserveResult"]], "operatorsum (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.OperatorSum"]], "optimizationresult (class in cudaq)": [[3, "cudaq.OptimizationResult"]], "parametershift (class in cudaq.gradients)": [[3, "cudaq.gradients.ParameterShift"]], "phaseflipchannel (class in cudaq)": [[3, "cudaq.PhaseFlipChannel"]], "productoperator (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.ProductOperator"]], "pykernel (class in cudaq)": [[3, "cudaq.PyKernel"]], "pykerneldecorator (class in cudaq)": [[3, "cudaq.PyKernelDecorator"]], "quakevalue (class in cudaq)": [[3, "cudaq.QuakeValue"]], "rydberghamiltonian (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.RydbergHamiltonian"]], "sampleresult (class in cudaq)": [[3, "cudaq.SampleResult"]], "scalaroperator (class in cudaq.operator.expressions)": [[3, "cudaq.operator.expressions.ScalarOperator"]], "schedule (class in cudaq)": [[3, "cudaq.Schedule"]], "simulationprecision (class in cudaq)": [[3, "cudaq.SimulationPrecision"]], "spinoperator (class in cudaq)": [[3, "cudaq.SpinOperator"]], "spinoperator (class in cudaq.operator.definitions)": [[3, "cudaq.operator.definitions.SpinOperator"]], "state (class in cudaq)": [[3, "cudaq.State"]], "target (class in cudaq)": [[3, "cudaq.Target"]], "tensor (class in cudaq)": [[3, "cudaq.Tensor"]], "__add__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__add__"]], "__call__() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.__call__"]], "__getitem__() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.__getitem__"]], "__getitem__() (cudaq.krauschannel method)": [[3, "cudaq.KrausChannel.__getitem__"]], "__getitem__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__getitem__"]], "__getitem__() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.__getitem__"]], "__init__() (cudaq.amplitudedampingchannel method)": [[3, "cudaq.AmplitudeDampingChannel.__init__"]], "__init__() (cudaq.bitflipchannel method)": [[3, "cudaq.BitFlipChannel.__init__"]], "__init__() (cudaq.depolarizationchannel method)": [[3, "cudaq.DepolarizationChannel.__init__"]], "__init__() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.__init__"]], "__init__() (cudaq.phaseflipchannel method)": [[3, "cudaq.PhaseFlipChannel.__init__"]], "__init__() (cudaq.operator.expressions.rydberghamiltonian method)": [[3, "cudaq.operator.expressions.RydbergHamiltonian.__init__"]], "__iter__() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.__iter__"]], "__len__() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.__len__"]], "__mul__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__mul__"]], "__neg__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__neg__"]], "__radd__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__radd__"]], "__rmul__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__rmul__"]], "__rsub__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__rsub__"]], "__str__() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.__str__"]], "__str__() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.__str__"]], "__sub__() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.__sub__"]], "add_all_qubit_channel() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.add_all_qubit_channel"]], "add_channel() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.add_channel"]], "all_gather() (in module cudaq.mpi)": [[3, "cudaq.mpi.all_gather"]], "amplitude() (cudaq.state method)": [[3, "cudaq.State.amplitude"]], "amplitudes() (cudaq.state method)": [[3, "cudaq.State.amplitudes"]], "append() (cudaq.krauschannel method)": [[3, "cudaq.KrausChannel.append"]], "argument_count (cudaq.pykernel attribute)": [[3, "cudaq.PyKernel.argument_count"]], "arguments (cudaq.pykernel attribute)": [[3, "cudaq.PyKernel.arguments"]], "broadcast() (in module cudaq.mpi)": [[3, "cudaq.mpi.broadcast"]], "clear() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.clear"]], "col_count (cudaq.krausoperator property)": [[3, "cudaq.KrausOperator.col_count"]], "compile() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.compile"]], "compute() (cudaq.gradients.centraldifference method)": [[3, "cudaq.gradients.CentralDifference.compute"]], "compute() (cudaq.gradients.forwarddifference method)": [[3, "cudaq.gradients.ForwardDifference.compute"]], "compute() (cudaq.gradients.parametershift method)": [[3, "cudaq.gradients.ParameterShift.compute"]], "count() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.count"]], "counts() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.counts"]], "cudaq": [[3, "module-cudaq"]], "define() (cudaq.operator.expressions.elementaryoperator class method)": [[3, "cudaq.operator.expressions.ElementaryOperator.define"]], "description (cudaq.target property)": [[3, "cudaq.Target.description"]], "deserialize() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.deserialize"]], "draw() (in module cudaq)": [[3, "cudaq.draw"]], "dump() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.dump"]], "dump() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.dump"]], "dump() (cudaq.state method)": [[3, "cudaq.State.dump"]], "evolve() (in module cudaq)": [[3, "cudaq.evolve"]], "evolve_async() (in module cudaq)": [[3, "cudaq.evolve_async"]], "expectation() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.expectation"]], "expectation() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.expectation"]], "expectation_values() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.expectation_values"]], "expectation_z() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.expectation_z"]], "expectation_z() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.expectation_z"]], "extract_c_function_pointer() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.extract_c_function_pointer"]], "final_expectation_values() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.final_expectation_values"]], "final_state() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.final_state"]], "finalize() (in module cudaq.mpi)": [[3, "cudaq.mpi.finalize"]], "from_data() (cudaq.state static method)": [[3, "cudaq.State.from_data"]], "from_json() (cudaq.pykerneldecorator static method)": [[3, "cudaq.PyKernelDecorator.from_json"]], "from_json() (cudaq.gradients.centraldifference static method)": [[3, "cudaq.gradients.CentralDifference.from_json"]], "from_json() (cudaq.gradients.forwarddifference static method)": [[3, "cudaq.gradients.ForwardDifference.from_json"]], "from_json() (cudaq.gradients.parametershift static method)": [[3, "cudaq.gradients.ParameterShift.from_json"]], "from_json() (cudaq.optimizers.cobyla static method)": [[3, "cudaq.optimizers.COBYLA.from_json"]], "from_json() (cudaq.optimizers.gradientdescent static method)": [[3, "cudaq.optimizers.GradientDescent.from_json"]], "from_json() (cudaq.optimizers.lbfgs static method)": [[3, "cudaq.optimizers.LBFGS.from_json"]], "from_json() (cudaq.optimizers.neldermead static method)": [[3, "cudaq.optimizers.NelderMead.from_json"]], "get() (cudaq.asyncevolveresult method)": [[3, "cudaq.AsyncEvolveResult.get"]], "get() (cudaq.asyncobserveresult method)": [[3, "cudaq.AsyncObserveResult.get"]], "get() (cudaq.asyncsampleresult method)": [[3, "cudaq.AsyncSampleResult.get"]], "get() (cudaq.asyncstateresult method)": [[3, "cudaq.AsyncStateResult.get"]], "gettensor() (cudaq.state method)": [[3, "cudaq.State.getTensor"]], "gettensors() (cudaq.state method)": [[3, "cudaq.State.getTensors"]], "get_channels() (cudaq.noisemodel method)": [[3, "cudaq.NoiseModel.get_channels"]], "get_marginal_counts() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_marginal_counts"]], "get_precision() (cudaq.target method)": [[3, "cudaq.Target.get_precision"]], "get_register_counts() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_register_counts"]], "get_sequential_data() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.get_sequential_data"]], "get_spin() (cudaq.observeresult method)": [[3, "cudaq.ObserveResult.get_spin"]], "get_state() (in module cudaq)": [[3, "cudaq.get_state"]], "get_state_async() (in module cudaq)": [[3, "cudaq.get_state_async"]], "get_target() (in module cudaq)": [[3, "cudaq.get_target"]], "get_targets() (in module cudaq)": [[3, "cudaq.get_targets"]], "gradient (class in cudaq.gradients)": [[3, "cudaq.gradients.gradient"]], "has_target() (in module cudaq)": [[3, "cudaq.has_target"]], "initial_parameters (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.initial_parameters"]], "initial_parameters (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.initial_parameters"]], "initial_parameters (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.initial_parameters"]], "initial_parameters (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.initial_parameters"]], "initialize() (in module cudaq.mpi)": [[3, "cudaq.mpi.initialize"]], "initialize_cudaq() (in module cudaq)": [[3, "cudaq.initialize_cudaq"]], "intermediate_states() (cudaq.evolveresult method)": [[3, "cudaq.EvolveResult.intermediate_states"]], "is_emulated() (cudaq.target method)": [[3, "cudaq.Target.is_emulated"]], "is_initialized() (in module cudaq.mpi)": [[3, "cudaq.mpi.is_initialized"]], "is_on_gpu() (cudaq.state method)": [[3, "cudaq.State.is_on_gpu"]], "is_remote() (cudaq.target method)": [[3, "cudaq.Target.is_remote"]], "items() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.items"]], "kernel() (in module cudaq)": [[3, "cudaq.kernel"]], "lower_bounds (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.lower_bounds"]], "lower_bounds (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.lower_bounds"]], "lower_bounds (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.lower_bounds"]], "lower_bounds (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.lower_bounds"]], "make_kernel() (in module cudaq)": [[3, "cudaq.make_kernel"]], "max_iterations (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.max_iterations"]], "max_iterations (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.max_iterations"]], "max_iterations (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.max_iterations"]], "max_iterations (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.max_iterations"]], "merge_kernel() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.merge_kernel"]], "minimal_eigenvalue() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.minimal_eigenvalue"]], "module": [[3, "module-cudaq"]], "most_probable() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.most_probable"]], "name (cudaq.pykernel attribute)": [[3, "cudaq.PyKernel.name"]], "name (cudaq.simulationprecision property)": [[3, "cudaq.SimulationPrecision.name"]], "name (cudaq.target property)": [[3, "cudaq.Target.name"]], "num_available_gpus() (in module cudaq)": [[3, "cudaq.num_available_gpus"]], "num_columns() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.num_columns"]], "num_qpus() (cudaq.target method)": [[3, "cudaq.Target.num_qpus"]], "num_qubits() (cudaq.state method)": [[3, "cudaq.State.num_qubits"]], "num_ranks() (in module cudaq.mpi)": [[3, "cudaq.mpi.num_ranks"]], "num_rows() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.num_rows"]], "observe() (in module cudaq)": [[3, "cudaq.observe"]], "observe_async() (in module cudaq)": [[3, "cudaq.observe_async"]], "optimize() (cudaq.optimizers.cobyla method)": [[3, "cudaq.optimizers.COBYLA.optimize"]], "optimize() (cudaq.optimizers.gradientdescent method)": [[3, "cudaq.optimizers.GradientDescent.optimize"]], "optimize() (cudaq.optimizers.lbfgs method)": [[3, "cudaq.optimizers.LBFGS.optimize"]], "optimize() (cudaq.optimizers.neldermead method)": [[3, "cudaq.optimizers.NelderMead.optimize"]], "optimizer (class in cudaq.optimizers)": [[3, "cudaq.optimizers.optimizer"]], "overlap() (cudaq.state method)": [[3, "cudaq.State.overlap"]], "platform (cudaq.target property)": [[3, "cudaq.Target.platform"]], "probability() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.probability"]], "qreg (in module cudaq)": [[3, "cudaq.qreg"]], "qubit (class in cudaq)": [[3, "cudaq.qubit"]], "qvector (class in cudaq)": [[3, "cudaq.qvector"]], "rank() (in module cudaq.mpi)": [[3, "cudaq.mpi.rank"]], "register_names (cudaq.sampleresult attribute)": [[3, "cudaq.SampleResult.register_names"]], "requires_gradients() (cudaq.optimizers.cobyla method)": [[3, "cudaq.optimizers.COBYLA.requires_gradients"]], "requires_gradients() (cudaq.optimizers.gradientdescent method)": [[3, "cudaq.optimizers.GradientDescent.requires_gradients"]], "requires_gradients() (cudaq.optimizers.lbfgs method)": [[3, "cudaq.optimizers.LBFGS.requires_gradients"]], "requires_gradients() (cudaq.optimizers.neldermead method)": [[3, "cudaq.optimizers.NelderMead.requires_gradients"]], "reset_target() (in module cudaq)": [[3, "cudaq.reset_target"]], "row_count (cudaq.krausoperator property)": [[3, "cudaq.KrausOperator.row_count"]], "sample() (in module cudaq)": [[3, "cudaq.sample"]], "sample() (in module cudaq.orca)": [[3, "cudaq.orca.sample"]], "sample_async() (in module cudaq)": [[3, "cudaq.sample_async"]], "serialize() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.serialize"]], "set_noise() (in module cudaq)": [[3, "cudaq.set_noise"]], "set_random_seed() (in module cudaq)": [[3, "cudaq.set_random_seed"]], "set_target() (in module cudaq)": [[3, "cudaq.set_target"]], "simulator (cudaq.target property)": [[3, "cudaq.Target.simulator"]], "slice() (cudaq.quakevalue method)": [[3, "cudaq.QuakeValue.slice"]], "spin.i() (in module cudaq)": [[3, "cudaq.spin.i"]], "spin.x() (in module cudaq)": [[3, "cudaq.spin.x"]], "spin.y() (in module cudaq)": [[3, "cudaq.spin.y"]], "spin.z() (in module cudaq)": [[3, "cudaq.spin.z"]], "synthesize_callable_arguments() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.synthesize_callable_arguments"]], "to_cupy_array() (in module cudaq.operator.cudm_state)": [[3, "cudaq.operator.cudm_state.to_cupy_array"]], "to_json() (cudaq.pykerneldecorator method)": [[3, "cudaq.PyKernelDecorator.to_json"]], "to_json() (cudaq.gradients.centraldifference method)": [[3, "cudaq.gradients.CentralDifference.to_json"]], "to_json() (cudaq.gradients.forwarddifference method)": [[3, "cudaq.gradients.ForwardDifference.to_json"]], "to_json() (cudaq.gradients.parametershift method)": [[3, "cudaq.gradients.ParameterShift.to_json"]], "to_json() (cudaq.optimizers.cobyla method)": [[3, "cudaq.optimizers.COBYLA.to_json"]], "to_json() (cudaq.optimizers.gradientdescent method)": [[3, "cudaq.optimizers.GradientDescent.to_json"]], "to_json() (cudaq.optimizers.lbfgs method)": [[3, "cudaq.optimizers.LBFGS.to_json"]], "to_json() (cudaq.optimizers.neldermead method)": [[3, "cudaq.optimizers.NelderMead.to_json"]], "to_numpy() (cudaq.complexmatrix method)": [[3, "cudaq.ComplexMatrix.to_numpy"]], "translate() (in module cudaq)": [[3, "cudaq.translate"]], "type_to_str() (cudaq.pykerneldecorator static method)": [[3, "cudaq.PyKernelDecorator.type_to_str"]], "unset_noise() (in module cudaq)": [[3, "cudaq.unset_noise"]], "upper_bounds (cudaq.optimizers.cobyla property)": [[3, "cudaq.optimizers.COBYLA.upper_bounds"]], "upper_bounds (cudaq.optimizers.gradientdescent property)": [[3, "cudaq.optimizers.GradientDescent.upper_bounds"]], "upper_bounds (cudaq.optimizers.lbfgs property)": [[3, "cudaq.optimizers.LBFGS.upper_bounds"]], "upper_bounds (cudaq.optimizers.neldermead property)": [[3, "cudaq.optimizers.NelderMead.upper_bounds"]], "values() (cudaq.sampleresult method)": [[3, "cudaq.SampleResult.values"]], "vqe() (in module cudaq)": [[3, "cudaq.vqe"]]}})