# ============================================================================ #
# Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

#  RUN: cudaq-target-conf -o %t %cudaq_target_dir/anyon.yml && cat %t | FileCheck %s

# Tell DefaultQuantumPlatform what QPU subtype to use
# CHECK-DAG: PLATFORM_QPU=remote_rest

# Tell NVQ++ to generate glue code to set the target backend name
# CHECK-DAG: GEN_TARGET_BACKEND=true

# Add the rest-qpu library to the link list
# CHECK-DAG: LINKLIBS="${LINKLIBS} -lcudaq-rest-qpu"

# Define the lowering pipeline. telegraph-8q has an 8-qubit ring topology, so mapping
# uses ring(8).
# Berkeley-25q uses a bidiratctional connectivity lattice with 8 connectivity per qubit in the bulk.
# CHECK-DAG: PLATFORM_LOWERING_CONFIG="const-prop-complex,canonicalize,cse,lift-array-value,state-prep,expand-measurements,unrolling-pipeline,decomposition{enable-patterns=U3ToRotations},func.func(lower-to-cfg),canonicalize,func.func(multicontrol-decomposition),anyon-%Q_GATE%-set-mapping,func.func(add-dealloc,combine-quantum-alloc,canonicalize,factor-quantum-alloc,memtoreg),add-wireset,func.func(assign-wire-indices),qubit-mapping{device=file(%QPU_ARCH%)},func.func(regtomem),symbol-dce"


# Tell the rest-qpu that we are generating QIR.
# CHECK-DAG: CODEGEN_EMISSION=qir-adaptive

# Library mode is only for simulators, 
# and it is the default, physical backends must 
# turn this off
# CHECK-DAG: LIBRARY_MODE=false

PLATFORM_EXTRA_ARGS=""
# NB: extra arguments always take the form:
#   --<target>-<option> <value>
# as in
#   --anyon-machine foo
while [ $# -gt 1 ]; do
	case "$1" in
	--anyon-credential)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;credentials;$2"
		;;
	--anyon-url)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;url;$2"
		;;
	--anyon-machine)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;machine;$2"
		;;
	esac
	shift 2
done