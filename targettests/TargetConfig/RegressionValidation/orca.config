# ============================================================================ #
# Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

#  RUN: cudaq-target-conf -o %t %cudaq_target_dir/orca.yml && cat %t | FileCheck %s

# Tell DefaultQuantumPlatform what QPU subtype to use
# CHECK-DAG: PLATFORM_QPU=orca

# Tell NVQ++ to generate glue code to set the target backend name
# CHECK-DAG: GEN_TARGET_BACKEND=true

# Add the rest-qpu library to the link list
# CHECK-DAG: LINKLIBS="${LINKLIBS} -lcudaq-orca-qpu"

# Library mode is only for simulators, 
# and it is the default, physical backends must 
# turn this off
# CHECK-DAG: LIBRARY_MODE=false

PLATFORM_EXTRA_ARGS=""
# NB: extra arguments always take the form:
#   --<target>-<option> <value>
# as in
#   --orca-machine foo
while [ $# -gt 1 ]; do
	case "$1" in
	--orca-url)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;url;$2"
		;;
	--orca-machine)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;machine;$2"
		;;
	esac
	shift 2
done
