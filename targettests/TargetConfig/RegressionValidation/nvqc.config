# ============================================================================ #
# Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

#  RUN: cudaq-target-conf -o %t %cudaq_target_dir/nvqc.yml && cat %t | FileCheck %s

msg=""

# Tell NVQ++ to generate glue code to set the target backend name
# CHECK-DAG:  GEN_TARGET_BACKEND=true

# Use the MultiQPUPlatform
# CHECK-DAG:  PLATFORM_LIBRARY=mqpu

# QPU subtype
# CHECK-DAG:  PLATFORM_QPU=NvcfSimulatorQPU

# Disable library mode
# CHECK-DAG:  LIBRARY_MODE=false

# Preprocessor flag to compile for remote execution
# CHECK-DAG:  PREPROCESSOR_DEFINES="${PREPROCESSOR_DEFINES} -D CUDAQ_REMOTE_SIM"

# CHECK-DAG:  LINKLIBS="${LINKLIBS} -lcudaq-remote-simulator-qpu" 

PLATFORM_EXTRA_ARGS=""
# NB: extra arguments always take the form:
#   --<target>-<option> <value>
# as in
#   --remote-sim-backend foo
while [ $# -gt 1 ]; do
	case "$1" in
	--nvqc-backend)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;backend;$2"
		;;
	--nvqc-nqpus)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;nqpus;$2"
		;;
	--nvqc-ngpus)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;ngpus;$2"
		;;
	--nvqc-function-id)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;function_id;$2"
		;;
	--nvqc-function-version-id)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;version_id;$2"
		;;
	--nvqc-api-key)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;api_key;$2"
		;;
	esac
	shift 2
done