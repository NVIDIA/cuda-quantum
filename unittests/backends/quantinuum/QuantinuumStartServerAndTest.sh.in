#!/bin/bash

# ============================================================================ #
# Copyright (c) 2022 - 2025 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

checkServerConnection() {
  PYTHONPATH=@CMAKE_BINARY_DIR@/python @Python_EXECUTABLE@ - << EOF
import socket
try:
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(("localhost", 62440))
    s.close()
except Exception:
    exit(1)
EOF
}
# Launch the fake server
PYTHONPATH=@CMAKE_BINARY_DIR@/python @Python_EXECUTABLE@ @CMAKE_SOURCE_DIR@/utils/mock_qpu/quantinuum/__init__.py &
# we'll need the process id to kill it
pid=$(echo "$!")
n=0
while ! checkServerConnection; do
  sleep 1
  n=$((n+1))
  if [ "$n" -eq "20" ]; then
    kill -INT $pid
    exit 99
  fi
done
# Run the tests
./test_quantinuum
# Did they fail? 
testsPassed=$?

if [ $testsPassed -ne 0 ]; then
  echo "Tests failed with exit code $testsPassed"
  kill -INT $pid
  exit $testsPassed
fi


rm -f @CMAKE_BINARY_DIR@/FakeCppQuantinuum.config
echo "key: key" >> @CMAKE_BINARY_DIR@/FakeCppQuantinuum.config
echo "refresh: refresh" >> @CMAKE_BINARY_DIR@/FakeCppQuantinuum.config
# Run the test for the QIR output
@CMAKE_BINARY_DIR@/bin/nvq++ -fenable-cudaq-run --target quantinuum --quantinuum-credentials @CMAKE_BINARY_DIR@/FakeCppQuantinuum.config --quantinuum-machine Helios-SC --quantinuum-project mock --quantinuum-url http://localhost:62440 @CMAKE_SOURCE_DIR@/unittests/backends/quantinuum/test_run.cpp -o test_run.x
CUDAQ_ENABLE_QUANTUM_DEVICE_RUN=1 ./test_run.x

# Did they fail?
testsPassed=$?

# Clean up the config file
rm -f @CMAKE_BINARY_DIR@/FakeCppQuantinuum.config

# kill the server
kill -INT $pid
# return success / failure
exit $testsPassed
