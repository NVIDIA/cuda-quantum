/*******************************************************************************
 * Copyright (c) 2022 - 2025 NVIDIA Corporation & Affiliates.                  *
 * All rights reserved.                                                        *
 *                                                                             *
 * This source code and the accompanying materials are made available under    *
 * the terms of the Apache License 2.0 which accompanies this distribution.    *
 ******************************************************************************/

#include <cudaq.h>
#include <cudaq/algorithm.h>
#include <gtest/gtest.h>
#include <random>

TEST(OptTester, loopWithBreak) {
  auto kernel = []() __qpu__ {
    GEN-QALLOC: nqubits=3-5
    for (size_t i = 0; i < 10; i++) {
      GEN-SUBCIRCUIT
      if (mz(GEN:<qubit>)) {
        break;
      }

      GEN-QALLOC: nqubits=3-5
      GEN-SUBCIRCUIT
      GEN-BLOCK
    }
  };

  const auto PHASE_SWITCH = "CUDAQ_PHASE_FOLDING";

  setenv(PHASE_SWITCH, "0", true);
  cudaq::set_random_seed(1);
  auto state1 = cudaq::get_state(kernel);

  setenv(PHASE_SWITCH, "1", true);
  cudaq::set_random_seed(1);
  auto state2 = cudaq::get_state(kernel);

  assert(state1.get_num_qubits() == state2.get_num_qubits());
  auto result = state1.overlap(state2);
  printf("Real: %f, imag: %f\n", result.real(), result.imag());
  EXPECT_NEAR(result.real(), 1., 0.0000001);
  EXPECT_NEAR(result.imag(), 0., 0.0000001);
}
