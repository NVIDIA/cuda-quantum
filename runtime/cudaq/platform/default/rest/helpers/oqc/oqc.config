# ============================================================================ #
# Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

# Tell DefaultQuantumPlatform what QPU subtype to use
PLATFORM_QPU=remote_rest

# Tell NVQ++ to generate glue code to set the target backend name
GEN_TARGET_BACKEND=true

# Add the rest-qpu library to the link list
LINKLIBS="${LINKLIBS} -lcudaq-rest-qpu"

# Define the lowering pipeline. Lucy has an 8-qubit ring topology, so mapping
# uses ring(8).
PLATFORM_LOWERING_CONFIG="expand-measurements,unrolling-pipeline,func.func(lower-to-cfg),canonicalize,func.func(multicontrol-decomposition),oqc-gate-set-mapping,func.func(add-dealloc,combine-quantum-alloc,canonicalize,factor-quantum-alloc,memtoreg,qubit-mapping{device=ring(8)},regtomem)"

# Tell the rest-qpu that we are generating QIR.
CODEGEN_EMISSION=qir-base

# Library mode is only for simulators, 
# and it is the default, physical backends must 
# turn this off
LIBRARY_MODE=false

# NB: extra arguments always take the form:
#   --<target>-<option> <value>
# as in
#   --oqc-machine foo
PLATFORM_EXTRA_ARGS=""
# NB: extra arguments always take the form:
#   --<target>-<option> <value>
# as in
#   --oqc-machine foo
while [ $# -gt 1 ]; do
	case "$1" in
	--oqc-email)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;email;$2"
		;;
	--oqc-url)
		PLATFORM_EXTRA_ARGS="$PLATFORM_EXTRA_ARGS;url;$2"
		;;
	esac
	shift 2
done
