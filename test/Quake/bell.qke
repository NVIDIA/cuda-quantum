// ========================================================================== //
// Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt %s  --canonicalize | FileCheck %s
module {
    // CHECK-LABEL: func @bell()
    // CHECK: %[[C0:.*]] = arith.constant 0 : i32
    // CHECK: %[[C1:.*]] = arith.constant 1 : i32
    // CHECK: %0 = quake.alloca !quake.qvec<2>
    // CHECK: %1 = quake.extract_ref %0[%[[C0]]] : (!quake.qvec<2>, i32) -> !quake.qref
    // CHECK: %2 = quake.extract_ref %0[%[[C1]]] : (!quake.qvec<2>, i32) -> !quake.qref
    // CHECK: quake.h %1
    // CHECK: quake.x [%1] %2 :
    // CHECK: %3 = quake.mz %1 : (!quake.qref) -> i1
    // CHECK: %4 = quake.mz %2 : (!quake.qref) -> i1
    // CHECK: return
    func.func @bell() {
        %0 = arith.constant 2 : i32
        %c_0 = arith.constant 0 : i32
        %c_1 = arith.constant 1 : i32
        %qubits = quake.alloca [%0 : i32] !quake.qvec<?>
        %q0 = quake.extract_ref %qubits[%c_0] : (!quake.qvec<?>,i32) -> !quake.qref
        %q1 = quake.extract_ref %qubits[%c_1] : (!quake.qvec<?>,i32) -> !quake.qref

        quake.h %q0 : (!quake.qref) -> ()
        quake.x [%q0] %q1 : (!quake.qref, !quake.qref) -> ()
        quake.mz %q0 : (!quake.qref) -> i1
        quake.mz %q1 : (!quake.qref) -> i1
        return
    }
}
