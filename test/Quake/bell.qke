// ========================================================================== //
// Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --canonicalize %s | FileCheck %s

module {
  func.func @bell() {
    %0 = arith.constant 2 : i32
    %c_0 = arith.constant 0 : i32
    %c_1 = arith.constant 1 : i32
    %qubits = quake.alloca !quake.veq<?>[%0 : i32]
    %q0 = quake.extract_ref %qubits[%c_0] : (!quake.veq<?>,i32) -> !quake.ref
    %q1 = quake.extract_ref %qubits[%c_1] : (!quake.veq<?>,i32) -> !quake.ref

    quake.h %q0 : (!quake.ref) -> ()
    quake.x [%q0] %q1 : (!quake.ref, !quake.ref) -> ()
    quake.mz %q0 : (!quake.ref) -> !quake.measure
    quake.mz %q1 : (!quake.ref) -> !quake.measure
    return
  }
}

// CHECK-LABEL:   func.func @bell() {
// CHECK:           %[[VAL_0:.*]] = quake.alloca !quake.veq<2>
// CHECK:           %[[VAL_1:.*]] = quake.extract_ref %[[VAL_0]][0] : (!quake.veq<2>) -> !quake.ref
// CHECK:           %[[VAL_2:.*]] = quake.extract_ref %[[VAL_0]][1] : (!quake.veq<2>) -> !quake.ref
// CHECK:           quake.h %[[VAL_1]] : (!quake.ref) -> ()
// CHECK:           quake.x [%[[VAL_1]]] %[[VAL_2]] : (!quake.ref, !quake.ref) -> ()
// CHECK:           quake.mz %[[VAL_1]] : (!quake.ref) -> !quake.measure
// CHECK:           quake.mz %[[VAL_2]] : (!quake.ref) -> !quake.measure
// CHECK:           return
// CHECK:         }
