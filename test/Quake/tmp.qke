// ========================================================================== //
// Copyright (c) 2022 - 2025 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

module attributes {quake.mangled_name_map = {__nvqpp__mlirgen__trotter = "__nvqpp__mlirgen__trotter_PyKernelEntryPointRewrite"}} {
  llvm.func @__nvqpp__mlirgen__trotter() attributes {"cudaq-entrypoint", "cudaq-kernel", passthrough = ["entry_point", ["qir_profiles", "adaptive_profile"], ["requiredQubits", "2"], ["requiredResults", "1"], ["output_names", "[[[0,[0,\22r00000\22]]]]"]], "qir-api"} {
    %0 = llvm.mlir.constant(1 : i64) : i64
    %1 = llvm.mlir.constant(0 : i64) : i64
    %2 = llvm.mlir.constant(2 : i64) : i64
    %3 = llvm.mlir.constant(5.000000e-02 : f64) : f64
    %4 = llvm.mlir.constant(1.5707963267948966 : f64) : f64
    %5 = llvm.mlir.constant(-1.5707963267948966 : f64) : f64
    %6 = llvm.mlir.constant(1 : i32) : i32
    %7 = llvm.alloca %6 x !llvm.array<6 x struct<(ptr<i8>, i64)>> : (i32) -> !llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>>
    %8 = llvm.mlir.addressof @cstr.494900 : !llvm.ptr<array<3 x i8>>
    %9 = llvm.bitcast %8 : !llvm.ptr<array<3 x i8>> to !llvm.ptr<i8>
    %10 = llvm.mlir.undef : !llvm.struct<(ptr<i8>, i64)>
    %11 = llvm.bitcast %9 : !llvm.ptr<i8> to !llvm.ptr<i8>
    %12 = llvm.insertvalue %11, %10[0] : !llvm.struct<(ptr<i8>, i64)> 
    %13 = llvm.insertvalue %2, %12[1] : !llvm.struct<(ptr<i8>, i64)> 
    %14 = llvm.bitcast %7 : !llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>> to !llvm.ptr<struct<(ptr<i8>, i64)>>
    llvm.store %13, %14 : !llvm.ptr<struct<(ptr<i8>, i64)>>
    %15 = llvm.mlir.addressof @cstr.585800 : !llvm.ptr<array<3 x i8>>
    %16 = llvm.bitcast %15 : !llvm.ptr<array<3 x i8>> to !llvm.ptr<i8>
    %17 = llvm.mlir.undef : !llvm.struct<(ptr<i8>, i64)>
    %18 = llvm.bitcast %16 : !llvm.ptr<i8> to !llvm.ptr<i8>
    %19 = llvm.insertvalue %18, %17[0] : !llvm.struct<(ptr<i8>, i64)> 
    %20 = llvm.insertvalue %2, %19[1] : !llvm.struct<(ptr<i8>, i64)> 
    %21 = llvm.getelementptr %7[0, 1] : (!llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>>) -> !llvm.ptr<struct<(ptr<i8>, i64)>>
    llvm.store %20, %21 : !llvm.ptr<struct<(ptr<i8>, i64)>>
    %22 = llvm.mlir.addressof @cstr.595900 : !llvm.ptr<array<3 x i8>>
    %23 = llvm.bitcast %22 : !llvm.ptr<array<3 x i8>> to !llvm.ptr<i8>
    %24 = llvm.mlir.undef : !llvm.struct<(ptr<i8>, i64)>
    %25 = llvm.bitcast %23 : !llvm.ptr<i8> to !llvm.ptr<i8>
    %26 = llvm.insertvalue %25, %24[0] : !llvm.struct<(ptr<i8>, i64)> 
    %27 = llvm.insertvalue %2, %26[1] : !llvm.struct<(ptr<i8>, i64)> 
    %28 = llvm.getelementptr %7[0, 2] : (!llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>>) -> !llvm.ptr<struct<(ptr<i8>, i64)>>
    llvm.store %27, %28 : !llvm.ptr<struct<(ptr<i8>, i64)>>
    %29 = llvm.mlir.addressof @cstr.5A5A00 : !llvm.ptr<array<3 x i8>>
    %30 = llvm.bitcast %29 : !llvm.ptr<array<3 x i8>> to !llvm.ptr<i8>
    %31 = llvm.mlir.undef : !llvm.struct<(ptr<i8>, i64)>
    %32 = llvm.bitcast %30 : !llvm.ptr<i8> to !llvm.ptr<i8>
    %33 = llvm.insertvalue %32, %31[0] : !llvm.struct<(ptr<i8>, i64)> 
    %34 = llvm.insertvalue %2, %33[1] : !llvm.struct<(ptr<i8>, i64)> 
    %35 = llvm.getelementptr %7[0, 3] : (!llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>>) -> !llvm.ptr<struct<(ptr<i8>, i64)>>
    llvm.store %34, %35 : !llvm.ptr<struct<(ptr<i8>, i64)>>
    %36 = llvm.mlir.addressof @cstr.584900 : !llvm.ptr<array<3 x i8>>
    %37 = llvm.bitcast %36 : !llvm.ptr<array<3 x i8>> to !llvm.ptr<i8>
    %38 = llvm.mlir.undef : !llvm.struct<(ptr<i8>, i64)>
    %39 = llvm.bitcast %37 : !llvm.ptr<i8> to !llvm.ptr<i8>
    %40 = llvm.insertvalue %39, %38[0] : !llvm.struct<(ptr<i8>, i64)> 
    %41 = llvm.insertvalue %2, %40[1] : !llvm.struct<(ptr<i8>, i64)> 
    %42 = llvm.getelementptr %7[0, 4] : (!llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>>) -> !llvm.ptr<struct<(ptr<i8>, i64)>>
    llvm.store %41, %42 : !llvm.ptr<struct<(ptr<i8>, i64)>>
    %43 = llvm.mlir.addressof @cstr.495800 : !llvm.ptr<array<3 x i8>>
    %44 = llvm.bitcast %43 : !llvm.ptr<array<3 x i8>> to !llvm.ptr<i8>
    %45 = llvm.mlir.undef : !llvm.struct<(ptr<i8>, i64)>
    %46 = llvm.bitcast %44 : !llvm.ptr<i8> to !llvm.ptr<i8>
    %47 = llvm.insertvalue %46, %45[0] : !llvm.struct<(ptr<i8>, i64)> 
    %48 = llvm.insertvalue %2, %47[1] : !llvm.struct<(ptr<i8>, i64)> 
    %49 = llvm.getelementptr %7[0, 5] : (!llvm.ptr<array<6 x struct<(ptr<i8>, i64)>>>) -> !llvm.ptr<struct<(ptr<i8>, i64)>>
    llvm.store %48, %49 : !llvm.ptr<struct<(ptr<i8>, i64)>>
    %50 = llvm.inttoptr %1 : i64 to !llvm.ptr<struct<"Qubit", opaque>>
    llvm.call @__quantum__qis__h__body(%50) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    %51 = llvm.inttoptr %0 : i64 to !llvm.ptr<struct<"Qubit", opaque>>
    llvm.call @__quantum__qis__h__body(%51) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__cnot__body(%50, %51) : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rz__body(%3, %51) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__cnot__body(%50, %51) : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__h__body(%51) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__h__body(%50) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rx__body(%4, %50) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rx__body(%4, %51) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__cnot__body(%50, %51) : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rz__body(%3, %51) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__cnot__body(%50, %51) : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rx__body(%5, %51) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rx__body(%5, %50) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__cnot__body(%50, %51) : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rz__body(%3, %51) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__cnot__body(%50, %51) : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__h__body(%50) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rz__body(%3, %50) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__h__body(%50) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__h__body(%51) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__rz__body(%3, %51) : (f64, !llvm.ptr<struct<"Qubit", opaque>>) -> ()
    llvm.call @__quantum__qis__h__body(%51) : (!llvm.ptr<struct<"Qubit", opaque>>) -> ()
    %52 = llvm.inttoptr %1 : i64 to !llvm.ptr<struct<"Result", opaque>>
    llvm.call @__quantum__qis__mz__body(%50, %52) {registerName = "r00000"} : (!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Result", opaque>>) -> ()
    %53 = llvm.mlir.addressof @cstr.72303030303000 : !llvm.ptr<array<7 x i8>>
    %54 = llvm.bitcast %53 : !llvm.ptr<array<7 x i8>> to !llvm.ptr<i8>
    llvm.call @__quantum__rt__result_record_output(%52, %54) {ResultIndex = 0 : i64, registerName = "r00000"} : (!llvm.ptr<struct<"Result", opaque>>, !llvm.ptr<i8>) -> ()
    llvm.return
  }
  llvm.func @__quantum__qis__h__body(!llvm.ptr<struct<"Qubit", opaque>>) attributes {sym_visibility = "private"}
  llvm.func @__quantum__qis__mz__body(!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Result", opaque>>) attributes {passthrough = ["irreversible"], sym_visibility = "private"}
  llvm.func @__quantum__qis__rx__body(f64, !llvm.ptr<struct<"Qubit", opaque>>) attributes {sym_visibility = "private"}
  llvm.func @__quantum__qis__rz__body(f64, !llvm.ptr<struct<"Qubit", opaque>>) attributes {sym_visibility = "private"}
  llvm.func @__quantum__rt__result_record_output(!llvm.ptr<struct<"Result", opaque>>, !llvm.ptr<i8>) attributes {sym_visibility = "private"}
  llvm.func @__quantum__qis__cnot__body(!llvm.ptr<struct<"Qubit", opaque>>, !llvm.ptr<struct<"Qubit", opaque>>) attributes {sym_visibility = "private"}
  llvm.mlir.global private constant @cstr.72303030303000("r00000\00") {addr_space = 0 : i32}
  llvm.mlir.global private constant @cstr.494900("II\00") {addr_space = 0 : i32}
  llvm.mlir.global private constant @cstr.585800("XX\00") {addr_space = 0 : i32}
  llvm.mlir.global private constant @cstr.595900("YY\00") {addr_space = 0 : i32}
  llvm.mlir.global private constant @cstr.5A5A00("ZZ\00") {addr_space = 0 : i32}
  llvm.mlir.global private constant @cstr.584900("XI\00") {addr_space = 0 : i32}
  llvm.mlir.global private constant @cstr.495800("IX\00") {addr_space = 0 : i32}
}