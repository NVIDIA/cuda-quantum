// ========================================================================== //
// Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt %s | FileCheck %s

// CHECK: func.func @bar() {
// CHECK-DAG:     %[[C0:.*]] = arith.constant 0 : i32
// CHECK-DAG:     %[[C2:.*]] = arith.constant 2 : i32
// CHECK-DAG:     %[[C1:.*]] = arith.constant 1 : i32
// CHECK-DAG:     %[[C22:.*]] = arith.constant 22 : i64
// CHECK:     %0 = quake.alloca[%[[C2]] : i32] !quake.qvec<?>
// CHECK:     %1 = quake.alloca[%[[C22]] : i64] !quake.qvec<?>
// CHECK:     %2 = quake.alloca[%[[C1]] : i32] !quake.qvec<?>
// CHECK:     %3 = quake.extract_ref %0[%[[C0]]] : (!quake.qvec<?>, i32) -> !quake.ref
// CHECK:     %4 = quake.extract_ref %1[%[[C1]]] : (!quake.qvec<?>, i32) -> !quake.ref
// CHECK:     quake.h %3 :
// CHECK:     quake.x [%3] %4 :
// CHECK:     return
// CHECK: }
func.func @bar() {
  %3 = arith.constant 0 : i32
  %0 = arith.constant 2 : i32
  %one = arith.constant 1 : i32
  %1 = arith.constant 22 : i64
  %qr2 = quake.alloca [ %0 : i32 ]  !quake.qvec<?>
  %qr22 = quake.alloca[ %1 : i64 ]  !quake.qvec<?>
  %q = quake.alloca [%one : i32]  !quake.qvec<?>

  %r = quake.extract_ref %qr2[%3] : (!quake.qvec<?>,i32) -> !quake.ref
  %q1 = quake.extract_ref %qr22[%one] : (!quake.qvec<?> ,i32) -> !quake.ref

  quake.h %r : (!quake.ref) -> ()
  quake.x[%r] %q1 : (!quake.ref,!quake.ref) -> ()
  return
}
