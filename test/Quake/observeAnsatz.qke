// ========================================================================== //
// Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --canonicalize --cse --observe-ansatz="term-bsf=1,1,0,0" --canonicalize %s | FileCheck %s

  func.func @__nvqpp__mlirgen__ansatz(%arg0: f64) {
    %c0_i64 = arith.constant 0 : i64
    %c1_i64 = arith.constant 1 : i64
    %0 = memref.alloca() : memref<f64>
    memref.store %arg0, %0[] : memref<f64>
    %1 = quake.alloca  !quake.veq<2>
    %2 = quake.extract_ref %1[%c0_i64] : (!quake.veq<2>,i64) -> !quake.ref
    quake.x %2 : (!quake.ref) -> ()
    %3 = memref.load %0[] : memref<f64>
    %4 = quake.extract_ref %1[%c1_i64] : (!quake.veq<2>,i64) -> !quake.ref
    quake.ry (%3) %4 : (f64, !quake.ref) -> ()
    %5 = quake.extract_ref %1[%c1_i64] : (!quake.veq<2>,i64) -> !quake.ref
    %6 = quake.extract_ref %1[%c0_i64] : (!quake.veq<2>,i64) -> !quake.ref
    quake.x [%5] %6 : (!quake.ref,!quake.ref) -> ()
    return
  }

// CHECK: quake.h %
// CHECK: quake.h %
// CHECK: %{{.*}} = quake.mz %{{.*}} : (!quake.ref) -> !quake.measure
// CHECK: %{{.*}} = quake.mz %{{.*}} : (!quake.ref) -> !quake.measure
