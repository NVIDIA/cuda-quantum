// ========================================================================== //
// Copyright (c) 2025 NVIDIA Corporation & Affiliates.                        //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt -constant-propagation -canonicalize %s | FileCheck %s

func.func @covered_wagon() {
  %cst = arith.constant 3.300000e+00 : f64
  %0 = cc.const_array [["XY", "ZI"], ["IZ", "YX"]] : !cc.array<!cc.array<!cc.array<i8 x 3> x 2> x 2>
  %1 = cc.reify_span %0 : (!cc.array<!cc.array<!cc.array<i8 x 3> x 2> x 2>) -> !cc.stdvec<!cc.stdvec<!cc.charspan>>
  %2 = cc.stdvec_data %1 : (!cc.stdvec<!cc.stdvec<!cc.charspan>>) -> !cc.ptr<!cc.array<!cc.stdvec<!cc.charspan> x ?>>
  %3 = cc.compute_ptr %2[1] : (!cc.ptr<!cc.array<!cc.stdvec<!cc.charspan> x ?>>) -> !cc.ptr<!cc.stdvec<!cc.charspan>>
  %4 = cc.load %3 : !cc.ptr<!cc.stdvec<!cc.charspan>>
  %5 = cc.stdvec_data %4 : (!cc.stdvec<!cc.charspan>) -> !cc.ptr<!cc.array<!cc.charspan x ?>>
  %6 = cc.cast %5 : (!cc.ptr<!cc.array<!cc.charspan x ?>>) -> !cc.ptr<!cc.charspan>
  %7 = quake.alloca !quake.ref
  %8 = cc.load %6 : !cc.ptr<!cc.charspan>
  quake.exp_pauli (%cst) %7 to %8 : (f64, !quake.ref, !cc.charspan) -> ()
  return
}

// CHECK-LABEL: func.func @covered_wagon
// CHECK: %[[VAL_0:.*]] = arith.constant 3.300000e+00 : f64
// CHECK: %[[VAL_1:.*]] = quake.alloca !quake.ref
// CHECK: quake.exp_pauli (%[[VAL_0]]) %[[VAL_1]] to "IZ" : (f64, !quake.ref) -> ()
