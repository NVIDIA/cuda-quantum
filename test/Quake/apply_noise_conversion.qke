// ========================================================================== //
// Copyright (c) 2022 - 2025 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --convert-to-qir-api=api=full --symbol-dce %s | FileCheck %s

func.func @__nvqpp__mlirgen__bell_error_vecI10SantaKrausE(%arg0: f64) attributes {"cudaq-entrypoint", "cudaq-kernel"} {
  %0 = cc.alloca f64
  cc.store %arg0, %0 : !cc.ptr<f64>
  %1 = quake.alloca !quake.veq<2>
  %2 = quake.extract_ref %1[0] : (!quake.veq<2>) -> !quake.ref
  quake.h %2 : (!quake.ref) -> ()
  %3 = quake.extract_ref %1[0] : (!quake.veq<2>) -> !quake.ref
  %4 = quake.extract_ref %1[1] : (!quake.veq<2>) -> !quake.ref
  quake.x [%3] %4 : (!quake.ref, !quake.ref) -> ()
  quake.apply_noise @_ZN5cudaq11apply_noiseI10SantaKrausJRdRNS_7qvectorILm2EEEEEEvDpOT0_(%0) %1 : (!cc.ptr<f64>, !quake.veq<2>) -> ()
  return
}

func.func private @_ZN5cudaq11apply_noiseI10SantaKrausJRdRNS_7qvectorILm2EEEEEEvDpOT0_(!cc.ptr<f64>, !quake.veq<?>)

// CHECK-LABEL:   func.func @__nvqpp__mlirgen__bell_error_vecI10SantaKrausE(
// CHECK-SAME:      %[[VAL_0:.*]]: f64) attributes {"cudaq-entrypoint", "cudaq-kernel", "qir-api"} {
// CHECK:           %[[VAL_1:.*]] = constant @__quantum__qis__x__ctl : (!cc.ptr<!llvm.struct<"Array", opaque>>, !cc.ptr<!llvm.struct<"Qubit", opaque>>) -> ()
// CHECK:           %[[VAL_2:.*]] = arith.constant 1 : i64
// CHECK:           %[[VAL_3:.*]] = arith.constant 0 : i64
// CHECK:           %[[VAL_4:.*]] = arith.constant 2 : i64
// CHECK:           %[[VAL_5:.*]] = cc.alloca f64
// CHECK:           cc.store %[[VAL_0]], %[[VAL_5]] : !cc.ptr<f64>
// CHECK:           %[[VAL_6:.*]] = call @__quantum__rt__qubit_allocate_array(%[[VAL_4]]) : (i64) -> !cc.ptr<!llvm.struct<"Array", opaque>>
// CHECK:           %[[VAL_7:.*]] = call @__quantum__rt__array_get_element_ptr_1d(%[[VAL_6]], %[[VAL_3]]) : (!cc.ptr<!llvm.struct<"Array", opaque>>, i64) -> !cc.ptr<!cc.ptr<!llvm.struct<"Qubit", opaque>>>
// CHECK:           %[[VAL_8:.*]] = cc.load %[[VAL_7]] : !cc.ptr<!cc.ptr<!llvm.struct<"Qubit", opaque>>>
// CHECK:           call @__quantum__qis__h(%[[VAL_8]]) : (!cc.ptr<!llvm.struct<"Qubit", opaque>>) -> ()
// CHECK:           %[[VAL_9:.*]] = call @__quantum__rt__array_get_element_ptr_1d(%[[VAL_6]], %[[VAL_3]]) : (!cc.ptr<!llvm.struct<"Array", opaque>>, i64) -> !cc.ptr<!cc.ptr<!llvm.struct<"Qubit", opaque>>>
// CHECK:           %[[VAL_10:.*]] = cc.load %[[VAL_9]] : !cc.ptr<!cc.ptr<!llvm.struct<"Qubit", opaque>>>
// CHECK:           %[[VAL_11:.*]] = call @__quantum__rt__array_get_element_ptr_1d(%[[VAL_6]], %[[VAL_2]]) : (!cc.ptr<!llvm.struct<"Array", opaque>>, i64) -> !cc.ptr<!cc.ptr<!llvm.struct<"Qubit", opaque>>>
// CHECK:           %[[VAL_12:.*]] = cc.load %[[VAL_11]] : !cc.ptr<!cc.ptr<!llvm.struct<"Qubit", opaque>>>
// CHECK:           %[[VAL_13:.*]] = cc.cast %[[VAL_10]] : (!cc.ptr<!llvm.struct<"Qubit", opaque>>) -> !llvm.ptr<i8>
// CHECK:           %[[VAL_14:.*]] = cc.func_ptr %[[VAL_1]] : ((!cc.ptr<!llvm.struct<"Array", opaque>>, !cc.ptr<!llvm.struct<"Qubit", opaque>>) -> ()) -> !llvm.ptr<i8>
// CHECK:           %[[VAL_15:.*]] = cc.cast %[[VAL_12]] : (!cc.ptr<!llvm.struct<"Qubit", opaque>>) -> !llvm.ptr<i8>
// CHECK:           cc.call_vararg @generalizedInvokeWithRotationsControlsTargets(%[[VAL_3]], %[[VAL_3]], %[[VAL_2]], %[[VAL_2]], %[[VAL_14]], %[[VAL_13]], %[[VAL_15]]) : (i64, i64, i64, i64, !llvm.ptr<i8>, !llvm.ptr<i8>, !llvm.ptr<i8>) -> ()
// CHECK:           %[[VAL_16:.*]] = call @__quantum__qis__convert_array_to_stdvector(%[[VAL_6]]) : (!cc.ptr<!llvm.struct<"Array", opaque>>) -> !cc.ptr<!llvm.struct<"Array", opaque>>
// CHECK:           call @_ZN5cudaq11apply_noiseI10SantaKrausJRdRNS_7qvectorILm2EEEEEEvDpOT0_(%[[VAL_5]], %[[VAL_16]]) : (!cc.ptr<f64>, !cc.ptr<!llvm.struct<"Array", opaque>>) -> ()
// CHECK:           call @__quantum__qis__free_converted_stdvector(%[[VAL_16]]) : (!cc.ptr<!llvm.struct<"Array", opaque>>) -> ()
// CHECK:           return
// CHECK:         }

// CHECK-DAG:     func.func private @_ZN5cudaq11apply_noiseI10SantaKrausJRdRNS_7qvectorILm2EEEEEEvDpOT0_(!cc.ptr<f64>, !cc.ptr<!llvm.struct<"Array", opaque>>) attributes {"qir-api"}
// CHECK-DAG:     func.func private @__quantum__qis__convert_array_to_stdvector(!cc.ptr<!llvm.struct<"Array", opaque>>) -> !cc.ptr<!llvm.struct<"Array", opaque>>
// CHECK-DAG:     func.func private @__quantum__qis__free_converted_stdvector(!cc.ptr<!llvm.struct<"Array", opaque>>)

