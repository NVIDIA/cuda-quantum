// ========================================================================== //
// Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --add-wireset --assign-wire-indices %s | FileCheck %s

// This is a basic dead-code check

func.func @test1() -> i1 attributes {"cudaq-kernel"} {
  %0 = quake.null_wire
  %1 = quake.null_wire
  %measOut, %wires = quake.mz %1 : (!quake.wire) -> (!quake.measure, !quake.wire)
  %2 = quake.discriminate %measOut : (!quake.measure) -> i1
  quake.sink %0 : !quake.wire
  quake.sink %wires : !quake.wire
  return %2 : i1
}

// CHECK-LABEL:   quake.wire_set @wires[2147483647]

// CHECK-LABEL:   func.func @test1() -> i1 attributes {"cudaq-kernel"} {
// CHECK:           %[[VAL_0:.*]] = quake.borrow_wire @wires[0] : !quake.wire
// CHECK:           %[[VAL_1:.*]], %[[VAL_2:.*]] = quake.mz %[[VAL_0]] : (!quake.wire) -> (!quake.measure, !quake.wire)
// CHECK:           %[[VAL_3:.*]] = quake.discriminate %[[VAL_1]] : (!quake.measure) -> i1
// CHECK:           quake.return_wire %[[VAL_2]] : !quake.wire
// CHECK:           return %[[VAL_3]] : i1
// CHECK:         }
