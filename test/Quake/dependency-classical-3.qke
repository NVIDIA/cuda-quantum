// ========================================================================== //
// Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --add-wireset --assign-wire-indices --dep-analysis %s | FileCheck %s

func.func @test3() -> !quake.measure attributes {"cudaq-entrypoint", "cudaq-kernel"} {
  %cst_0 = arith.constant 2.000000e+00 : f64
  %0 = quake.null_wire
  %1 = quake.null_wire
  %2 = quake.rx (%cst_0) %0 : (f64, !quake.wire) -> !quake.wire
  %3 = quake.x %2 : (!quake.wire) -> !quake.wire
  %4 = quake.y %3 : (!quake.wire) -> !quake.wire
  %5 = quake.rx (%cst_0) %1 : (f64, !quake.wire) -> !quake.wire
  %6:2 = quake.x [%4] %5 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
  %measOut, %wires = quake.mz %6#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
  quake.sink %6#0 : !quake.wire
  quake.sink %wires : !quake.wire
  return %measOut : !quake.measure
}

// CHECK-LABEL:   quake.wire_set @wires[2147483647]

// CHECK-LABEL:   func.func @test3() -> !quake.measure attributes {"cudaq-entrypoint", "cudaq-kernel"} {
// CHECK-DAG:       %[[VAL_0:.*]] = arith.constant 2.000000e+00 : f64
// CHECK-DAG:       %[[VAL_1:.*]] = quake.borrow_wire @wires[0] : !quake.wire
// CHECK:           %[[VAL_2:.*]] = quake.rx (%[[VAL_0]]) %[[VAL_1]] : (f64, !quake.wire) -> !quake.wire
// CHECK:           %[[VAL_3:.*]] = quake.x %[[VAL_2]] : (!quake.wire) -> !quake.wire
// CHECK:           %[[VAL_4:.*]] = quake.y %[[VAL_3]] : (!quake.wire) -> !quake.wire
// CHECK-DAG:       %[[VAL_5:.*]] = arith.constant 2.000000e+00 : f64
// CHECK-DAG:       %[[VAL_6:.*]] = quake.borrow_wire @wires[1] : !quake.wire
// CHECK:           %[[VAL_7:.*]] = quake.rx (%[[VAL_5]]) %[[VAL_6]] : (f64, !quake.wire) -> !quake.wire
// CHECK:           %[[VAL_8:.*]]:2 = quake.x {{\[}}%[[VAL_4]]] %[[VAL_7]] : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
// CHECK:           quake.return_wire %[[VAL_8]]#0 : !quake.wire
// CHECK:           %[[VAL_9:.*]], %[[VAL_10:.*]] = quake.mz %[[VAL_8]]#1 : (!quake.wire) -> (!quake.measure, !quake.wire)
// CHECK:           quake.return_wire %[[VAL_10]] : !quake.wire
// CHECK:           return %[[VAL_9]] : !quake.measure
// CHECK:         }
