// ========================================================================== //
// Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt --add-wireset --assign-wire-indices --dep-analysis -split-input-files %s | FileCheck %s

// -----

func.func @test1() -> !quake.measure attributes {"cudaq-kernel"} {
  %cst_0 = arith.constant 2.000000e+00 : f64
  %0 = quake.null_wire
  %1 = quake.rx (%cst_0) %0 : (f64, !quake.wire) -> !quake.wire
  %measOut, %wires = quake.mz %1 : (!quake.wire) -> (!quake.measure, !quake.wire)
  quake.sink %wires : !quake.wire
  return %measOut : !quake.measure
}

// CHECK-LABEL:   quake.wire_set @wires[2147483647]

// CHECK-LABEL:   func.func @test1() -> !quake.measure attributes {"cudaq-kernel"} {
// CHECK-DAG:       %[[VAL_0:.*]] = arith.constant 2.000000e+00 : f64
// CHECK-DAG:       %[[VAL_1:.*]] = quake.borrow_wire @wires[0] : !quake.wire
// CHECK:           %[[VAL_2:.*]] = quake.rx (%[[VAL_0]]) %[[VAL_1]] : (f64, !quake.wire) -> !quake.wire
// CHECK:           %[[VAL_3:.*]], %[[VAL_4:.*]] = quake.mz %[[VAL_2]] : (!quake.wire) -> (!quake.measure, !quake.wire)
// CHECK:           quake.return_wire %[[VAL_4]] : !quake.wire
// CHECK:           return %[[VAL_3]] : !quake.measure
// CHECK:         }
