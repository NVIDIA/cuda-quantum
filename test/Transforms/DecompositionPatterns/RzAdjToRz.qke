// ========================================================================== //
// Copyright (c) 2022 - 2025 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt -pass-pipeline='builtin.module(decomposition{enable-patterns=RzAdjToRz})' %s | FileCheck %s
// RUN: cudaq-opt -pass-pipeline='builtin.module(decomposition{enable-patterns=RzAdjToRz})' %s | CircuitCheck %s
// RUN: cudaq-opt -pass-pipeline='builtin.module(func.func(expand-control-veqs,memtoreg),decomposition{enable-patterns=RzAdjToRz})' %s | FileCheck %s
// RUN: cudaq-opt -pass-pipeline='builtin.module(func.func(expand-control-veqs,memtoreg),decomposition{enable-patterns=RzAdjToRz})' %s | CircuitCheck %s

// Test the decomposition pattern with different control types. The FileCheck
// part of this test only cares about the sequence of operations. Correcteness
// is checked by CircuitCheck.

// CHECK-LABEL: func.func @qref_no_control
func.func @qref_no_control(%t: !quake.ref) {
  %0 = arith.constant 1.57079632679489660 : f64
  // CHECK: quake.rz
  quake.rz<adj> (%0) %t : (f64, !quake.ref) -> ()
  return
}

