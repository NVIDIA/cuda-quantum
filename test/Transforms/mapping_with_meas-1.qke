// ========================================================================== //
// Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                 //
// All rights reserved.                                                       //
//                                                                            //
// This source code and the accompanying materials are made available under   //
// the terms of the Apache License 2.0 which accompanies this distribution.   //
// ========================================================================== //

// RUN: cudaq-opt -pass-pipeline='builtin.module(func.func(quake-mapping{device=path}))' %s | FileCheck %s
module {
  func.func @__nvqpp__mlirgen__function_foo._Z3foov() attributes {"cudaq-entrypoint", "cudaq-kernel", no_this} {
    %0 = quake.null_wire
    %1 = quake.null_wire
    %2 = quake.null_wire
    %3 = quake.h %0 : (!quake.wire) -> !quake.wire
    %4:2 = quake.x [%3] %1 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %5:2 = quake.x [%4#0] %2 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
    %bits, %wires = quake.mz %5#0 : (!quake.wire) -> (i1, !quake.wire)
    %bits_0, %wires_1 = quake.mz %4#1 : (!quake.wire) -> (i1, !quake.wire)
    %bits_2, %wires_3 = quake.mz %5#1 : (!quake.wire) -> (i1, !quake.wire)
    quake.sink %wires : !quake.wire
    quake.sink %wires_1 : !quake.wire
    quake.sink %wires_3 : !quake.wire
    return
  }
}

// CHECK-LABEL:   func.func @__nvqpp__mlirgen__function_foo._Z3foov() attributes {"cudaq-entrypoint", "cudaq-kernel", no_this} {
// CHECK:           %[[VAL_0:.*]] = quake.null_wire
// CHECK:           %[[VAL_1:.*]] = quake.null_wire
// CHECK:           %[[VAL_2:.*]] = quake.null_wire
// CHECK:           %[[VAL_3:.*]] = quake.h %[[VAL_0]] : (!quake.wire) -> !quake.wire
// CHECK:           %[[VAL_4:.*]]:2 = quake.x {{\[}}%[[VAL_3]]] %[[VAL_1]] : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
// CHECK:           %[[VAL_5:.*]]:2 = quake.swap %[[VAL_4]]#0, %[[VAL_4]]#1 : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
// CHECK:           %[[VAL_6:.*]]:2 = quake.x {{\[}}%[[VAL_5]]#1] %[[VAL_2]] : (!quake.wire, !quake.wire) -> (!quake.wire, !quake.wire)
// CHECK:           %[[VAL_7:.*]], %[[VAL_8:.*]] = quake.mz %[[VAL_6]]#0 : (!quake.wire) -> (i1, !quake.wire)
// CHECK:           %[[VAL_9:.*]], %[[VAL_10:.*]] = quake.mz %[[VAL_5]]#0 : (!quake.wire) -> (i1, !quake.wire)
// CHECK:           %[[VAL_11:.*]], %[[VAL_12:.*]] = quake.mz %[[VAL_6]]#1 : (!quake.wire) -> (i1, !quake.wire)
// CHECK:           quake.sink %[[VAL_8]] : !quake.wire
// CHECK:           quake.sink %[[VAL_10]] : !quake.wire
// CHECK:           quake.sink %[[VAL_12]] : !quake.wire
// CHECK:           return
// CHECK:         }
