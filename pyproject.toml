# ============================================================================ #
# Copyright (c) 2022 - 2024 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

[project]
name = "cuda-quantum-cu12"
dynamic = ["version"]
keywords = [ "cudaq", "cuda-quantum", "cuda", "quantum", "quantum computing", "nvidia", "high-performance computing" ]
description="Python bindings for the CUDA-Q toolkit for heterogeneous quantum-classical workflows."
authors = [{name = "NVIDIA Corporation & Affiliates"}]
maintainers = [{name = "NVIDIA Corporation & Affiliates"}]
readme = { file="python/README.md.in", content-type = "text/markdown"}
requires-python = ">=3.10"
license = { file="LICENSE" }
dependencies = [
  'astpretty ~= 3.0',
  'cuquantum-python-cu12 >= 24.11',
  'numpy >= 1.24',
  'scipy >= 1.10.1',
  'requests >= 2.31',
  'nvidia-cublas-cu12 ~= 12.0; platform_machine == "x86_64"',
  'nvidia-cuda-runtime-cu12 ~= 12.0; platform_machine == "x86_64"',
  'nvidia-cusolver-cu12 ~= 11.4; platform_machine == "x86_64"',
  'nvidia-cuda-nvrtc-cu12 ~= 12.0; platform_machine == "x86_64"'
]
classifiers = [
    'Intended Audience :: Science/Research',
    'Intended Audience :: Developers',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    "Environment :: GPU :: NVIDIA CUDA",
    "Environment :: GPU :: NVIDIA CUDA :: 11",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
]

[project.urls]
Homepage = "https://developer.nvidia.com/cuda-q"
Documentation = "https://nvidia.github.io/cuda-quantum"
Repository = "https://github.com/NVIDIA/cuda-quantum"
Releases = "https://nvidia.github.io/cuda-quantum/latest/releases.html"

# We must use h5py<3.11 because 3.11 doesn't include aarch64 Linux wheels.
# https://github.com/h5py/h5py/issues/2408
[project.optional-dependencies]
chemistry = [ "openfermionpyscf==0.5", "h5py<3.11"  ]
visualization = [ "qutip<5" , "matplotlib>=3.5" ]
# Additional torch-based integrator
integrators = [ "torchdiffeq" ]

[build-system]
requires = ["scikit-build-core==0.9.10", "cmake>=3.26,<3.29", "numpy>=1.24", "pytest==8.2.0"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
wheel.packages = ["python/cudaq"]
wheel.license-files = [ "LICENSE", "NOTICE", "CITATION.cff" ]
build-dir = "_skbuild"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.minimum-version = "3.27"
cmake.build-type = "Release"
cmake.verbose = false
cmake.args = [
    "-DCUDAQ_ENABLE_PYTHON=TRUE",
    "-DCUDAQ_DISABLE_CPP_FRONTEND=TRUE",
    "-DCUDAQ_DISABLE_TOOLS=TRUE",
    "-DCUDAQ_BUILD_TESTS=TRUE"
]

[tool.setuptools_scm]
write_to = "_version.py"
