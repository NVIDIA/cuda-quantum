[project]
name = "cuda-quantum"
dynamic = ["version"]
keywords = [ "CUDA Quantum", "Quantum Computing", "CUDA", "quantum" ]
description="Python bindings for the CUDA Quantum toolkit for heterogeneous quantum-classical workflows"
authors = [{name = "NVIDIA Corporation & Affiliates"}]
readme = "README.md"
requires-python = ">=3.8"
license = { file="LICENSE" }

[project.urls]
Documentation = "https://nvidia.github.io/cuda-quantum"
Repository = "https://github.com/NVIDIA/cuda-quantum"
Releases = "https://nvidia.github.io/cuda-quantum/latest/releases.html"

[project.optional-dependencies]
chemistry = [ "scipy==1.10.1", "openfermionpyscf==0.5" ]

[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
wheel.packages = ["python/cudaq"]
build-dir = "_skbuild"
sdist.include = ["_version.py"]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.minimum-version = "3.26"
cmake.build-type = "Release"
cmake.verbose = true
cmake.args = [ 
    "-DCMAKE_COMPILE_WARNING_AS_ERROR=OFF", # FIXME
    "-DCUDAQ_ENABLE_PYTHON=TRUE",
    "-DCUDAQ_DISABLE_CPP_FRONTEND=TRUE",
    "-DCUDAQ_BUILD_TESTS=FALSE",
    "-DCUDAQ_BUILD_SELFCONTAINED=TRUE",
    "-DLLVM_DIR=/opt/llvm/lib/cmake/llvm",
    "-DOPENSSL_ROOT_DIR=/usr/local/ssl",
    "-DBLAS_LIBRARIES=/usr/lib64/libblas.a",
]

[tool.setuptools_scm]
write_to = "_version.py"
