# ============================================================================ #
# Copyright (c) 2022 - 2023 NVIDIA Corporation & Affiliates.                   #
# All rights reserved.                                                         #
#                                                                              #
# This source code and the accompanying materials are made available under     #
# the terms of the Apache License 2.0 which accompanies this distribution.     #
# ============================================================================ #

[project]
name = "cuda-quantum"
dynamic = ["version"]
keywords = [ "cuda-quantum", "cuda", "quantum", "quantum computing", "nvidia", "high-performance computing" ]
description="Python bindings for the CUDA Quantum toolkit for heterogeneous quantum-classical workflows."
authors = [{name = "NVIDIA Corporation & Affiliates"}]
maintainers = [{name = "NVIDIA Corporation & Affiliates"}]
readme = "python/README.md"
requires-python = ">=3.8"
license = { file="LICENSE" }
dependencies = [
  'cuquantum-cu11 ~= 23.10'
]

[project.urls]
Homepage = "https://developer.nvidia.com/cuda-quantum"
Documentation = "https://nvidia.github.io/cuda-quantum"
Repository = "https://github.com/NVIDIA/cuda-quantum"
Releases = "https://nvidia.github.io/cuda-quantum/latest/releases.html"

[project.optional-dependencies]
chemistry = [ "scipy==1.10.1", "openfermionpyscf==0.5" ]

[build-system]
requires = ["scikit-build-core", "cmake>=3.26"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
wheel.packages = ["python/cudaq"]
build-dir = "_skbuild"
sdist.include = ["_version.py"]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.minimum-version = "3.26"
cmake.build-type = "Release"
cmake.verbose = false
cmake.args = [
    "-DCUDAQ_ENABLE_PYTHON=TRUE",
    "-DCUDAQ_DISABLE_CPP_FRONTEND=TRUE",
    "-DCUDAQ_DISABLE_TOOLS=TRUE",
    "-DCUDAQ_BUILD_TESTS=FALSE",
    "-DBLAS_LIBRARIES=/usr/local/blas/libblas.a",
    "-DOPENSSL_ROOT_DIR=/usr/local/openssl",
]

[tool.setuptools_scm]
write_to = "_version.py"
